<?xml version="1.0" encoding="UTF-8"?><unload unload_date="2021-07-19 09:50:52">
<sys_remote_update_set action="INSERT_OR_UPDATE">
<application display_value="Global">global</application>
<application_name>Global</application_name>
<application_scope>global</application_scope>
<application_version/>
<collisions/>
<commit_date/>
<deleted/>
<description> </description>
<inserted/>
<name>CICD Integration - 1.4.18</name>
<origin_sys_id/>
<parent display_value=""/>
<release_date/>
<remote_base_update_set display_value=""/>
<remote_parent_id/>
<remote_sys_id>5a331b732f15b850d8455aab2799b6eb</remote_sys_id>
<state>loaded</state>
<summary/>
<sys_class_name>sys_remote_update_set</sys_class_name>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:51</sys_created_on>
<sys_id>80539f732f15b850d8455aab2799b619</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:51</sys_updated_on>
<update_set display_value=""/>
<update_source display_value=""/>
<updated/>
</sys_remote_update_set>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_properties_category_m2m_bbd0f39b2f1c6010d8455aab2799b651</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_properties_category_m2m"><sys_properties_category_m2m action="INSERT_OR_UPDATE"><category display_value="CICD Integration">8d1de113dbb86380432cfc600f9619f6</category><order>70</order><property display_value="cicd-integration.ignore-delivery-conflicts" name="cicd-integration.ignore-delivery-conflicts">34503f972f1c6010d8455aab2799b6d9</property><sys_class_name>sys_properties_category_m2m</sys_class_name><sys_created_by>admin</sys_created_by><sys_created_on>2020-11-11 09:29:06</sys_created_on><sys_id>bbd0f39b2f1c6010d8455aab2799b651</sys_id><sys_mod_count>1</sys_mod_count><sys_name>cicd-integration.ignore-delivery-conflicts.CICD Integration</sys_name><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_update_name>sys_properties_category_m2m_bbd0f39b2f1c6010d8455aab2799b651</sys_update_name><sys_updated_by>admin</sys_updated_by><sys_updated_on>2020-11-11 09:30:01</sys_updated_on></sys_properties_category_m2m></record_update>]]></payload>
<payload_hash>1793474899</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:51</sys_created_on>
<sys_id>005357b32f15b850d8455aab2799b6a9</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2ca1ec0000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:51</sys_updated_on>
<table/>
<target_name>cicd-integration.ignore-delivery-conflicts.CICD Integration</target_name>
<type>Category Property</type>
<update_domain>global</update_domain>
<update_guid>d911b3db671c6010f9eb655a6813db5e</update_guid>
<update_guid_history>d911b3db671c6010f9eb655a6813db5e:1793474899,33d03fdb631c6010a06f8baf1c5867e2:-1962833141</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_script_client_8a001553db72d010fcf41780399619fe</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update sys_domain="global" table="sys_script_client"&gt;&lt;sys_script_client action="INSERT_OR_UPDATE"&gt;&lt;active&gt;true&lt;/active&gt;&lt;applies_extended&gt;true&lt;/applies_extended&gt;&lt;condition/&gt;&lt;description/&gt;&lt;field&gt;name&lt;/field&gt;&lt;global&gt;true&lt;/global&gt;&lt;isolate_script&gt;true&lt;/isolate_script&gt;&lt;messages/&gt;&lt;name&gt;[CICD] Prefill 'repository' from Name&lt;/name&gt;&lt;order/&gt;&lt;script&gt;&lt;![CDATA[/**
 * On App creation, populate the repository field based on the app name
 * 
 * @param {any} control
 * @param {any} oldValue
 * @param {any} newValue
 * @param {any} isLoading
 * @param {any} isTemplate
 * @author System Administrator [admin]
 * @memberof global.module:sys_script_client
 * @returns {undefined}
*/
function onChange(control, oldValue, newValue, isLoading, isTemplate) {
	if (isLoading || !g_form.isNewRecord() || !newValue) {
		return;
	}
	// exit if no settings defined
	if(!g_scratchpad.settings)
		return;
	if(!g_scratchpad.settings.cicdEnabled)
		return;

    var repoFieldName = 'u_repository';
    
    if(!g_form.hasField(repoFieldName))
        return;

	var sanitize = function(str){
		return str.toLowerCase().replace(/[^\w]/g, ' ').replace(/\s+/g, '_').replace(/^_+|_+$/g, '');
	};
		
	if(g_scratchpad.settings.showRepositoryField){
		// set the default value of the repository field based on the app name
		var sope = g_form.getValue('scope').trim();
		if(!sope || 'global' == sope){
			g_form.setValue(repoFieldName, sanitize(newValue));
		}
	}
}]]&gt;&lt;/script&gt;&lt;sys_class_name&gt;sys_script_client&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2020-08-28 08:12:12&lt;/sys_created_on&gt;&lt;sys_domain&gt;global&lt;/sys_domain&gt;&lt;sys_domain_path&gt;/&lt;/sys_domain_path&gt;&lt;sys_id&gt;8a001553db72d010fcf41780399619fe&lt;/sys_id&gt;&lt;sys_mod_count&gt;20&lt;/sys_mod_count&gt;&lt;sys_name&gt;[CICD] Prefill 'repository' from Name&lt;/sys_name&gt;&lt;sys_overrides/&gt;&lt;sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e"&gt;19190fabdbebd300dfa9b94ffe96193e&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="CICD Integration"&gt;19190fabdbebd300dfa9b94ffe96193e&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_script_client_8a001553db72d010fcf41780399619fe&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2020-10-21 08:53:55&lt;/sys_updated_on&gt;&lt;table&gt;sys_scope&lt;/table&gt;&lt;type&gt;onChange&lt;/type&gt;&lt;ui_type&gt;0&lt;/ui_type&gt;&lt;view/&gt;&lt;/sys_script_client&gt;&lt;/record_update&gt;</payload>
<payload_hash>1407751215</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:51</sys_created_on>
<sys_id>005357b32f15b850d8455aab2799b6ac</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2ca0330000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:51</sys_updated_on>
<table>sys_scope</table>
<target_name>[CICD] Prefill 'repository' from Name</target_name>
<type>Client Script</type>
<update_domain>global</update_domain>
<update_guid>b76f5f2c0a44e4501634c48813b9575f</update_guid>
<update_guid_history>b76f5f2c0a44e4501634c48813b9575f:1407751215,3b10dcecbd0ca45040e9091be58a8bd1:-161366191,16cd705580cf9410ad6fae7dd90a8459:1502487675,6b1cb45590cf94108e6f656e374393d0:-347867974,78abbc150ccf941077a380314f3a3ca2:-1830387764,dc5a34d166cf94101892bdc4e3735aec:-1363193006,da473c11d6cf941035b3699e2a5f946c:-50954679,2ce486932ff2d010317f548d719a90c2:874413534,0cd486d348f2d010a54135517769210c:-284333441,51940e53abf2d010d60a02cb9d92dd4b:971007622,b464829380f2d010c2040439ab529832:-1307742542,0a928adf91b2d0100b029fc5518f97e4:151022379,64f14adf6cb2d010aa0c32db6eb60200:1114369543,1cd10613e5f2d010ba7ea44c97e2edb3:-1291514046,73a106138af2d010bfafdadb009a1bc0:-133968550,eeef7d9f07b2d010972025a96ed7ad19:1672225229,72a1fd9390b2d0104f772a3de06d873e:-1192008185,981b6d13a8b2d0104e61a5e23cf2a031:-96372625,2ed09153a372d0106eda6e0b898c7148:-1557431911,534091931472d010b80241853de8fafa:1467123958,4a0055533472d010c85ef777e4768600:696507120</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_security_acl_role_77e8a7a7db6fd300dfa9b94ffe9619d6</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_security_acl_role"><sys_security_acl_role action="INSERT_OR_UPDATE"><sys_class_name>sys_security_acl_role</sys_class_name><sys_created_by>b.moers</sys_created_by><sys_created_on>2018-08-02 12:01:49</sys_created_on><sys_id>77e8a7a7db6fd300dfa9b94ffe9619d6</sys_id><sys_mod_count>0</sys_mod_count><sys_name>.cicd_integration_user</sys_name><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_security_acl display_value="/api/devops/cicd/cd">2ae86fe7db6fd300dfa9b94ffe9619bc</sys_security_acl><sys_update_name>sys_security_acl_role_77e8a7a7db6fd300dfa9b94ffe9619d6</sys_update_name><sys_updated_by>b.moers</sys_updated_by><sys_updated_on>2018-08-02 12:01:49</sys_updated_on><sys_user_role display_value="cicd_integration_user" name="cicd_integration_user">dd194b2bdbebd300dfa9b94ffe96194f</sys_user_role><transaction_id/></sys_security_acl_role></record_update>]]></payload>
<payload_hash>-474934350</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:51</sys_created_on>
<sys_id>005357b32f15b850d8455aab2799b6af</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c92190000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:51</sys_updated_on>
<table>/api/devops/cicd/cd</table>
<target_name>.cicd_integration_user</target_name>
<type>Access Roles</type>
<update_domain>global</update_domain>
<update_guid>f38200e8e277730064492c045a44c93e</update_guid>
<update_guid_history>4b7abbd0477773003c1bd29c606b48d4:-474934350,4b7abbd0477773003c1bd29c606b48d4:-474934350,4b7abbd0477773003c1bd29c606b48d4:-474934350,fdeadb3bb857a780b9d90e5606484e40:-180232956,f0192be7e76fd3001f4e59c0b329571a:936951529</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_ui_action_view_dfbde738dbe73f409775f6700f9619cd</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ui_action_view"><sys_ui_action_view action="INSERT_OR_UPDATE"><sys_class_name>sys_ui_action_view</sys_class_name><sys_created_by>b.moers</sys_created_by><sys_created_on>2019-08-26 15:41:12</sys_created_on><sys_id>dfbde738dbe73f409775f6700f9619cd</sys_id><sys_mod_count>1</sys_mod_count><sys_name>Run Preview Again.CICD Preview</sys_name><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_ui_action display_value="Run Preview Again">ee4e751b0a0a0b540067943a72e77194</sys_ui_action><sys_ui_view display_value="CICD Preview" name="cicd_preview">cdb37233db9f3f408fb6f6700f96191a</sys_ui_view><sys_update_name>sys_ui_action_view_dfbde738dbe73f409775f6700f9619cd</sys_update_name><sys_updated_by>b.moers</sys_updated_by><sys_updated_on>2019-08-26 15:41:17</sys_updated_on><visibility>exclude</visibility></sys_ui_action_view></record_update>]]></payload>
<payload_hash>-1621622159</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:51</sys_created_on>
<sys_id>005357b32f15b850d8455aab2799b6b2</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c9d0e0000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:51</sys_updated_on>
<table/>
<target_name>exclude</target_name>
<type>UI View Action</type>
<update_domain>global</update_domain>
<update_guid>2ccd27382fe73f4025bcbcc29047405d</update_guid>
<update_guid_history>2ccd27382fe73f4025bcbcc29047405d:880080553,2ccd27382fe73f4025bcbcc29047405d:880080553,f27abbd0b3777300237c1ffb27e4eea8:-1621622159,2ccd27382fe73f4025bcbcc29047405d:880080553,1bbde7389be73f400724c770c279a5cf:-1096425993</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_web_service_dcf6e204dbcc0cd09775f6700f96195d</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_web_service"&gt;&lt;sys_web_service action="INSERT_OR_UPDATE"&gt;&lt;active&gt;true&lt;/active&gt;&lt;function_name&gt;*&lt;/function_name&gt;&lt;name&gt;api/devops/cicd/source/sys_properties&lt;/name&gt;&lt;scoped_name&gt;api/devops/cicd/source/sys_properties&lt;/scoped_name&gt;&lt;script&gt;&lt;![CDATA[(function scriptedWebServiceOperation(request, response) {
	
	return new CiCdSource().instanceIdWebService(this.soapRequestXML, response);

})(request, response);]]&gt;&lt;/script&gt;&lt;short_description&gt;getKeys, getRecords&lt;/short_description&gt;&lt;sys_class_name&gt;sys_web_service&lt;/sys_class_name&gt;&lt;sys_created_by&gt;b.moers&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2019-09-17 23:07:51&lt;/sys_created_on&gt;&lt;sys_id&gt;dcf6e204dbcc0cd09775f6700f96195d&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_name&gt;api/devops/cicd/source/sys_properties&lt;/sys_name&gt;&lt;sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e"&gt;19190fabdbebd300dfa9b94ffe96193e&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="CICD Integration"&gt;19190fabdbebd300dfa9b94ffe96193e&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_web_service_dcf6e204dbcc0cd09775f6700f96195d&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;b.moers&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2019-09-17 23:07:51&lt;/sys_updated_on&gt;&lt;wsdl&gt;https://dev65672.service-now.com/api/devops/cicd/source/sys_properties.do?WSDL&lt;/wsdl&gt;&lt;wsdl_compliance&gt;false&lt;/wsdl_compliance&gt;&lt;/sys_web_service&gt;&lt;/record_update&gt;</payload>
<payload_hash>2070152453</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:52</sys_created_on>
<sys_id>005357b32f15b850d8455aab2799b6b6</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c9e240000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:52</sys_updated_on>
<table/>
<target_name>api/devops/cicd/source/sys_properties</target_name>
<type>Scripted Web Service</type>
<update_domain>global</update_domain>
<update_guid>14f6e2042acc0cd02bdcfa008ccec25f</update_guid>
<update_guid_history>14f6e2042acc0cd02bdcfa008ccec25f:-536429211,14f6e2042acc0cd02bdcfa008ccec25f:-536429211</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_documentation_sys_scope_u_repository_en</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update><sys_documentation element="u_repository" label="Repository" language="en" table="sys_scope"><sys_documentation action="INSERT_OR_UPDATE"><element>u_repository</element><help/><hint/><label>Repository</label><language>en</language><name>sys_scope</name><plural>Repositories</plural><sys_class_name>sys_documentation</sys_class_name><sys_created_by>admin</sys_created_by><sys_created_on>2020-10-20 17:36:20</sys_created_on><sys_id>ea6d00acdb0ca450fcf4178039961933</sys_id><sys_mod_count>0</sys_mod_count><sys_name>Repository</sys_name><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_update_name>sys_documentation_sys_scope_u_repository_en</sys_update_name><sys_updated_by>admin</sys_updated_by><sys_updated_on>2020-10-20 17:36:20</sys_updated_on><url/><url_target/></sys_documentation></sys_documentation></record_update>]]></payload>
<payload_hash>-1534696359</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:51</sys_created_on>
<sys_id>00539f732f15b850d8455aab2799b61b</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c9fc30000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:51</sys_updated_on>
<table>sys_scope</table>
<target_name>Application.Repository</target_name>
<type>Field Label</type>
<update_domain>global</update_domain>
<update_guid>6a6d00ac780ca4504e9a7c09e43fa442</update_guid>
<update_guid_history>6a6d00ac780ca4504e9a7c09e43fa442:-1534696359</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_properties_bcc52589dbaaefc076d6b94ffe961993</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_properties"><sys_properties action="INSERT_OR_UPDATE"><choices>HMAC hexdigest (digest of secret and body)=hmac,&#13;
match (request header secret must be identical)=match</choices><description>&lt;b&gt;Secret Validation&lt;/b&gt;&lt;br&gt;&#13;
Specify how the token shall be validated.</description><ignore_cache>false</ignore_cache><is_private>false</is_private><name>cicd-integration.pull-request-proxy.secret-validation</name><read_roles/><suffix/><sys_class_name>sys_properties</sys_class_name><sys_created_by>b.moers</sys_created_by><sys_created_on>2018-12-21 11:11:39</sys_created_on><sys_id>bcc52589dbaaefc076d6b94ffe961993</sys_id><sys_mod_count>5</sys_mod_count><sys_name>cicd-integration.pull-request-proxy.secret-validation</sys_name><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_update_name>sys_properties_bcc52589dbaaefc076d6b94ffe961993</sys_update_name><sys_updated_by>b.moers</sys_updated_by><sys_updated_on>2018-12-21 11:20:08</sys_updated_on><type>choicelist</type><value>hmac</value><write_roles/></sys_properties><sys_translated_text action="delete_multiple" query="documentkey=bcc52589dbaaefc076d6b94ffe961993"/></record_update>]]></payload>
<payload_hash>794926413</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:51</sys_created_on>
<sys_id>00539f732f15b850d8455aab2799b61e</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c9a720000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:51</sys_updated_on>
<table/>
<target_name>cicd-integration.pull-request-proxy.secret-validation</target_name>
<type>System Property</type>
<update_domain>global</update_domain>
<update_guid>e782cca86377730070e53562fce7d3c9</update_guid>
<update_guid_history>2e7abbd051777300f55af602b8184d87:794926413,2e7abbd051777300f55af602b8184d87:794926413,2e7abbd051777300f55af602b8184d87:794926413,f5b721cd5faaefc077bbba979cc915d2:758062037,6b972d8d73aaefc050f82f4e8a960d35:1190016207,6d57a58dc8aaefc03206222ebca4f8ae:871112899,9f27a94defaaefc00a7eb8188ff1d1f3:-939399140,4dd5e98927aaefc0d47c6b7ee9a76f2f:-573209176,9dc56d0d05aaefc086c075ae4aaf4cbe:-399940152</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_properties_category_m2m_957acbeadb7be7409775f6700f9619ea</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_properties_category_m2m"><sys_properties_category_m2m action="INSERT_OR_UPDATE"><category display_value="CICD Integration">8d1de113dbb86380432cfc600f9619f6</category><order>10</order><property display_value="cicd-integration.enabled.on-scoped-app" name="cicd-integration.enabled.on-scoped-app">a16a83eadb7be7409775f6700f9619b3</property><sys_class_name>sys_properties_category_m2m</sys_class_name><sys_created_by>b.moers</sys_created_by><sys_created_on>2019-02-26 13:40:58</sys_created_on><sys_id>957acbeadb7be7409775f6700f9619ea</sys_id><sys_mod_count>1</sys_mod_count><sys_name>cicd-integration.enabled.on-scoped-app.CICD Integration</sys_name><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_update_name>sys_properties_category_m2m_957acbeadb7be7409775f6700f9619ea</sys_update_name><sys_updated_by>b.moers</sys_updated_by><sys_updated_on>2019-02-26 13:43:29</sys_updated_on></sys_properties_category_m2m></record_update>]]></payload>
<payload_hash>1523698445</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:51</sys_created_on>
<sys_id>045357b32f15b850d8455aab2799b6a8</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c9bde0000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:51</sys_updated_on>
<table/>
<target_name>cicd-integration.enabled.on-scoped-app.CICD Integration</target_name>
<type>Category Property</type>
<update_domain>global</update_domain>
<update_guid>e382cca8747773005fd4fc916bb640d8</update_guid>
<update_guid_history>227abbd05e7773003019074015e67728:1523698445,227abbd05e7773003019074015e67728:1523698445,227abbd05e7773003019074015e67728:1523698445,8e0bc72e0c7be740c30adb5f0cbab7ac:1977565445,d97acbea557be740d271b0c0afac03ec:1000914371</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_script_6974615fdb72d010fcf41780399619d2</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update sys_domain="global" table="sys_script"&gt;&lt;sys_script action="INSERT_OR_UPDATE"&gt;&lt;abort_action&gt;false&lt;/abort_action&gt;&lt;access&gt;package_private&lt;/access&gt;&lt;action_delete&gt;false&lt;/action_delete&gt;&lt;action_insert&gt;true&lt;/action_insert&gt;&lt;action_query&gt;false&lt;/action_query&gt;&lt;action_update&gt;true&lt;/action_update&gt;&lt;active&gt;true&lt;/active&gt;&lt;add_message&gt;false&lt;/add_message&gt;&lt;advanced&gt;true&lt;/advanced&gt;&lt;change_fields&gt;false&lt;/change_fields&gt;&lt;client_callable&gt;false&lt;/client_callable&gt;&lt;collection&gt;sys_scope&lt;/collection&gt;&lt;condition/&gt;&lt;description/&gt;&lt;execute_function&gt;false&lt;/execute_function&gt;&lt;filter_condition/&gt;&lt;is_rest&gt;false&lt;/is_rest&gt;&lt;message/&gt;&lt;name&gt;[CICD] clean special chars 'repository' &lt;/name&gt;&lt;order&gt;100&lt;/order&gt;&lt;priority&gt;100&lt;/priority&gt;&lt;rest_method/&gt;&lt;rest_method_text/&gt;&lt;rest_service/&gt;&lt;rest_service_text/&gt;&lt;rest_variables/&gt;&lt;role_conditions/&gt;&lt;script&gt;&lt;![CDATA[(function executeRule(current, previous /*null when async*/) {

	if(current.getValue('u_repository')){
		current.setValue('u_repository', current.getValue('u_repository').replace(/[^\w]/g, ' ').replace(/\s+/g, '_'));
	}

})(current, previous);]]&gt;&lt;/script&gt;&lt;sys_class_name&gt;sys_script&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2020-08-28 09:49:54&lt;/sys_created_on&gt;&lt;sys_domain&gt;global&lt;/sys_domain&gt;&lt;sys_domain_path&gt;/&lt;/sys_domain_path&gt;&lt;sys_id&gt;6974615fdb72d010fcf41780399619d2&lt;/sys_id&gt;&lt;sys_mod_count&gt;2&lt;/sys_mod_count&gt;&lt;sys_name&gt;[CICD] clean special chars 'repository' &lt;/sys_name&gt;&lt;sys_overrides/&gt;&lt;sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e"&gt;19190fabdbebd300dfa9b94ffe96193e&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="CICD Integration"&gt;19190fabdbebd300dfa9b94ffe96193e&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_script_6974615fdb72d010fcf41780399619d2&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2020-10-20 17:51:33&lt;/sys_updated_on&gt;&lt;template/&gt;&lt;when&gt;before&lt;/when&gt;&lt;/sys_script&gt;&lt;sys_translated_text action="delete_multiple" query="documentkey=6974615fdb72d010fcf41780399619d2"/&gt;&lt;/record_update&gt;</payload>
<payload_hash>-1804622746</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:51</sys_created_on>
<sys_id>045357b32f15b850d8455aab2799b6ab</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c9fd90000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:51</sys_updated_on>
<table>sys_scope</table>
<target_name>[CICD] clean special chars 'repository' </target_name>
<type>Business Rule</type>
<update_domain>global</update_domain>
<update_guid>a5e058600a4ca4507b051916d444043e</update_guid>
<update_guid_history>a5e058600a4ca4507b051916d444043e:-1804622746,b076ed1fe472d0102062734354ae3286:-386435079,d9666d1f0c72d01016f6728fa0e3310d:953327602</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_security_acl_9041d7a3db2fd300dfa9b94ffe961910</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_security_acl"><sys_security_acl action="INSERT_OR_UPDATE"><active>true</active><admin_overrides>true</admin_overrides><advanced>false</advanced><condition/><description/><name>/api/devops/cicd/atf</name><operation display_value="execute">execute</operation><script/><sys_class_name>sys_security_acl</sys_class_name><sys_created_by>b.moers</sys_created_by><sys_created_on>2018-08-02 10:18:48</sys_created_on><sys_id>9041d7a3db2fd300dfa9b94ffe961910</sys_id><sys_mod_count>0</sys_mod_count><sys_name>/api/devops/cicd/atf</sys_name><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_update_name>sys_security_acl_9041d7a3db2fd300dfa9b94ffe961910</sys_update_name><sys_updated_by>b.moers</sys_updated_by><sys_updated_on>2018-08-02 10:18:48</sys_updated_on><type display_value="REST_Endpoint">REST_Endpoint</type></sys_security_acl></record_update>]]></payload>
<payload_hash>-339048894</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:51</sys_created_on>
<sys_id>045357b32f15b850d8455aab2799b6ae</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c91490000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:51</sys_updated_on>
<table>/api/devops/cicd/atf</table>
<target_name>/api/devops/cicd/atf</target_name>
<type>Access Control</type>
<update_domain>global</update_domain>
<update_guid>378200e88c77730043a5b04cfeeb4334</update_guid>
<update_guid_history>767abbd08b7773008f345ffef85aeebf:-339048894,767abbd08b7773008f345ffef85aeebf:-339048894,767abbd08b7773008f345ffef85aeebf:-339048894,ff719763262fd30082c85384e34f5de3:-680893968</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_ui_action_view_98ec8378db673f409775f6700f9619ae</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ui_action_view"><sys_ui_action_view action="INSERT_OR_UPDATE"><sys_class_name>sys_ui_action_view</sys_class_name><sys_created_by>b.moers</sys_created_by><sys_created_on>2019-08-26 13:17:38</sys_created_on><sys_id>98ec8378db673f409775f6700f9619ae</sys_id><sys_mod_count>1</sys_mod_count><sys_name>Insert and Stay.CICD Preview</sys_name><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_ui_action display_value="Insert and Stay">48032bf8c0a800060050c250f1337e8b</sys_ui_action><sys_ui_view display_value="CICD Preview" name="cicd_preview">cdb37233db9f3f408fb6f6700f96191a</sys_ui_view><sys_update_name>sys_ui_action_view_98ec8378db673f409775f6700f9619ae</sys_update_name><sys_updated_by>b.moers</sys_updated_by><sys_updated_on>2019-08-26 13:17:46</sys_updated_on><visibility>exclude</visibility></sys_ui_action_view></record_update>]]></payload>
<payload_hash>-1799095255</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:51</sys_created_on>
<sys_id>045357b32f15b850d8455aab2799b6b1</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c9cc40000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:51</sys_updated_on>
<table/>
<target_name>exclude</target_name>
<type>UI View Action</type>
<update_domain>global</update_domain>
<update_guid>5aecc378b9673f40637bcdaa1d759988</update_guid>
<update_guid_history>5aecc378b9673f40637bcdaa1d759988:-1951460639,5aecc378b9673f40637bcdaa1d759988:-1951460639,b27abbd0ca777300fa48ccd04ca584a1:-1799095255,5aecc378b9673f40637bcdaa1d759988:-1951460639,98ec8378c3673f40af207a44bce4d2b0:367000111</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_ui_view_fb54604ddbc02850fcf4178039961920</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ui_view"><sys_ui_view action="INSERT_OR_UPDATE"><group/><hidden>false</hidden><name>CICD</name><roles/><sys_class_name>sys_ui_view</sys_class_name><sys_created_by>admin</sys_created_by><sys_created_on>2020-10-22 08:33:36</sys_created_on><sys_id>fb54604ddbc02850fcf4178039961920</sys_id><sys_mod_count>0</sys_mod_count><sys_name>CICD</sys_name><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_update_name>sys_ui_view_fb54604ddbc02850fcf4178039961920</sys_update_name><sys_updated_by>admin</sys_updated_by><sys_updated_on>2020-10-22 08:33:36</sys_updated_on><title>CICD</title><user/></sys_ui_view></record_update>]]></payload>
<payload_hash>139169279</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:52</sys_created_on>
<sys_id>045357b32f15b850d8455aab2799b6b5</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2ca0a20000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:52</sys_updated_on>
<table/>
<target_name>CICD</target_name>
<type>UI View</type>
<update_domain>global</update_domain>
<update_guid>3354604d5ac028504dd03d968900ff86</update_guid>
<update_guid_history>3354604d5ac028504dd03d968900ff86:139169279</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_app_module_2c0de113dbb86380432cfc600f961941</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_app_module"><sys_app_module action="INSERT_OR_UPDATE"><active>true</active><application display_value="CICD Integration">91194b2bdbebd300dfa9b94ffe96194d</application><assessment/><content_page/><device_type/><filter/><hint/><homepage/><image/><link_type>DIRECT</link_type><map_page/><mobile_title>Properties</mobile_title><mobile_view_name>Mobile</mobile_view_name><name/><order/><override_menu_roles>false</override_menu_roles><query>system_properties_ui.do?sysparm_title=CICD%20Integration%20Properties&amp;sysparm_category=CICD Integration</query><report/><roles/><sys_class_name>sys_app_module</sys_class_name><sys_created_by>b.moers</sys_created_by><sys_created_on>2018-10-02 11:42:41</sys_created_on><sys_domain>global</sys_domain><sys_domain_path>/</sys_domain_path><sys_id>2c0de113dbb86380432cfc600f961941</sys_id><sys_mod_count>0</sys_mod_count><sys_name>Properties</sys_name><sys_overrides/><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_update_name>sys_app_module_2c0de113dbb86380432cfc600f961941</sys_update_name><sys_updated_by>b.moers</sys_updated_by><sys_updated_on>2018-10-02 11:42:41</sys_updated_on><timeline_page/><title>Properties</title><uncancelable>false</uncancelable><view_name/><window_name/></sys_app_module></record_update>]]></payload>
<payload_hash>-2107918321</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:51</sys_created_on>
<sys_id>04539f732f15b850d8455aab2799b61a</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c959f0000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:51</sys_updated_on>
<table/>
<target_name>Properties</target_name>
<type>Module</type>
<update_domain>global</update_domain>
<update_guid>6382cca87d7773004a2f41d42f5115bb</update_guid>
<update_guid_history>f27abbd0b97773000dd19460ca504dc6:-2107918321,f27abbd0b97773000dd19460ca504dc6:-2107918321,f27abbd0b97773000dd19460ca504dc6:-2107918321,9fad6113c6b8638001487df4e542b0bd:-403242582</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_properties_6cb8bb58db377300fcf417803996199b</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_properties"><sys_properties action="INSERT_OR_UPDATE"><choices/><description>&lt;b&gt;Tie upate set generated from scoped apps to app version&lt;/b&gt;&lt;br&gt;
Always generate update sets with the same sys_id across an application version.</description><ignore_cache>false</ignore_cache><is_private>false</is_private><name>cicd-integration.scoped-app.single-update-set</name><read_roles/><suffix/><sys_class_name>sys_properties</sys_class_name><sys_created_by>admin</sys_created_by><sys_created_on>2019-09-06 13:27:49</sys_created_on><sys_id>6cb8bb58db377300fcf417803996199b</sys_id><sys_mod_count>5</sys_mod_count><sys_name>cicd-integration.scoped-app.single-update-set</sys_name><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_update_name>sys_properties_6cb8bb58db377300fcf417803996199b</sys_update_name><sys_updated_by>admin</sys_updated_by><sys_updated_on>2019-09-24 08:29:11</sys_updated_on><type>boolean</type><value>false</value><write_roles/></sys_properties><sys_translated_text action="delete_multiple" query="documentkey=6cb8bb58db377300fcf417803996199b"/></record_update>]]></payload>
<payload_hash>-771453141</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:51</sys_created_on>
<sys_id>04539f732f15b850d8455aab2799b61d</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c9e620000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:51</sys_updated_on>
<table/>
<target_name>cicd-integration.scoped-app.single-update-set</target_name>
<type>System Property</type>
<update_domain>global</update_domain>
<update_guid>a9f02f82360c4050869e132bc7edc5d9</update_guid>
<update_guid_history>a9f02f82360c4050869e132bc7edc5d9:-495937948,a9f02f82360c4050869e132bc7edc5d9:-495937948,ad3db714dcf3fb80f76e42d41f5fd368:-360151780,c219a5609c804c1027c18452601e4e0f:-495937948,ad3db714dcf3fb80f76e42d41f5fd368:-360151780,1f2d3b1495f3fb80d877a51336fc9739:-1485254933,9f9cff547173fb80ca8f02bdcdeea821:1755270474,7d3937505a7773001b6971ae82c3164a:-2068274140,d7f8ff109b7773001c08b68e19fad6e7:1597675956,4db8f7106e7773002579ed0a7f7d7b7f:1886936552</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_properties_category_m2m_7996a94ddbaaefc076d6b94ffe9619c3</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_properties_category_m2m"><sys_properties_category_m2m action="INSERT_OR_UPDATE"><category display_value="CICD Integration">8d1de113dbb86380432cfc600f9619f6</category><order>540</order><property display_value="cicd-integration.pull-request-proxy.secret-validation" name="cicd-integration.pull-request-proxy.secret-validation">bcc52589dbaaefc076d6b94ffe961993</property><sys_class_name>sys_properties_category_m2m</sys_class_name><sys_created_by>b.moers</sys_created_by><sys_created_on>2018-12-21 11:15:15</sys_created_on><sys_id>7996a94ddbaaefc076d6b94ffe9619c3</sys_id><sys_mod_count>1</sys_mod_count><sys_name>cicd-integration.pull-request-proxy.secret-validation.CICD Integration</sys_name><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_update_name>sys_properties_category_m2m_7996a94ddbaaefc076d6b94ffe9619c3</sys_update_name><sys_updated_by>b.moers</sys_updated_by><sys_updated_on>2018-12-21 11:15:49</sys_updated_on></sys_properties_category_m2m></record_update>]]></payload>
<payload_hash>-2059863029</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:51</sys_created_on>
<sys_id>085357b32f15b850d8455aab2799b6a7</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c9a550000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:51</sys_updated_on>
<table/>
<target_name>cicd-integration.pull-request-proxy.secret-validation.CICD Integration</target_name>
<type>Category Property</type>
<update_domain>global</update_domain>
<update_guid>e782cca8f4777300d019ea4cbdb4e0d2</update_guid>
<update_guid_history>127abbd02e777300e8fa3caa9180fa21:-2059863029,127abbd02e777300e8fa3caa9180fa21:-2059863029,127abbd02e777300e8fa3caa9180fa21:-2059863029,fdb6a94d63aaefc0ec4abdd668e6e6eb:1051658115,bd96a94db8aaefc0cbff56c14513c2c5:-257099773</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_properties_e632255bdb72d010fcf41780399619b2</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_properties"><sys_properties action="INSERT_OR_UPDATE"><choices/><description>&lt;b&gt;Protect from submitting multi scope update sets.&lt;/b&gt;</description><ignore_cache>false</ignore_cache><is_private>false</is_private><name>cicd-integration.prevent.no-multi-scope-update-set</name><read_roles/><suffix/><sys_class_name>sys_properties</sys_class_name><sys_created_by>admin</sys_created_by><sys_created_on>2020-08-28 09:31:42</sys_created_on><sys_id>e632255bdb72d010fcf41780399619b2</sys_id><sys_mod_count>3</sys_mod_count><sys_name>cicd-integration.prevent.no-multi-scope-update-set</sys_name><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_update_name>sys_properties_e632255bdb72d010fcf41780399619b2</sys_update_name><sys_updated_by>admin</sys_updated_by><sys_updated_on>2021-02-17 12:08:56</sys_updated_on><type>boolean</type><value>false</value><write_roles/></sys_properties><sys_translated_text action="delete_multiple" query="documentkey=e632255bdb72d010fcf41780399619b2"/></record_update>]]></payload>
<payload_hash>687771495</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:51</sys_created_on>
<sys_id>085357b32f15b850d8455aab2799b6aa</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2ca2a80000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:51</sys_updated_on>
<table/>
<target_name>cicd-integration.prevent.no-multi-scope-update-set</target_name>
<type>System Property</type>
<update_domain>global</update_domain>
<update_guid>2c41c10b5a122854289efd4851894a86</update_guid>
<update_guid_history>2c41c10b5a122854289efd4851894a86:687771495,0cceedb3e29ca01003314f980e1e0f59:687771495,0cceedb3e29ca01003314f980e1e0f59:687771495,815a21bff15ca01083866521d1b2cd1a:687771495,815a21bff15ca01083866521d1b2cd1a:687771495,8f32255b3c72d01073e6f67e7e6f4ab5:687771495,8f32255b3c72d01073e6f67e7e6f4ab5:687771495</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_script_include_c994922edbe1a700323efc600f9619d6</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;&lt;sys_script_include action="INSERT_OR_UPDATE"&gt;&lt;access&gt;public&lt;/access&gt;&lt;active&gt;true&lt;/active&gt;&lt;api_name&gt;global.CiCdRun&lt;/api_name&gt;&lt;caller_access/&gt;&lt;client_callable&gt;false&lt;/client_callable&gt;&lt;description/&gt;&lt;name&gt;CiCdRun&lt;/name&gt;&lt;script&gt;&lt;![CDATA[/* exported CiCdRun */
/* global CiCdApi */

/**
 * CDCD Trigger to execute run in CICD Server
 * 
 * @class 
 * @author Boris Moers
 * @requires global.module:sys_script_include.CiCdApi
 * @requires sn_ws.module:sys_script_include.RESTMessageV2
 * @memberof global.module:sys_script_include
 */
var CiCdRun = Class.create();

CiCdRun.prototype = /** @lends global.module:sys_script_include.CiCdRun.prototype */ {
 
    REQUIRES_REVIEW: 'conflict_review',
 
    PROTECTED_STATES: ['complete', 'build', 'build_in_progress', 'code_review_pending', 'deployment_in_progress', 'conflict_review_in_progress', 'conflict_review_passed', 'deployment_manual_interaction'],
 
    /**
      * Polyfills for Object.assign
      * 
      * @param {any} target
      * @param {any} arg
      * @returns {any} to
      */
    assign: function (target, arg) {
        if (target === null) {
            throw new TypeError('Cannot convert undefined or null to object');
        }
        var to = Object(target);
        for (var index = 1; index &lt; arguments.length; index++) {
            var nextSource = arguments[index];
            if (nextSource != null) {
                for (var nextKey in nextSource) {
                    if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {
                        to[nextKey] = nextSource[nextKey];
                    }
                }
            }
        }
        return to;
    },
 
 
    /**
      * Constructor
      * 
      * @param {Object} settings
      * @returns {undefined}
      */
    initialize: function (settings) {
        var self = this;
 
        //var logger = new GSLog("com.sre.cicd", "CiCdRun");
        self.console = {
            /**
              * Description
              * 
              * @returns {undefined}
              */
            log: function () {
                if (arguments.length) arguments[0] = '[' + self.type + '] ' + arguments[0];
                gs.info.apply(null, arguments);
            },
            /**
              * Description
              * 
              * @returns {undefined}
              */
            warn: function () {
                if (arguments.length) arguments[0] = '[' + self.type + '] ' + arguments[0];
                gs.warn.apply(null, arguments);
            },
            /**
              * Description
              * 
              * @returns {undefined}
              */
            error: function () {
                if (arguments.length) arguments[0] = '[' + self.type + '] ' + arguments[0];
                gs.error.apply(null, arguments);
            },
            /**
              * Description
              * 
              * @returns {undefined}
              */
            debug: function () {
                if (arguments.length) arguments[0] = '[' + self.type + '] ' + arguments[0];
                gs.debug.apply(null, arguments);
            }
        };
 
        var cicdServerMatch = gs.getProperty('cicd-integration.server.url', '').match(/((?:http[s]?:\/\/)[^/]*)/i);
        var cicdServer = (cicdServerMatch) ? cicdServerMatch[1] : 'server-undefined';
 
        self.settings = self.assign({
            cicdServer: cicdServer,
            cicdEnabled: Boolean(gs.getProperty('cicd-integration.enabled', 'false') == 'true'),
            cicdOnUpdateSetEnabled: Boolean(gs.getProperty('cicd-integration.enabled.on-update-set', 'false') == 'true'),
            cicdOnScopedAppsEnabled: Boolean(gs.getProperty('cicd-integration.enabled.on-scoped-app', 'false') == 'true'),
            cicdBuildStateMessageEnabled: Boolean(gs.getProperty('cicd-integration.message.build-state', 'false') == 'true'),
            throughMidServer: Boolean(gs.getProperty('cicd-integration.server.through-mid', 'false') == 'true'),
            midServerName: gs.getProperty('cicd-integration.server.mid-server-name', self.getMidServer()),
 
            showRepositoryField: Boolean(gs.getProperty('cicd-integration.show.repository-field', 'false') == 'true'),
 
            noMultiScopeUpdateSet: Boolean(gs.getProperty('cicd-integration.prevent.no-multi-scope-update-set', 'false') == 'true'),
            addSysAppToUpdateSet: Boolean(gs.getProperty('cicd-integration.prevent.add-sys-app-to-update-set', 'false') == 'true'),
 
            skipCicdEnabled: Boolean(gs.getProperty('cicd-integration.skip-enabled', 'false') == 'true'),
 
            cicdServerRunURL: cicdServer.concat('/run'),
            cicdServerPreviewCompleteURL: cicdServer.concat('/preview-complete'),
            cicdServerDeploymentCompleteURL: cicdServer.concat('/deployment-complete'),
 
            companyCode: gs.getProperty('glide.appcreator.company.code') //x_&lt;company_code&gt;
 
        }, JSON.parse(JSON.stringify(settings || {})));
    },
 
 
    /**
      * display warning message on sys_remote_update_set
      * 
      * @param {any} current
      * @returns {undefined}
      */
    sys_remote_update_set_Display: function (current) {
        var self = this;
 
        if (!self.settings.cicdEnabled)
            return;
 
        if (gs.action.getGlideURI().getMap().get('sysparm_view') != 'cicd_preview')
            return;
 
        if (current.getValue('state') == 'committed')
            return;
 
        if (GlidePreviewProblemHandler.hasUnresolvedProblems(current.sys_id)) {
            gs.addErrorMessage('&lt;p&gt;&lt;b&gt;[CICD]&lt;/b&gt; Please resolve the conflicts below.&lt;br&gt;\'Skip\' will ignore the record during future deployments. \'Accept\' will force the record during future deployments.&lt;br&gt;If the update set contains unwanted changes, click on \'Cancel Run [CICD]\'.&lt;/p&gt;');
            current.setWorkflow(false);
        } else {
            gs.addInfoMessage('&lt;p&gt;&lt;b&gt;[CICD]&lt;/b&gt; To continue the pipeline, please confirm the preview problems now.&lt;br&gt;If the update set contains unwanted changes, click on \'Cancel Run [CICD]\'.&lt;/p&gt;');
            current.setWorkflow(false);
        }
 
    },
 
    /**
      * Display link to build state on sys_update_set
      * 
      * @param {any} current
      * @returns {undefined}
      */
    sys_update_set_Display: function (current) {
        var self = this;
 
        if (!self.settings.cicdEnabled)
            return;
 
        if (!self.settings.cicdBuildStateMessageEnabled)
            return;
 
        if (gs.nil(current))
            return;
 
        if (!gs.nil(current.installed_from))
            return;
 
        var url = self.settings.cicdServer.concat('/goto/us/').concat(current.getValue('sys_id'));
 
        //gs.flushMessages();
 
        var cicdSkipped = self.cicdSkipped();
        if (cicdSkipped) {
            return gs.addInfoMessage('CICD disabled');
        }
 
        var scopes = self.getUpdateSetScopeApplications(current);
        if (self.settings.noMultiScopeUpdateSet &amp;&amp; scopes.length &gt; 1) {
            var apps = scopes.map(function (scope) {
                return '\''.concat(scope.name, ' (' + scope.num + ')', '\'');
            }).join(', ');
            gs.addErrorMessage('This update set has customer updates of multiple scopes: ' + apps + '.&lt;br&gt;&lt;i class="notification-icon icon-warning-circle"&gt;&lt;/i&gt; Please ensure this update set has one scope only.');
            return false;
        }
        if (scopes.length == 1) {
            var scope = scopes[0];
            if ('global' == scope.id) {
                return gs.addInfoMessage('CICD disabled for "global" scope.');
            }
        }
 
        switch (current.getValue('state')) {
 
        case 'conflict_review_in_progress':
            gs.addInfoMessage('CICD: Conflict review in &lt;a href="'.concat(url).concat('" target="_blank"&gt;progress&lt;/a&gt;'));
            break;
 
        case 'conflict_review_passed':
            gs.addInfoMessage('CICD: Conflict review &lt;a href="'.concat(url).concat('" target="_blank"&gt;passed&lt;/a&gt;'));
            break;
 
        case 'build':
            gs.addInfoMessage('CICD: Build is &lt;a href="'.concat(url).concat('" target="_blank"&gt;requested&lt;/a&gt;'));
            break;
 
        case 'build_in_progress':
            gs.addInfoMessage('CICD: Build is in &lt;a href="'.concat(url).concat('" target="_blank"&gt;progress&lt;/a&gt;'));
            break;
 
        case 'code_review_pending':
            gs.addInfoMessage('CICD: Code review &lt;a href="'.concat(url).concat('" target="_blank"&gt;pending&lt;/a&gt;'));
            break;
 
        case 'code_review_rejected':
            gs.addErrorMessage('CICD: Code review &lt;a href="'.concat(url).concat('" target="_blank"&gt;rejected&lt;/a&gt;'));
            break;
 
        case 'deployment_in_progress':
            gs.addInfoMessage('CICD: Deployment in &lt;a href="'.concat(url).concat('" target="_blank"&gt;progress&lt;/a&gt;'));
            break;
 
        case 'deployment_manual_interaction':
            gs.addInfoMessage('CICD: Deployment requires manual &lt;a href="'.concat(url).concat('" target="_blank"&gt;interaction&lt;/a&gt;'));
            break;
 
        case 'build_failed':
            gs.addErrorMessage('CICD: Build &lt;a href="'.concat(url).concat('" target="_blank"&gt;failed&lt;/a&gt;'));
            break;
 
        case 'complete':
            gs.addInfoMessage('CICD: Build is &lt;a href="'.concat(url).concat('" target="_blank"&gt;complete&lt;/a&gt;'));
            break;
 
        default:
 
        }
    },
 
 
 
    /**
      * Async inform CICD server if sys_remote_update_set is completed
      * 
      * @param {any} current
      * @returns {undefined}
      */
    sys_remote_update_set_After_IU: function (current) {
        var self = this;
 
        if (!self.settings.cicdEnabled)
            return;
 
        if (current.state.changesTo('committed')) {
            var resolutions = self.getResolutions(current.getValue('sys_id'));
 
            self.deploymentComplete({
                isInteractive: gs.isInteractive(),
                remoteUpdateSetID: current.getValue('sys_id'),
                resolutions: resolutions
            });
        }
    },
 
    /**
      * Ensure the update set state is not changed back during a CICD run
      * 
      * @param {GlideRecord} current
      * @param {any} previous
      * @returns {boolean}
      */
    isUpdateSetStateChangeValid: function (current, previous) {
        var self = this;
 
        if (!current)
            return false;
 
        var state = current.getValue('state');
        var prevState = previous.getValue('state');
 
        // don't allow user to change the state during a CICD run
        // except to 'Do not transport' and 'ignore'
        if (current.state.changes() &amp;&amp; !current.state.changesTo('Do not transport') &amp;&amp; !current.state.changesTo('ignore') &amp;&amp; self.PROTECTED_STATES.indexOf(prevState) != -1) {
            gs.addErrorMessage('You can\'t manually change the state from \'' + prevState + '\' to \'' + state + '\'');
            current.state.setValue(prevState);
            return false;
        }
 
        return true;
    },
 
    /**
      * Get the scope of the updates set. In case of global the scope is derived from the customer updates.
      * 
      * @param {GlideRecord} current the update set
      * @returns {Array} list of scopes found in the current update set
      */
    getUpdateSetScopeApplications: function (current) {
        var self = this;
 
        /**
          * Description
          * 
          * @param {any} name
          * @returns {any}
          */
        var sanitizeRepo = function (name) {
            return name.toLowerCase().replace(/[^\w]/g, ' ').replace(/\s+/g, '_').replace(/^_+|_+$/g, '');
        };
 
        if (current.application.scope.toString().toLowerCase() != 'global') {
            return {
                repository: sanitizeRepo(current.application.getRefRecord().isValidField('u_repository') ? current.application.u_repository.toString() || current.application.scope.toString() : current.application.scope.toString()),
                id: current.getValue('application'),
                name: current.getDisplayValue('application'),
            };
        }
 
        /*
             The update set of Global scoped applications is also in the global scope
             the only way of identifying the scope is checking the customer updates in the update set.
         */
        var agg = new GlideAggregate('sys_update_xml');
        agg.addQuery('update_set', current.getValue('sys_id'));
        agg.addAggregate('COUNT', 'application');
        agg.orderBy('application');
        agg.query();
 
        var scopes = [];
 
        while (agg.next()) {
            scopes.push({
                name: agg.getDisplayValue('application'),
                repository: agg.application.getRefRecord().isValidField('u_repository') ? agg.application.u_repository.toString() : undefined,
                id: agg.getValue('application'),
                num: agg.getAggregate('COUNT', 'application')
            });
        }
 
        return scopes.map(function (scope) {
            scope.repository = sanitizeRepo(scope.repository || scope.name);
            return scope;
        });
    },
 
    /**
      * Add the application record (sys_app) to the current update set
      * 
      * @param {GlideRecord} current the update set
      * @param {GlideRecord} application the application
      * @returns {undefined}
      */
    addApplicationToUpdateSet: function (current, application) {
        var self = this;
 
        // auto add sys_app to the update set
        if (self.settings.addSysAppToUpdateSet) {
 
            var updateSetSysId = current.getValue('sys_id');
            var applicationSysId = application.getValue('sys_id');
 
            var us = new GlideRecord('sys_update_set');
            if (!us.get(updateSetSysId))
                throw Error('update set not found');
 
            var sc = new GlideRecord('sys_app');
            if (!sc.get(applicationSysId))
                throw Error('application not found');
 
            var gr = new GlideRecord('sys_update_xml');
            gr.addQuery('update_set', updateSetSysId);
            gr.addQuery('name', 'sys_app_'.concat(applicationSysId));
            gr.setLimit(1);
            gr.query();
            if (!gr.next()) {
 
                // keep the current state for later
                var prev = us.getValue('state');
 
                // set the update set to in progress again
                us.setWorkflow(false);
                us.setValue('state', 'in progress');
                us.update();
 
                var gus = new GlideUpdateSet();
 
                // save the current active update set for later
                var currentUS = gus.get();
 
                // make the update set active
                gus.set(us.getValue('sys_id'));
 
                var usm = new GlideUpdateManager2();
                // add the app to the update set
                usm.saveRecord(sc);
 
                // make the update set as it was before
                us.setValue('state', prev);
                us.update();
 
                // and make the previous update set active again
                if (gus.get().toString() != currentUS) {
                    gus.set(currentUS);
                }
 
                gs.addInfoMessage('The application record was automatically added to this update set');
 
            }
        }
    },
 
    /**
      * Description
      * 
      * @param {any} name
      * @returns {undefined}
      */
    _getParam: function (name) {
        if (gs.action &amp;&amp; typeof gs.action.getGlideURI !== 'undefined') {
            var map = gs.action.getGlideURI().getMap();
            if (!map)
                return;
            if (!map.containsKey(name))
                return;
 
            return map.get(name).toString();
        }
        return;
    },
 
    /**
      * Description
      * 
      * @returns {BinaryExpression}
      */
    cicdSkipped: function () {
        var self = this;
         
        if(!self.settings.skipCicdEnabled){
            return false;
        }
 
        var refUrl = self._getParam('sysparm_referring_url');
        if (!refUrl)
            return false;
 
        var keyValues = refUrl.split('&amp;');
        var map = keyValues.reduce(function (out, kv) {
            var tupl = kv.split('=');
            out[tupl[0]] = tupl[1];
            return out;
        }, {});
        return ('true' == map.sysparm_skip_cicd);
    },
 
    /**
      * Example implementation of a Business-Rule to trigger the CICD Pipeline
      * 
      * @param {GlideRecord} current
      * @param {GlideRecord} previous
      * @returns {undefined}
      */
    sys_update_set_Before_IU: function (current, previous) {
        var self = this;
 
        if (!self.settings.cicdEnabled)
            return;
 
        if (!self.settings.cicdOnUpdateSetEnabled)
            return;
 
        if (gs.nil(current))
            return;
 
        if (!gs.isInteractive())
            return;
 
        var cicdSkipped = self.cicdSkipped();
        if (cicdSkipped) {
            //gs.action.getGlideURI().getMap().remove('sysparm_referring_url');
            return;
        }
 
        var scopes = self.getUpdateSetScopeApplications(current);
        if (scopes.length == 1) {
            var scope = scopes[0];
            if ('global' == scope.id) {
                return;
            }
        }
 
        // don't allow user to change the state during a CICD run
        var valid = self.isUpdateSetStateChangeValid(current, previous);
        if (!valid) {
            if(self.settings.skipCicdEnabled){
                gs.addInfoMessage('To disable CICD click ' + ['&lt;a href="/', current.getLink(true), '&amp;sysparm_referring_url=sysparm_skip_cicd%3Dtrue"&gt;here&lt;/a&gt;'].join(''));
            }
            current.setAbortAction(true);
            return;
        }
 
        if (current.state.changesTo('complete')) {
 
             
            var prevState = previous.getValue('state');
            // check if the update_set_xml records are all of the same application
 
            var scopeIssues = (function () {
                if (scopes.length == 0) {
                    gs.addErrorMessage('This update set contains no customer updates. Please add at least one change.');
                    return true;
                }
 
                if (self.settings.noMultiScopeUpdateSet &amp;&amp; scopes.length &gt; 1) {
                    return true;
                }
            })();
 
            if (scopeIssues) {
                if(self.settings.skipCicdEnabled){
                    gs.addInfoMessage('To disable CICD click ' + ['&lt;a href="/', current.getLink(true), '&amp;sysparm_referring_url=sysparm_skip_cicd%3Dtrue"&gt;here&lt;/a&gt;'].join(''));
                }
                current.state.setValue(prevState);
                current.setAbortAction(true);
                return;
            }
 
            var appDetails = scopes[0];
 
            // if required, add custom application to the update set    
            var app = new GlideRecord('sys_app');
            if (app.get(appDetails.id))
                self.addApplicationToUpdateSet(current, app);
 
            try {
                // CICD enabled, run 
                current.setValue('state', 'build');
 
                self.now({
                    updateSet: current.getValue('sys_id'), // the update set to send to the pipeline
                    application: {
                        id: appDetails.id,                 // the id of the scope (or any other container grouping the application)
                        name: appDetails.name              // the name of the application
                    },
                    git: {
                        repository: appDetails.repository
                    }
                });
            } catch (e) {
                self.console.error(e);
                gs.addErrorMessage(e);
            }
        }
    },
 
 
    /**
      * Helper function to check if there is already a pending job for an application
      * (via the auto generated update set)
      * 
      * @param {any} currentSysApp
      * @returns {ConditionalExpression}
      */
    _getAppUpdateSetInProgress: function (currentSysApp) {
        var self = this;
        if (!self.settings.cicdEnabled)
            return false;
        if (gs.nil(currentSysApp))
            return false;
 
        var singleUpdateSet = Boolean(gs.getProperty('cicd-integration.scoped-app.single-update-set', 'false') == 'true');
        if (!singleUpdateSet)
            return false;
 
        var sysId = new GlideChecksum(currentSysApp.getValue('name').concat(currentSysApp.getValue('version'), currentSysApp.getValue('sys_id'), gs.getProperty('instance_name'))).getMD5();
 
        var checkUs = new GlideRecord('sys_update_set');
        checkUs.addQuery('sys_id', sysId);
        checkUs.addQuery('state', '!=', 'complete');
        checkUs.addQuery('state', '!=', 'ignore');
        checkUs.addQuery('state', '!=', 'Do not transport');
        checkUs.setLimit(1);
        checkUs.query();
        return (checkUs._next()) ? checkUs : false;
    },
 
    /**
      * UI Action condition function to show or hide the "Build this Application [CICD]" button
      * 
      * @param {any} currentSysApp
      * @returns {ConditionalExpression}
      */
    showBuildThisApplicationUiAction: function (currentSysApp) {
        var self = this;
 
        if (!self.settings.cicdEnabled)
            return false;
 
        if (!self.settings.cicdOnScopedAppsEnabled)
            return false;
 
        if (gs.nil(currentSysApp))
            return false;
 
        if (currentSysApp.vendor == 'ServiceNow')
            return false;
 
        if (!currentSysApp.canWrite())
            return false;
 
        return (self._getAppUpdateSetInProgress(currentSysApp)) ? false : true;
    },
 
    /**
      * Display Business Rule on sys_app
      * 
      * @param {any} currentSysApp
      * @returns {undefined}
      */
    sys_app_Display: function (currentSysApp) {
        var self = this;
 
        g_scratchpad.settings = self.settings;
 
        if (!self.settings.cicdEnabled)
            return;
 
        if (!self.settings.cicdOnScopedAppsEnabled)
            return;
 
        if (gs.nil(currentSysApp))
            return;
 
        // only show the message if there is a update set in progress
        var us = self._getAppUpdateSetInProgress(currentSysApp);
        if (us) {
            var url = self.settings.cicdServer.concat('/goto/us/').concat(us.getValue('sys_id'));
            return gs.addInfoMessage('There is a CICD run in &lt;a href="' + url + '" target="_blank"&gt;progress&lt;/a&gt; for this application.&lt;br&gt;Please wait for it to end or in case of failure set the &lt;a href="' + us.getLink(true) + '"&gt;update set&lt;/a&gt; to \'ignore\' state and start over again.');
        }
    },
 
    /**
      * UI Action on sys_app to trigger the CICD Pipeline
      * 
      * @param {GlideRecord} currentSysApp
      * @returns {undefined}
      */
    sys_appUiAction: function (currentSysApp) {
        var self = this;
        try {
            if (!self.settings.cicdEnabled)
                return;
 
            if (!self.settings.cicdOnScopedAppsEnabled)
                return;
 
            if (gs.nil(currentSysApp))
                return;
 
            if (!gs.isInteractive())
                return;
 
            var cicdApi = new CiCdApi();
            var scopedUpdateSet = cicdApi.publishToUpdateSet(currentSysApp.getValue('sys_id'));
 
            gs.addInfoMessage('Application exported as &lt;a href="/sys_update_set.do?sys_id=' + scopedUpdateSet.updateSetSysId + '"&gt;update set&lt;/a&gt;. CICD Process started.');
 
            var us = new GlideRecord('sys_update_set');
            if (!us.get(scopedUpdateSet.updateSetSysId))
                throw Error('update set creation failed');
 
            // extract the application details from the update set 
            var scopes = self.getUpdateSetScopeApplications(us);
            if (scopes.length == 0){
                throw Error('application details not found');
            }
 
            var appDetails = scopes[0];
            if ('global' == appDetails.id) {
                return gs.addInfoMessage('CICD disabled for "global" scope.');
            }
 
            self.now({
                updateSet: scopedUpdateSet.updateSetSysId,
                application: {
                    id: appDetails.id,     // the id of the scope (or any other container grouping the application)
                    name: appDetails.name  // the name of the application
                },
                git: {
                    repository: appDetails.repository
                }
            });
 
        } catch (e) {
 
            if (e.code == 'ALREADY_RUNNING') {
                return gs.addErrorMessage('There is already a &lt;a href="' + e.link + '"&gt;CICD run&lt;/a&gt; in progress for this application.');
            }
 
            gs.error(e);
        }
    },
 
 
 
    /**
      * Rule to display the cancel ui action
      * 
      * @param {any} current
      * @returns {LogicalExpression}
      */
    sys_remote_updateDisplayCancelUiAction: function (current) {
        return (gs.getProperty('cicd-integration.enabled', 'false') == 'true' &amp;&amp; current.state == 'conflict_review' &amp;&amp; current.canWrite());
    },
 
    /**
      * UI Action on sys_remote_update to cancel CICD run
      * 
      * @param {GlideRecord} current
      * @param {any} action
      * @returns {undefined}
      */
    sys_remote_updateCancelUiAction: function (current, action) {
        var self = this;
 
        if (!self.settings.cicdEnabled)
            return;
 
        if (gs.nil(current))
            return;
 
        if (!gs.isInteractive())
            return;
 
        if (current.getValue('state') != self.REQUIRES_REVIEW)
            return gs.addErrorMessage('This update set is not in the conflict preview state');
 
        try {
            var result = self.preview({
                doCancel: true,
                remoteUpdateSetID: current.getValue('sys_id')
            });
            current.deleteRecord();
            action.setRedirectURL(self.settings.cicdServer.concat(result.url));
        } catch (e) {
            self.console.error(e);
            gs.addErrorMessage(e);
            action.setRedirectURL(current);
        }
    },
 
 
    /**
      * Rule to display the confirm ui action
      * 
      * @param {any} current
      * @returns {LogicalExpression}
      */
    sys_remote_updateDisplayConfirmUiAction: function (current) {
        return (gs.getProperty('cicd-integration.enabled', 'false') == 'true' &amp;&amp; current.state == 'conflict_review' &amp;&amp; !GlidePreviewProblemHandler.hasUnresolvedProblems(current.sys_id) &amp;&amp; current.canWrite());
    },
 
 
    /**
      * UI Action on sys_remote_update to confirm collisions
      * 
      * @param {GlideRecord} current
      * @param {any} action
      * @returns {undefined}
      */
    sys_remote_updateConfirmUiAction: function (current, action) {
        var self = this;
 
        if (!self.settings.cicdEnabled)
            return;
 
        if (gs.nil(current))
            return;
 
        if (!gs.isInteractive())
            return;
 
        if (current.getValue('state') != self.REQUIRES_REVIEW)
            return gs.addErrorMessage('This update set is not in the conflict preview state');
 
 
        var resolutions = self.getResolutions(current.getValue('sys_id'));
 
        try {
            var result = self.preview({
                doCancel: false,
                remoteUpdateSetID: current.getValue('sys_id'),
                resolutions: resolutions
            });
            current.deleteRecord();
            action.setRedirectURL(self.settings.cicdServer.concat(result.url));
        } catch (e) {
            self.console.error(e);
            gs.addErrorMessage(e);
            action.setRedirectURL(current);
        }
    },
 
 
    /**
      * Get all resolutions of a remote_update_set
      * 
      * @param {string} remoteUpdateSetID the sysId of the remote_update_set
      * @returns {any}
      */
    getResolutions: function (remoteUpdateSetID) {
        var resolutions = {};
        var prb = new GlideRecord('sys_update_preview_problem');
        prb.addQuery('remote_update_set', remoteUpdateSetID);
        prb.query();
        while (prb._next()) {
 
            var updateName = prb.remote_update.getRefRecord().getValue('name');
 
            var file = new GlideRecord('sys_metadata');
            var sysId = null,
                className = null,
                updatedOn = 0;
 
            if (file.get('sys_update_name', updateName)) {
                sysId = file.getValue('sys_id');
                className = file.getValue('sys_class_name');
                updatedOn = new GlideDateTime(file.getValue('sys_updated_on')).getNumericValue();
            } else {
                // fall back in case of e.g. 'sys_app'
                const m = updateName.match(/(^.*)_([0-9a-f]{32})$/m);
                if (m) {
                    sysId = m[2];
                    className = m[1];
                    file = new GlideRecord(className);
                    if (file.get(sysId)) {
                        updatedOn = new GlideDateTime(file.getValue('sys_updated_on')).getNumericValue();
                    }
                }
            }
 
            resolutions[updateName] = {
                status: prb.getValue('status'), // skipped = 'Skip remote update'; ignored = 'Accept remote update',
                resolvedBy: (prb.getValue('status')) ? prb.getValue('sys_updated_by') : null,
                sysId: sysId,
                className: className,
                updatedOn: updatedOn,
                host: gs.getProperty('glide.servlet.uri'),
            };
        }
        return resolutions;
    },
 
 
    /**
      * Send preview results back to CICD pipeline.
      * 
      * @param {any} opts for options see below
      * @returns {undefined}
      */
    preview: function (opts) {
 
        var self = this;
 
        if (!self.settings.cicdEnabled)
            return;
 
        if (gs.nil(self.settings.cicdServerPreviewCompleteURL)) {
            throw '[preview] Endpoint not defined';
        }
 
        var user = gs.getUser();
        var options = self.assign({
            doCancel: true,
            remoteUpdateSetID: null,
            user: {
                name: user.getName(),       // the person confirmed the collision
                fullName: user.getFullName(),   // full name of that person
                email: user.getEmail()          // email of same
            },
            resolutions: {}
        }, JSON.parse(JSON.stringify(opts || {})));
 
 
        if (!options.doCancel &amp;&amp; GlidePreviewProblemHandler.hasUnresolvedProblems(options.remoteUpdateSetID)) {
            throw '[preview] Update set has unresolved problems';
        }
 
        self.console.log('[preview] sending data to target: {0}', self.settings.cicdServerPreviewCompleteURL);
 
        var request = new sn_ws.RESTMessageV2();
        if (self.settings.throughMidServer) {
            if (gs.nil(self.settings.midServerName))
                throw '[previewComplete] MID Server not defined';
            request.setMIDServer(self.settings.midServerName);
        }
 
        self.console.log('[preview] Settings {0}', JSON.stringify(self.settings));
        self.console.log('[preview] Options {0}', JSON.stringify(options));
 
        request.setEndpoint(self.settings.cicdServerPreviewCompleteURL);
        request.setRequestHeader('Accept', 'application/json');
        request.setRequestHeader('Content-Type', 'application/json');
        request.setHttpMethod('POST');
 
        request.setRequestBody(JSON.stringify(options));
 
        var response = request.execute(); // Async somehow does not perform
        if (!response.haveError()) {
            try {
                var responseText = response.getBody(),
                    responseJson = JSON.parse(responseText);
                if (responseJson) {
                    // TODO
                    // check response body for successful build start
                    self.console.log('[preview] successful - result is: {0}, text: {1}', responseJson, responseText);
                    return responseJson;
                }
            } catch (e) {
                self.console.error('[preview] JSON parsing failed. {0}', e);
                throw e;
            }
 
        } else {
            var statusCode = response.getStatusCode();
            self.console.error('[preview] request ended in error - StatusCode {0}, ResponseMessage: {1}, Endpoint: {2}, RequestBody: {3}', statusCode, response.getErrorMessage(), self.settings.cicdServerPreviewCompleteURL, options);
            throw new Error(response.getErrorMessage());
        }
 
    },
 
 
    /**
      * Send deployment completed results back to CICD pipeline.
      * 
      * @param {any} opts for options see below
      * @returns {undefined}
      */
    deploymentComplete: function (opts) {
        var self = this;
 
        if (!self.settings.cicdEnabled)
            return;
 
        var user = gs.getUser();
        var options = self.assign({
            remoteUpdateSetID: null,
            host: gs.getProperty('glide.servlet.uri'),
            user: {
                name: user.getName(),
                fullName: user.getFullName(),
                email: user.getEmail()
            },
            resolutions: {}
        }, JSON.parse(JSON.stringify(opts || {})));
 
 
        var request = new sn_ws.RESTMessageV2();
        if (self.settings.throughMidServer) {
            if (gs.nil(self.settings.midServerName))
                throw '[deploymentComplete] MID Server not defined';
            request.setMIDServer(self.settings.midServerName);
        }
 
        self.console.log('[deploymentComplete] Settings {0}', JSON.stringify(self.settings));
        self.console.log('[deploymentComplete] Options {0}', JSON.stringify(options));
 
        request.setEndpoint(self.settings.cicdServerDeploymentCompleteURL);
        request.setRequestHeader('Accept', 'application/json');
        request.setRequestHeader('Content-Type', 'application/json');
        request.setHttpMethod('POST');
 
        request.setRequestBody(JSON.stringify(options));
 
        var response = request.execute(); // Async somehow does not perform
        if (!response.haveError()) {
            try {
                var responseText = response.getBody(),
                    responseJson = JSON.parse(responseText);
                if (responseJson) {
                    self.console.log('[deploymentComplete] successful - result is: {0}, text: {1}', responseJson, responseText);
                    return responseJson;
                }
            } catch (e) {
                self.console.error('[deploymentComplete] JSON parsing failed. {0}', e);
                throw e;
            }
 
        } else {
            var statusCode = response.getStatusCode();
            self.console.error('[deploymentComplete] request ended in error - StatusCode {0}, ResponseMessage: {1}, Endpoint: {2}, RequestBody: {3}', statusCode, response.getErrorMessage(), self.settings.cicdServerDeploymentCompleteURL, options);
            throw new Error(response.getErrorMessage());
        }
 
    },
 
 
    /**
      * Send an Update-Set to the CICD Pipeline.
      * 
      * @param {any} opts for options see below
      * @returns {undefined}
      */
    now: function (opts) {
        var self = this;
 
        if (!self.settings.cicdEnabled)
            return;
 
        var user = gs.getUser();
 
        var options = self.assign({
            updateSet: null,                    // the sys_id of the update set or an application object {application: 'sys_id'} to be extracted
            application: {
                id: null,                       // either the sys_id of an application (scope) or the id of a container grouping files
                name: 'undefined'               // the name of the application / container
            },
            requestor: {
                userName: user.getName(),       // the person requesting the CICD pipeline to run
                fullName: user.getFullName(),   // full name of that person
                email: user.getEmail()          // email of same
            },
            atf: {
                updateSetOnly: false            // [optional] set to true if only ATF test IN the update-set shall be executed. if false it runs all test of the application.
            },
            git: {
                repository: 'undefined',        // git repo. e.g. 'sn-cicd.git'
                remoteUrl: null,                // [optional] repo full url with out git repo appended. e.g. 'ssh://git@github.com/project/repo.git'
                url: null                       // [optional] repo full url with out git repo appended. e.g. 'https://github.com/project/repo'
            },
            source: {
                name: gs.getProperty('glide.servlet.uri') // the source system of the update set e.g. https://companydev.service-now.com
            },
            master: {
                name: null                      // the master system of the update set. this must be production-like e.g. https://companypreprod.service-now.com
            },
            target: {
                name: null                      // the target system to deploy the update set e.g. https://companytest.service-now.com
            },
            preflight: {
                name: null                      // [optional] the system to be used in the preflight phase e.g. https://companytest.service-now.com
            }
        }, JSON.parse(JSON.stringify(opts || {})));
 
        if (gs.nil(self.settings.cicdServerRunURL)) {
            throw 'Endpoint not defined';
        }
 
        self.console.log('sending data to target: {0}', self.settings.cicdServerRunURL);
 
        var request = new sn_ws.RESTMessageV2();
        if (self.settings.throughMidServer) {
            if (gs.nil(self.settings.midServerName))
                throw 'MID Server not defined';
            request.setMIDServer(self.settings.midServerName);
        }
 
        self.console.log('Settings {0}', JSON.stringify(self.settings));
        self.console.log('Options {0}', JSON.stringify(options));
 
        request.setEndpoint(self.settings.cicdServerRunURL);
        request.setRequestHeader('Accept', 'application/json');
        request.setRequestHeader('Content-Type', 'application/json');
        request.setHttpMethod('POST');
 
        request.setRequestBody(JSON.stringify(options));
 
        var response = request.execute(); // Async somehow does not perform
        if (!response.haveError()) {
            try {
                var responseText = response.getBody(),
                    responseJson = JSON.parse(responseText);
                if (responseJson) {
                    // TODO
                    // check response body for successful build start
                    self.console.log('successful - result is: {0}, text: {1}', responseJson, responseText);
                    return responseJson;
                }
            } catch (e) {
                self.console.error('JSON parsing failed. {0}', e);
                throw e;
            }
 
        } else {
            var statusCode = response.getStatusCode();
            self.console.error('request ended in error - StatusCode {0}, ResponseMessage: {1}, Endpoint: {2}, RequestBody: {3}', statusCode, response.getErrorMessage(), self.settings.cicdServerRunURL, options);
            throw new Error(response.getErrorMessage());
        }
 
    },
 
    /**
      * Get one active mid server
      * 
      * @returns {any} name
      */
    getMidServer: function () {
        var name = null;
        var mid = new GlideRecord('ecc_agent');
        mid.addQuery('status', 'Up');
        mid.setLimit(1);
        mid.query();
        if (mid._next()) {
            name = mid.name.toString();
        }
        return name;
    },
 
    type: 'CiCdRun'
};
 ]]&gt;&lt;/script&gt;&lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;&lt;sys_created_by&gt;b.moers&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2018-11-06 13:24:41&lt;/sys_created_on&gt;&lt;sys_id&gt;c994922edbe1a700323efc600f9619d6&lt;/sys_id&gt;&lt;sys_mod_count&gt;100&lt;/sys_mod_count&gt;&lt;sys_name&gt;CiCdRun&lt;/sys_name&gt;&lt;sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e"&gt;19190fabdbebd300dfa9b94ffe96193e&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="CICD Integration"&gt;19190fabdbebd300dfa9b94ffe96193e&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_script_include_c994922edbe1a700323efc600f9619d6&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-07-19 09:48:18&lt;/sys_updated_on&gt;&lt;/sys_script_include&gt;&lt;/record_update&gt;</payload>
<payload_hash>1270921322</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:51</sys_created_on>
<sys_id>085357b32f15b850d8455aab2799b6ad</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2ca44d0000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:51</sys_updated_on>
<table/>
<target_name>CiCdRun</target_name>
<type>Script Include</type>
<update_domain>global</update_domain>
<update_guid>66b21373d115b850896030c98bd6c069</update_guid>
<update_guid_history>66b21373d115b850896030c98bd6c069:1270921322,e6d9ee1b6b6c78109d5b1ca1f91f1a52:924009978,f24722979c6c7810d7b37c9e037fafe1:-667147933,b3566e57916c781043e504b498704ee6:-1923245436,cdd4a617756c7810de4452664a37c3a0:-728197136,0d6466d36a6c7810c56fc5fbab7d5cff:-854520252,8ff26e13996c7810992e8ca3e4eac305:-811504887,868266537d6c7810dd8d519ca37a10a9:303782269,013266537d6c781076b3e30ce8f15a83:-1379127180,7e912e13066c7810abd6db0d5f53d413:-2087241932,6b1c9edbdb2c78108c845f3b16b16313:-1045884976,807b969bc42c7810aa3e2b11ad6aa116:1718822704,b1ba9a1b5f2c7810369cdd0b49181a9f:2006356672,8de69657672c7810fe75d54d315edc37:-1552775360,ae86d257002c7810750a350fb4f2a9b8:228716827,b3161a57522c78102d0499650fce7feb:668663092,46555e57502c78107a36e3ac08ab81aa:1087906542,1ab41e5fa3e878100ef642372a5e70a9:-175806154,0c44da17ff2c781010acb0484e412f8c:1670897851,8db3d217a32c7810e5e07a2a126f3322:873632514,cfa25e5f02e8781058ceb2bd8601862f:696146308,65fc4e9bd2e8781026520eecf46f97b6:-792577962,4ee74e97f2e87810317b619f1f70b74d:-1377572335,bc378ad74ee87810ce31d3f6c87ae9a5:-617979330,42664e5753e8781011d523f6588a6e0f:-1039811298,347386931ce87810bd64dc0b26171752:1433802880,67714e53a8e878102b9931b0d0d395ac:718454129,a7de311395e87810ab859f9d6105b043:102587839,4aecbddf8ba8781004ace986059208c1:-846813413,b81bf1db67a8781014c061d189571384:1320051361,b096a68f9a207810cedd817e47e9ce11:-1650516188,2ff9b310f80ca450da7ec4658a19a1fb:1446324684,144bc19da0cf9410b979ba6d0bb1bb6c:1454883653,a8e8015dedcf94107ed051ae9aa0a6ce:-524290724,11ef78d569cf9410dd44bbefd8a07b2d:-2054780131,a24b5081aa8794107d98306e9507efa7:1082434821,4b286a5f8836d010aba57d544836876d:-480706542,8f42e29bca36d01052d96e3900db9067:-1202049246,d550a61b9d36d0105939959a888fca02:-578660510,cb3c52d30d36d01028a5d9aaf1a7e05c:-1477807138,8bcad6d37c36d010582ee2a7263c0b99:-761987194,97b79adfd0f2d0107c6a4595ab40532c:-1606640841,11d69adf82f2d01081196c3072f79826:50822228,4e050ad330f2d0103157e363bc0522da:-496838467,dea1a99b4372d0105e3c1cc71c434e41:1622029379,5bc459177a72d0105d07b8ca6b657fff:-2039959667,d836bbc689448414fe0b4367f6855625:1221370176,ce8147a01580ccd0a4b2d84ef97f9c7f:1990894563,50dea18cf0c80cd05938cdbc4b7feaf7:99896030,c71d6ee36633fbc0cbc944f89e328c4f:-942486338,30e69faee6b3f7c029081cb0ceee53f1:-1071180011,1ee55b6eadb3f7c0d1fc65cc9a5cbb82:-255216879,c0a5976e39b3f7c0990b9dfb80d7e892:2065431876,dc155fea65b3f7c08f3b19ea3d30b100:1237247450,fec31bead5b3f7c0d2482358533cbce0:605184276,935b715637f7bfc01ee98eb1e7e5f1d9:-864533422,8a3b799aa5f7bfc05f70780efe331520:-752881957,1536f5160bf7bfc0660beb1b16757b30:-1894158262,bad13d9e31b7bfc070157ae83c5fe83e:-1610795690,f68ea9d613b7bfc0e1bf124c2d25d61d:1072160304,9b9ccd4e9f3f73c05c615c1b3e6c4368:414406270,5579d350f673fb801d31f38990fad3b6:-1004444545,f67abbd075777300c220ef9acb1957b8:1856611255,5579d350f673fb801d31f38990fad3b6:-1004444545,5b706d0c6df77b80af38a3ee7984d4a5:959258349,2fe5449efba3338065e50f77aa6baac9:-843683994,adc38cde0e233380ffca1c911e987e58:-710146176,c7b54c16cce3ff04f9edb0860041792d:885402078,3bab5ab1a32bb7803449cda9d99597c3:1674244566,a21fa92d426377801fd8dfc928e87629:-1881978389,dc91996d5227ff4090d5802122ed5804:-650744238,18d015e57127ff4005dac826090390d6:-518485012,b69f012d9f27ff408ae9d64d67400e03:-1148982782,c1bb85e991e37f044093d0163cd93ffc:612017295,59ca8da9e7e37f048b84357f3ee14d11:2045574142,4aa9cd6905e37f044f59c91b8282177e:-1898425254,78d84569a1e37f04e4cbebbe7f6a37e2:-291615744,6f29fca5cde3ff40da273a26fd785a5c:-181647465,66f8386582e3ff406abe5d4cdbed139f:-672653044,e6d7b46583e3ff40cc65083c6c5f7461:1903432625,5c0738e1b4e3ff409560635fa7417dbc:-672653044,05863ce18fe3ff404ffbd95dad822d67:2108532257,1b61fc2d77a3ff407a1f8f3fc6eeabeb:-1024258537,4150f4e9ffa3ff40344f2a451d6c465e:529218909,391b4c5528ab7f401ae6216cc36e3eb4:-546041040,513a1f8934e77f40319a497f3f7aed88:907892968,f6765fc5bfe77f4033cca69b3ebc0775:-1804445097,919553c531e77f40b19328fb87a5fc49:-18714662,587ef8098aeb3f40a1e67ecef0808c64:230177980,847aac81c1eb3f4082ca868012149116:1381829369,e7548881ed6bfb0479b76d08920f7cfd:1034525383,721404c9f62bfb042274d5e1d9f228e9:-203054014,48cc67f4dde73f40878db2d0899258ed:359391886,762a9b33d8537f40df040771c8620688:1167543126,ae29dbffba137f402215f662c94861e0:-1349673989,ae29dbffcb137f4047adf4405693badd:-1849667942,2232d65c99a4b3009521bf2a8a9dd454:-1849667942,2ca66d97db73ab4026a1c4c25e198477:-1037462918,084093a2e4bbe740a42808966e854cec:1882679401,94ac637b6597a7804969a0918c622b06:712455175,852e5f3f6657a780bd4e9eb7830e17f9:77598119,b17c53fba157a780439ceb9afe490343:-1804743161,618a9b775757a7800cf800b2f1600f45:1118069896,5de19733c857a78064b4daaccd143275:1620439582,ab5d16e2bb25a700281096738df9432d:1313867835,9a1d52e23025a700d505da9a1581254a:-751983349,2d1c92622525a700377b9e3b7a06862d:501218437,01ba92627d25a70039ad5a59d9569b28:-671323643,9859922e05e1a700495159df34bc29de:102755472,c2c4d62e30e1a700ec3a83d78fd55b5f:-1246841729,3ea41aaa32e1a7006c7c88f35f27f545:-234637670</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_ui_action_8fcb4a3d37035a0044d3f25b34990eed</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update sys_domain="global" table="sys_ui_action"&gt;&lt;sys_ui_action action="INSERT_OR_UPDATE"&gt;&lt;action_name&gt;snd_add_jsdoc&lt;/action_name&gt;&lt;active&gt;true&lt;/active&gt;&lt;client&gt;true&lt;/client&gt;&lt;client_script_v2/&gt;&lt;comments&gt;Automatically add comments to code&lt;/comments&gt;&lt;condition&gt;new global.CiCdJsDoc().showButton(current);&lt;/condition&gt;&lt;form_action&gt;true&lt;/form_action&gt;&lt;form_button&gt;true&lt;/form_button&gt;&lt;form_button_v2&gt;false&lt;/form_button_v2&gt;&lt;form_context_menu&gt;false&lt;/form_context_menu&gt;&lt;form_link&gt;false&lt;/form_link&gt;&lt;form_menu_button_v2&gt;false&lt;/form_menu_button_v2&gt;&lt;form_style/&gt;&lt;hint&gt;Add JSDoc-Tags to Code&lt;/hint&gt;&lt;isolate_script&gt;false&lt;/isolate_script&gt;&lt;list_action&gt;false&lt;/list_action&gt;&lt;list_banner_button&gt;false&lt;/list_banner_button&gt;&lt;list_button&gt;false&lt;/list_button&gt;&lt;list_choice&gt;false&lt;/list_choice&gt;&lt;list_context_menu&gt;false&lt;/list_context_menu&gt;&lt;list_link&gt;false&lt;/list_link&gt;&lt;list_save_with_form_button&gt;false&lt;/list_save_with_form_button&gt;&lt;list_style/&gt;&lt;name&gt;[ ]&lt;/name&gt;&lt;onclick&gt;commentCode()&lt;/onclick&gt;&lt;order&gt;666&lt;/order&gt;&lt;script&gt;&lt;![CDATA[if (window) {
	/*
		change the value of all jsDoc buttons on the page and hide them.
	*/
    $j('[data-action-name="snd_add_jsdoc"]').each(function () {
        $j(this).html('&lt;span class="field_decoration icon-template"&gt;&lt;/span&gt;').hide();
    });

	/*
		add event to wait for the page to be loaded and then check
		if there are any script fields in the page - if so, show the jsDoc buttons.
	*/
    window.addAfterPageLoadedEvent(function () {

        var hasCode = g_form.elements.some(function (field) {
            var value = g_form.getValue(field.fieldName);
            return (value.indexOf('function') !== -1 || value.indexOf('Class') !== -1);
        });
        if (hasCode) {
            $j('[data-action-name="snd_add_jsdoc"]').each(function () {
                $j(this).show();
            });
        }
    });
} 
/**
 * Main function to be called by clicking on the UI button.
 * 
 * @author Boris Moers [b.moers]
 * @requires global.module:sys_script_include.SnSmartComments
 * @memberof global.module:sys_ui_action
 * @returns {undefined}
 */
function commentCode() {

	/**
     * Walk through all form fields and add comments, to be called
     * as callback below.
     * 
     * @param {any} userName
     * @param {any} scope
     * @param {any} objectType
     * @returns {undefined}
     */
    var applyComments = function (userName, scope, objectType) {
        var smart = new SnSmartComments(userName, scope, objectType);
        g_form.elements.forEach(function (field) {
            var fieldName = field.fieldName,
                value = g_form.getValue(fieldName);
            if (!g_form.isDisabled(fieldName) &amp;&amp; value &amp;&amp; (value.indexOf('function') !== -1 || value.indexOf('Class') !== -1)) {
                console.log("SnSmartComments: commented field '%s'", fieldName);
                g_form.setValue(fieldName, smart.comment(value));
            }
        });
    };

    var objectType = g_form.getTableName(),
        userName = g_user.getFullName().concat(' [').concat(g_user.getUserName()).concat(']'),
        scope = g_scratchpad.scope || 'global';
    
    applyComments(userName, scope, objectType);
}]]&gt;&lt;/script&gt;&lt;show_insert&gt;true&lt;/show_insert&gt;&lt;show_multiple_update&gt;false&lt;/show_multiple_update&gt;&lt;show_query&gt;false&lt;/show_query&gt;&lt;show_update&gt;true&lt;/show_update&gt;&lt;sys_class_name&gt;sys_ui_action&lt;/sys_class_name&gt;&lt;sys_created_by&gt;b.moers&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2016-04-28 13:28:55&lt;/sys_created_on&gt;&lt;sys_domain&gt;global&lt;/sys_domain&gt;&lt;sys_domain_path&gt;/&lt;/sys_domain_path&gt;&lt;sys_id&gt;8fcb4a3d37035a0044d3f25b34990eed&lt;/sys_id&gt;&lt;sys_mod_count&gt;65&lt;/sys_mod_count&gt;&lt;sys_name&gt;[ ]&lt;/sys_name&gt;&lt;sys_overrides/&gt;&lt;sys_package display_value="Global" source="global"&gt;global&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="CICD Integration"&gt;19190fabdbebd300dfa9b94ffe96193e&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_ui_action_8fcb4a3d37035a0044d3f25b34990eed&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;b.moers&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2019-02-28 14:21:30&lt;/sys_updated_on&gt;&lt;table&gt;sys_metadata&lt;/table&gt;&lt;ui11_compatible&gt;false&lt;/ui11_compatible&gt;&lt;ui16_compatible&gt;false&lt;/ui16_compatible&gt;&lt;/sys_ui_action&gt;&lt;/record_update&gt;</payload>
<payload_hash>-1064812841</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:51</sys_created_on>
<sys_id>085357b32f15b850d8455aab2799b6b0</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c9c050000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:51</sys_updated_on>
<table>sys_metadata</table>
<target_name>[ ]</target_name>
<type>UI Action</type>
<update_domain>global</update_domain>
<update_guid>378200e835777300514e2966bcb82951</update_guid>
<update_guid_history>367abbd0877773005fc0a4f1f3f863ad:-1064812841,367abbd0877773005fc0a4f1f3f863ad:-1064812841,367abbd0877773005fc0a4f1f3f863ad:-1064812841,a6e66d972273ab40cfbe52e2a0bf5bf8:-2118907437,a6e66d972273ab40cfbe52e2a0bf5bf8:-2118907437,05b84022229667c009ca19026a7f5c5a:-925208706,4045b30994bda340e27e6510a07b3e69:1022552039,88053309a5bda3400cbbefbbb499e802:1466459083,a471d4210585ab80c0997f4b133222d1:430413715,1c52ac314bf82f4019bded3073e91132:-1455121635,4142a8bd15b82f4086290219505a8938:-2065734531,19b168bdb9b82f4096311b1ad32760b1:78511509,de01a4bdfbb82f408f91bec47d7c4ea2:2036776629,58e028fd76b82f40d025e72d881ea743:-806788203,4a3f547dcfb82f4072865c19290df8ed:-831554795,5456c8049f3f17000905bb7a2d64b084:167689044,e3abb5e5ed389380651291ba8495350c:-1386237059,a85b3965ef3893805f485b385644d0b5:1892527999,87da3565b53893809bb96a4a82902066:-916064297,897af525c3389380d81931ca1311d3bd:719166569,a799f1a1e53893805769d117d127cf6c:-1499817963,0519b1a1c53893807755235fb2de6b8e:735675540,7e8839ed38f493801497371a780c9099:529285297,6a24b12de9f49380a12acf059a3d1a63:-385401492,f333fde9e5f49380ab3df42e226565f6:-1542927778,56c1bda9f8f49380f522cfdf93606592:-1148114938,330175e9f2f49380866848db17076fa2:-1502734984,ecc0b1e9cff49380aeb2d642581c3047:424683325,76bef36467f8df4028e0a6da5818911d:-401607873,649eff24caf8df40b539176e623a9e75:610356568,996e7324eff8df400dc686ff73139e4a:14490997,ebcd37a074f8df404328a8b5a54186de:1895082300,8b7d37a091f8df40475fd5616b6e0c56:1158694510,fffc37a0b1f8df40a71bc70d15ba826c:-481297991,d7bcfbec60b8df402c9078cc1fda8536:-357480249,f94cb7ecd2b8df4036b7dcfaa08c8934:1965400036,220737a895b8df403836dd285619019b:-417024598,c14637a8dfb8df4097609403a4d5ec27:1131720928,11f46523af2b8700419b3a281270b8e2:22835561,2324e29ed62f83003d063dd86eae361e:530010473,3ad3aa5e032f83009e177b73881fd6f5:-14486257,dbafd582602b4300da85eb58cbb1a9cb:-2079719689,7edd5102272b43009e1cad1b1b310fd2:-1537616169,e7bd5dc628e743000aa887d62ed3a352:1041468437,2d1d994ab3e743007972f14246949ba5:1801476470,ed0c95cee8a743006db55cfcfc7b1f1a:-429688874,9afbd58e9ca7430033301fa9382674d2:1764057323,68eb118ef5a74300ce8e96d8e58a0687:-169571981,dddbd14ee3a74300b4bb639cc0145a84:1764057323,38cb19c60aa7430080cd5b805d7326cd:-2131656393,5e2b19c65ca74300298d5a333169f9c8:-1055750587,50fa558678674300f6e4dcb848eae7ed:1969922926,552a91c2506743002928514460964eea:1291921369,080a950623274300f06ca2c6b8a31a1e:2073397213,5da9d1c23d67430096a88873bbc601a4:-331591140,6749dd0234674300ffedbc871b511234:-394842725,731959caa02743009dc887f216439ecb:2035307313,a5f81d02cf67430082107e141dd57dfb:-1001280163,29b81906b92743004d1de01442824aef:-205998440,e528d58a592743002f4601d26cf61f15:-2035726479,38081906e5274300d67ea88fe73eecea:-1250476697,19b71d4e5ea3430070f072b5599c4239:254322379,1a979502a7274300a4147bc37545730f:1192913350,4647910271e3430023ced704ff6522c4:738368380,c5c6d10268274300c458756f3d4fbfa0:-82870270,7252110a82634300902fab7ad6dfb9ba:896495719,28325946c26343002454d9205ceb5085:-1805249247,d4a42557738bcf4014b562f76a33ab63:2091408716,44df849a4ffc17801da5a6ea24858533:22835561</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_ui_section_2256e0cddbc02850fcf4178039961994</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update><sys_ui_section caption="CI/CD Settings" section_id="2256e0cddbc02850fcf4178039961994" sys_domain="global" table="sys_store_app" version="3" view="CICD"><sys_ui_element action="INSERT_OR_UPDATE"><element>u_repository</element><position>0</position><sys_created_by>admin</sys_created_by><sys_created_on>2020-10-22 11:39:39</sys_created_on><sys_id>cdfe4d4ddb442850fcf4178039961904</sys_id><sys_mod_count>0</sys_mod_count><sys_ui_formatter/><sys_ui_section caption="CI/CD Settings" display_value="CI/CD Settings" name="sys_store_app" sys_domain="global" view="fb54604ddbc02850fcf4178039961920">2256e0cddbc02850fcf4178039961994</sys_ui_section><sys_updated_by>admin</sys_updated_by><sys_updated_on>2020-10-22 11:39:39</sys_updated_on><sys_user/><type/></sys_ui_element><sys_ui_section action="INSERT_OR_UPDATE"><caption>CI/CD Settings</caption><header>false</header><name>sys_store_app</name><roles/><sys_class_name>sys_ui_section</sys_class_name><sys_created_by>admin</sys_created_by><sys_created_on>2020-10-22 08:42:15</sys_created_on><sys_domain>global</sys_domain><sys_domain_path>/</sys_domain_path><sys_id>2256e0cddbc02850fcf4178039961994</sys_id><sys_mod_count>3</sys_mod_count><sys_name>CI/CD Settings</sys_name><sys_overrides/><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_update_name>sys_ui_section_2256e0cddbc02850fcf4178039961994</sys_update_name><sys_updated_by>admin</sys_updated_by><sys_updated_on>2020-10-22 11:39:37</sys_updated_on><sys_user/><title>false</title><view display_value="CICD" name="CICD">fb54604ddbc02850fcf4178039961920</view><view_name/></sys_ui_section></sys_ui_section></record_update>]]></payload>
<payload_hash>-1620663062</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:51</sys_created_on>
<sys_id>085357b32f15b850d8455aab2799b6b3</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2ca1d80000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:51</sys_updated_on>
<table>sys_store_app</table>
<target_name>Store Application</target_name>
<type>Form Layout</type>
<update_domain>global</update_domain>
<update_guid>8dfe4d4d1444285074113e1047210e05</update_guid>
<update_guid_history>8dfe4d4d1444285074113e1047210e05:-1620663062,64fe0d4d74442850a59b45d703760736:1701364817,eeeec94d30442850dd037aee945d7893:1952855855,0eee894df74428501110fde4b82a2ba9:-657797226,32be4d89af442850e2b09a9ff0c66c31:1701364817,075624cde8c02850d8fb78a1ab807827:-1535363152</update_guid_history>
<update_set display_value=""/>
<view>CICD</view>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>DELETE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_ui_section_b754604ddbc02850fcf4178039961989</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update><sys_ui_section caption="CI/CD Settings" section_id="b754604ddbc02850fcf4178039961989" sys_domain="global" table="sys_app" version="3" view="CICD"><sys_ui_section action="DELETE"><caption>CI/CD Settings</caption><header>false</header><name>sys_app</name><roles/><sys_class_name/><sys_created_by/><sys_created_on/><sys_domain>global</sys_domain><sys_domain_path/><sys_id>b754604ddbc02850fcf4178039961989</sys_id><sys_mod_count/><sys_name/><sys_overrides/><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_update_name/><sys_updated_by/><sys_updated_on>2020-10-22 08:35:17</sys_updated_on><sys_user/><title>false</title><view display_value="CICD" name="CICD">fb54604ddbc02850fcf4178039961920</view><view_name>CICD</view_name></sys_ui_section></sys_ui_section></record_update>]]></payload>
<payload_hash>-768640097</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:51</sys_created_on>
<sys_id>085357b32f15b850d8455aab2799b6b4</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2ca0b50000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:51</sys_updated_on>
<table>sys_app</table>
<target_name>Custom Application</target_name>
<type>Form Layout</type>
<update_domain>global</update_domain>
<update_guid>6cc4e44deec02850801177e71c79f571</update_guid>
<update_guid_history>6cc4e44deec02850801177e71c79f571:-768640097,4864604df3c028506bc6b60ad4b443a3:-1076537304</update_guid_history>
<update_set display_value=""/>
<view>CICD</view>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_properties_3aacd546dbe74300dfa9b94ffe961943</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_properties"><sys_properties action="INSERT_OR_UPDATE"><choices/><description>&lt;hr&gt;&lt;b&gt;Show JSDoc button in UI to support developer to comment code correctly.&lt;/b&gt;</description><ignore_cache>false</ignore_cache><is_private>false</is_private><name>cicd-integration.jsdocButton.enabled</name><read_roles/><suffix/><sys_class_name>sys_properties</sys_class_name><sys_created_by>b.moers</sys_created_by><sys_created_on>2018-01-10 13:46:58</sys_created_on><sys_id>3aacd546dbe74300dfa9b94ffe961943</sys_id><sys_mod_count>12</sys_mod_count><sys_name>cicd-integration.jsdocButton.enabled</sys_name><sys_package display_value="Global" source="global">global</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_update_name>sys_properties_3aacd546dbe74300dfa9b94ffe961943</sys_update_name><sys_updated_by>b.moers</sys_updated_by><sys_updated_on>2018-12-14 15:20:32</sys_updated_on><type>boolean</type><value>true</value><write_roles/></sys_properties><sys_translated_text action="delete_multiple" query="documentkey=3aacd546dbe74300dfa9b94ffe961943"/></record_update>]]></payload>
<payload_hash>-853066459</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:51</sys_created_on>
<sys_id>08539f732f15b850d8455aab2799b61c</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c9a000000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:51</sys_updated_on>
<table/>
<target_name>cicd-integration.jsdocButton.enabled</target_name>
<type>System Property</type>
<update_domain>global</update_domain>
<update_guid>e782cca80c77730020639f76c2dd3fc5</update_guid>
<update_guid_history>a27abbd0457773004885db57babb0d7e:-853066459,a27abbd0457773004885db57babb0d7e:-853066459,a27abbd0457773004885db57babb0d7e:-853066459,329bd27e3ddaa7c01f4afb8f53ef10f1:-929369827,61cb6db28d5aa7c0c2b32c35ff4b5194:1160195351,87bb2db2ff5aa7c0c8c766ca1cf32a60:-970928424,dce09ced9545ab803470ebfb07ddcbc9:1160195351,5a2090ed8045ab801a1532d8676f84d2:305081207,36357fe445b8df4052ab21f64b596df6:1970847448,1134ae5ed32f83002f96b7e4bfe12d9d:-1610517193,b4e3a29ec52f830088f5fde5bf8ee557:1970847448,05b82d4a172f4300ca5514a58b88433e:-1610517193,41c7250ad62f430004a385e1c4211581:1970847448,3cfd55420f2b4300feacd4db44a792e0:-1610517193,afecddc6efe7430089603b5e6a4e48ba:1970847448,cddc5d8653e743001f482ca26c492542:-1610517193,b2cf449aeefc1780c7378f56ab3622a4:-1610517193</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_properties_category_m2m_50083fe7db34e380432cfc600f9619bc</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_properties_category_m2m"><sys_properties_category_m2m action="INSERT_OR_UPDATE"><category display_value="CICD Integration">8d1de113dbb86380432cfc600f9619f6</category><order>200</order><property display_value="cicd-integration.server.through-mid" name="cicd-integration.server.through-mid">a7df4293db3c6380432cfc600f961974</property><sys_class_name>sys_properties_category_m2m</sys_class_name><sys_created_by>b.moers</sys_created_by><sys_created_on>2018-10-03 16:25:32</sys_created_on><sys_id>50083fe7db34e380432cfc600f9619bc</sys_id><sys_mod_count>0</sys_mod_count><sys_name>cicd-integration.server.through-mid.CICD Integration</sys_name><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_update_name>sys_properties_category_m2m_50083fe7db34e380432cfc600f9619bc</sys_update_name><sys_updated_by>b.moers</sys_updated_by><sys_updated_on>2018-10-03 16:25:32</sys_updated_on></sys_properties_category_m2m></record_update>]]></payload>
<payload_hash>870561840</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:51</sys_created_on>
<sys_id>08539f732f15b850d8455aab2799b61f</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c95df0000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:51</sys_updated_on>
<table/>
<target_name>cicd-integration.server.through-mid.CICD Integration</target_name>
<type>Category Property</type>
<update_domain>global</update_domain>
<update_guid>2382cca8e677730011090d007a0cd1d1</update_guid>
<update_guid_history>167abbd06b7773001ecf5fb3ec44b61f:870561840,167abbd06b7773001ecf5fb3ec44b61f:870561840,167abbd06b7773001ecf5fb3ec44b61f:870561840,98083fe75934e380589341e1c5a419bd:-240839192</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_properties_cf30d293db3c6380432cfc600f961913</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_properties"><sys_properties action="INSERT_OR_UPDATE"><choices/><description>&lt;b&gt;MID Server to be used&lt;/b&gt; (requires 'cicd-integration.server.through-mid' to be true)&lt;br&gt;&#13;
If empty, first available MID Server is automatically used.</description><ignore_cache>false</ignore_cache><is_private>false</is_private><name>cicd-integration.server.mid-server-name</name><read_roles/><suffix/><sys_class_name>sys_properties</sys_class_name><sys_created_by>b.moers</sys_created_by><sys_created_on>2018-10-02 14:13:40</sys_created_on><sys_id>cf30d293db3c6380432cfc600f961913</sys_id><sys_mod_count>13</sys_mod_count><sys_name>cicd-integration.server.mid-server-name</sys_name><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_update_name>sys_properties_cf30d293db3c6380432cfc600f961913</sys_update_name><sys_updated_by>admin</sys_updated_by><sys_updated_on>2021-05-12 15:13:01</sys_updated_on><type>string</type><value/><write_roles/></sys_properties><sys_translated_text action="delete_multiple" query="documentkey=cf30d293db3c6380432cfc600f961913"/></record_update>]]></payload>
<payload_hash>-1273784104</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:51</sys_created_on>
<sys_id>0c5357b32f15b850d8455aab2799b6a9</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2ca3220000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:51</sys_updated_on>
<table/>
<target_name>cicd-integration.server.mid-server-name</target_name>
<type>System Property</type>
<update_domain>global</update_domain>
<update_guid>44f056422288f810923fcc344510fcff</update_guid>
<update_guid_history>44f056422288f810923fcc344510fcff:-1273784104,2e5ab717f11fe890bb5ae00093f82b1f:620006073,4879d4e0a2c1a850ae67f6366d514c79:991624606,4879d4e0a2c1a850ae67f6366d514c79:991624606,4a03ee9043a810105a6f8fb7f4414961:-1561528980,4a03ee9043a810105a6f8fb7f4414961:-1561528980,d7db48367cdcdc500ef00f6493bd0019:1973348820,9908b8da9a589c50d712337c70fdba63:-1561528980,aa61c70263d09c50705ad7ac3ad37f32:1973348820,3dbf310acadc5c503a14f6b7b7c3baa0:-1561528980,6a7abbd09b77730016c81e37e7e3fc89:-1273784104,6a7abbd09b77730016c81e37e7e3fc89:-1273784104,982554aa335cb3c02529dff4767e7f72:1752582160,7404a31e5898b3c09e5059c1c8d0638f:1463659690,c98b127ea5daa7c0ae010c688943ceba:1752582160,8fb0d6d3c33c6380face7d091d6a2c89:946150423,99a016d3c33c6380849e6fd783284064:-1221822707,3f30d293333c638046ecf869405ad618:1465327902</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_script_include_4ba066b2db1ea7c076d6b94ffe96195f</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;&lt;sys_script_include action="INSERT_OR_UPDATE"&gt;&lt;access&gt;public&lt;/access&gt;&lt;active&gt;true&lt;/active&gt;&lt;api_name&gt;global.CiCdWebHook&lt;/api_name&gt;&lt;caller_access/&gt;&lt;client_callable&gt;false&lt;/client_callable&gt;&lt;description/&gt;&lt;name&gt;CiCdWebHook&lt;/name&gt;&lt;script&gt;&lt;![CDATA[/**
 * Pull Request Proxy
 * 
 * @class 
 * @author Boris Moers [b.moers]
 * @requires sn_ws_err.module:sys_script_include.BadRequestError
 * @requires sn_ws.module:sys_script_include.RESTMessageV2
 * @memberof global.module:sys_script_include
 */
var CiCdWebHook = Class.create();
CiCdWebHook.prototype = /** @lends global.module:sys_script_include.CiCdWebHook.prototype */ {
 
    /**
      * Constructor
      * 
      * @param {any} request
      * @param {any} response
      * @returns {undefined}
      */
    initialize: function (request, response) {
        var self = this;
 
        self.console = {
            /**
              * Description
              * 
              * @returns {undefined}
              */
            log: function () {
                if (arguments.length) arguments[0] = '[' + self.type + '] ' + arguments[0];
                gs.info.apply(null, arguments);
            },
            /**
              * Description
              * 
              * @returns {undefined}
              */
            warn: function () {
                if (arguments.length) arguments[0] = '[' + self.type + '] ' + arguments[0];
                gs.warn.apply(null, arguments);
            },
            /**
              * Description
              * 
              * @returns {undefined}
              */
            error: function () {
                if (arguments.length) arguments[0] = '[' + self.type + '] ' + arguments[0];
                gs.error.apply(null, arguments);
            },
            /**
              * Description
              * 
              * @returns {undefined}
              */
            debug: function () {
                if (arguments.length) arguments[0] = '[' + self.type + '] ' + arguments[0];
                gs.debug.apply(null, arguments);
            },
        };
 
        self.request = request;
        self.response = response;
 
        self.proxyEnabled = Boolean(gs.getProperty('cicd-integration.pull-request-proxy.enabled', 'false') == 'true');
 
        var cicdServerMatch = gs.getProperty('cicd-integration.server.url', '').match(/((?:http[s]?:\/\/)[^/]*)/i);
        var cicdServer = (cicdServerMatch) ? cicdServerMatch[1] : 'server-undefined';
 
        self.proxyURL = cicdServer.concat('/pull_request');
        self.secretName = gs.getProperty('cicd-integration.pull-request-proxy.header-secret-name', null);
        self.secretToken = gs.getProperty('cicd-integration.pull-request-proxy.secret', null);
        self.secretValidation = gs.getProperty('cicd-integration.pull-request-proxy.secret-validation', null);
 
        self.throughMidServer = Boolean(gs.getProperty('cicd-integration.server.through-mid', 'false') == 'true');
        self.midServerName = gs.getProperty('cicd-integration.server.mid-server-name', self.getMidServer());
 
        self.body = null;
        self.bodyString = null;
        try {
            // support for POST request
            var requestBody = request.body;
            self.bodyString = requestBody.dataString;
            if (requestBody &amp;&amp; requestBody.hasNext()) {
                var body = requestBody.nextEntry();
                if (body) {
                    self.body = body;
                }
            }
        } catch (ignore) { 
            // ignore
        }
    },
 
    /**
      * Proxy function to send the request to
      * 
      * @returns {undefined}
      */
    proxy: function () {
        var self = this;
 
        if (!self.proxyEnabled) {
            return new sn_ws_err.BadRequestError('Unauthorized');
        }
 
        if (!self.proxyURL) {
            return new sn_ws_err.BadRequestError('Unauthorized');
        }
 
        if (self.secretName) {
            if (!self.secretToken) {
                self.console.error('No Secret-Token specified! Set \'cicd-integration.pull-request-proxy.secret\' to a random string.');
                return new sn_ws_err.BadRequestError('Unauthorized');
            }
            // check the secrets to match
            var secret = self.request.getHeader(self.secretName);
            if (!secret) {
                self.console.error('No Secret passed! Header {0} is empty.', self.secretName);
                return new sn_ws_err.BadRequestError('Unauthorized');
            }
 
            if ('hmac' == self.secretValidation) {
                if (!secret.startsWith('sha1='))
                    return new sn_ws_err.BadRequestError('Unauthorized');
 
                /**
                  * Description
                  * 
                  * @param {any} byteArray
                  * @returns {any}
                  */
                var toHex = function(byteArray) {
                    return byteArray.map(function (b) {
                        return ('0' + (b &amp; 0xFF).toString(16)).slice(-2);
                    }).join('');
                };
 
                var base64 = SncAuthentication.encode(self.bodyString, self.secretToken, 'HmacSHA1');
                var bytes = GlideStringUtil.base64DecodeAsBytes(base64);
                var hex = toHex(bytes);
                if (secret.split('sha1=')[1] != hex) {
                    self.console.warn('Proxy request made with invalid Token. Token not valid.');
                    return new sn_ws_err.BadRequestError('Unauthorized');
                }
 
            } else if ('match' == self.secretValidation) {
                if (self.secretToken != secret) {
                    self.console.warn('Proxy request made with invalid Token. Token does not match.');
                    return new sn_ws_err.BadRequestError('Unauthorized');
                }
            } else {
                return new sn_ws_err.BadRequestError('Unauthorized');
            }
 
        } else {
            self.console.warn('Proxy API is public! Request details - Headers: {0}, Body: {1}', JSON.stringify(self.request.headers), JSON.stringify(self.body));
        }
 
        var request = new sn_ws.RESTMessageV2();
        if (self.throughMidServer) {
            if (gs.nil(self.midServerName))
                throw new Error('MID Server not defined');
            request.setMIDServer(self.midServerName);
        }
 
        request.setEndpoint(self.proxyURL);
        request.setRequestHeader('Accept', 'application/json');
        request.setRequestHeader('Content-Type', 'application/json');
        request.setHttpMethod('POST');
 
        request.setRequestBody(self.bodyString);
 
        var response = request.execute(); // Async somehow does not perform
        if (!response.haveError()) {
            try {
                var responseText = response.getBody(),
                    responseJson = JSON.parse(responseText);
                if (responseJson) {
                    // TODO
                    // check response body for successful build start
                    self.console.log('successful - result is: {0}', responseText);
                    return responseJson;
                }
            } catch (e) {
                self.console.error('JSON parsing failed. {0}', e);
                throw e;
            }
 
        } else {
            var statusCode = response.getStatusCode();
            self.console.error('request ended in error - StatusCode {0}, ResponseMessage: {1}, Endpoint: {2}, ResponseBody: {3}', statusCode, response.getErrorMessage(), self.proxyURL, response.getBody());
            throw new Error(response.getErrorMessage());
        }
    },
 
 
    /**
      * Get one active mid server
      * 
      * @returns {any} name
      */
    getMidServer: function () {
        var name = null;
        var mid = new GlideRecord('ecc_agent');
        mid.addQuery('status', 'Up');
        mid.setLimit(1);
        mid.query();
        if (mid._next()) {
            name = mid.name.toString();
        }
        return name;
    },
 
    type: 'CiCdWebHook'
};
 ]]&gt;&lt;/script&gt;&lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;&lt;sys_created_by&gt;b.moers&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2018-12-14 15:43:52&lt;/sys_created_on&gt;&lt;sys_id&gt;4ba066b2db1ea7c076d6b94ffe96195f&lt;/sys_id&gt;&lt;sys_mod_count&gt;28&lt;/sys_mod_count&gt;&lt;sys_name&gt;CiCdWebHook&lt;/sys_name&gt;&lt;sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e"&gt;19190fabdbebd300dfa9b94ffe96193e&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="CICD Integration"&gt;19190fabdbebd300dfa9b94ffe96193e&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_script_include_4ba066b2db1ea7c076d6b94ffe96195f&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-07-19 09:49:19&lt;/sys_updated_on&gt;&lt;/sys_script_include&gt;&lt;/record_update&gt;</payload>
<payload_hash>2131514209</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:51</sys_created_on>
<sys_id>0c5357b32f15b850d8455aab2799b6ac</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2ca4a80000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:51</sys_updated_on>
<table/>
<target_name>CiCdWebHook</target_name>
<type>Script Include</type>
<update_domain>global</update_domain>
<update_guid>21f21373d415b850a2beb2704c7bf953</update_guid>
<update_guid_history>21f21373d415b850a2beb2704c7bf953:2131514209,367abbd0d377730036f3e10aee242cb2:547752704,367abbd0d377730036f3e10aee242cb2:547752704,367abbd0d377730036f3e10aee242cb2:547752704,34b66d970a73ab4008f42c51f798837c:1484184328,0ef19733eb57a780a548554730d976da:-1132747593,cbe80a0db72eefc098febf4a70cb2b25:1230902425,8396bd0df5eaefc0cb3d08f5fe2981c3:-686493060,f0f72d8d46aaefc0b33171e10839f43f:792665753,2384451f1b162bc01bd307a9de45844e:-1014682119,64b3059720162bc0beecbd28aeaa605d:-1935375964,9ca0c953ddd22bc02596dc899cf1f6f7:1636277735,263b745714d22bc0f476aaba91a41685:-737799433,b81de09b41922bc0b9ad33f05d84fa37:1461093622,48dc2c178f922bc0182a3d3b8db2b58c:-1642778132,517b47c34c5ee7c0f10a95c025fe7083:-1810644023,c70bcfc32e5ee7c09aab2d615b4be15e:1390057979,259903c7a21ee7c0c15940d82e82f7de:741508653,6af50fc72a1ee7c0cf8551e14f0a381f:878832000,6b100fc7051ee7c0c99a191a28010233:-1458042570,509eb6872c1ee7c0cdb21dcfa066b098:497236681,1c5f66faad1ea7c0016eb2ea122b60c4:1866720708,6afe2ebe511ea7c0033cea4f92ee2745:171683728,539ea2fa131ea7c02b4af9eabfc604ac:1866064468,09ade2fa811ea7c0d8aaf1d1808194cb:1500316933,1fb466761d1ea7c0dfd45e411d7be85a:-1849642884,2794e2b68a1ea7c0cb8e8f3ca5f0e634:1439781930,de446676871ea7c08b5e4b3155e47b3a:-1322293610,62242636a01ea7c041abac6dbe0c77c3:529079016,d7832676891ea7c0a51ee65d9621a4fb:-1795586741,6331aabef0daa7c0c13959852ccbaee7:589088359,58f0ae7e6fdaa7c08089ec6bb405ca9b:1224578306</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_security_acl_role_d7c15763db2fd300dfa9b94ffe9619bb</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_security_acl_role"><sys_security_acl_role action="INSERT_OR_UPDATE"><sys_class_name>sys_security_acl_role</sys_class_name><sys_created_by>b.moers</sys_created_by><sys_created_on>2018-08-02 10:21:02</sys_created_on><sys_id>d7c15763db2fd300dfa9b94ffe9619bb</sys_id><sys_mod_count>0</sys_mod_count><sys_name>/api/devops/cicd/atf.atf_test_admin</sys_name><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_security_acl display_value="/api/devops/cicd/atf">9041d7a3db2fd300dfa9b94ffe961910</sys_security_acl><sys_update_name>sys_security_acl_role_d7c15763db2fd300dfa9b94ffe9619bb</sys_update_name><sys_updated_by>b.moers</sys_updated_by><sys_updated_on>2018-08-02 10:21:02</sys_updated_on><sys_user_role display_value="atf_test_admin" name="atf_test_admin">e50d7c6053131200040729cac2dc3468</sys_user_role><transaction_id/></sys_security_acl_role></record_update>]]></payload>
<payload_hash>937286061</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:51</sys_created_on>
<sys_id>0c5357b32f15b850d8455aab2799b6af</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c91a30000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:51</sys_updated_on>
<table>/api/devops/cicd/atf</table>
<target_name>/api/devops/cicd/atf.atf_test_admin</target_name>
<type>Access Roles</type>
<update_domain>global</update_domain>
<update_guid>f78200e89277730079a349d63987b848</update_guid>
<update_guid_history>8b7abbd04d777300ee15c42788621adb:937286061,8b7abbd04d777300ee15c42788621adb:937286061,8b7abbd04d777300ee15c42788621adb:937286061,6c025fa3592fd300a5fe79f0dfd4732b:379943616</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_ui_related_sys_app_null</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update><sys_ui_related sys_domain="global" table="sys_app" version="2" view=""><sys_ui_related_list_entry action="INSERT_OR_UPDATE"><filter table="sys_metadata.sys_scope">sys_class_name!=sys_metadata_delete^EQ<item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/></filter><list_id display_value="Custom Application - Default view" name="sys_app" related_list="NULL" sys_domain="global" view="Default view">3687fa0fdb3e9010fcf417803996191a</list_id><order_by/><position>0</position><related_list>sys_metadata.sys_scope</related_list><sys_class_name>sys_ui_related_list_entry</sys_class_name><sys_created_by>admin</sys_created_by><sys_created_on>2020-08-27 21:05:59</sys_created_on><sys_id>ba87fa0fdb3e9010fcf417803996191a</sys_id><sys_mod_count>0</sys_mod_count><sys_updated_by>admin</sys_updated_by><sys_updated_on>2020-08-27 21:05:59</sys_updated_on></sys_ui_related_list_entry><sys_ui_related_list_entry action="INSERT_OR_UPDATE"><filter/><list_id display_value="Custom Application - Default view" name="sys_app" related_list="NULL" sys_domain="global" view="Default view">3687fa0fdb3e9010fcf417803996191a</list_id><order_by/><position>1</position><related_list>sys_package_dependency_m2m.sys_package</related_list><sys_class_name>sys_ui_related_list_entry</sys_class_name><sys_created_by>admin</sys_created_by><sys_created_on>2020-08-27 21:05:59</sys_created_on><sys_id>be87fa0fdb3e9010fcf417803996191a</sys_id><sys_mod_count>0</sys_mod_count><sys_updated_by>admin</sys_updated_by><sys_updated_on>2020-08-27 21:05:59</sys_updated_on></sys_ui_related_list_entry><sys_ui_related_list_entry action="INSERT_OR_UPDATE"><filter/><list_id display_value="Custom Application - Default view" name="sys_app" related_list="NULL" sys_domain="global" view="Default view">3687fa0fdb3e9010fcf417803996191a</list_id><order_by/><position>2</position><related_list>sys_scope_privilege.sys_scope</related_list><sys_class_name>sys_ui_related_list_entry</sys_class_name><sys_created_by>admin</sys_created_by><sys_created_on>2020-08-27 21:05:59</sys_created_on><sys_id>b287fa0fdb3e9010fcf417803996191b</sys_id><sys_mod_count>0</sys_mod_count><sys_updated_by>admin</sys_updated_by><sys_updated_on>2020-08-27 21:05:59</sys_updated_on></sys_ui_related_list_entry><sys_ui_related_list_entry action="INSERT_OR_UPDATE"><filter/><list_id display_value="Custom Application - Default view" name="sys_app" related_list="NULL" sys_domain="global" view="Default view">3687fa0fdb3e9010fcf417803996191a</list_id><order_by/><position>3</position><related_list>sys_scope_design_access.sys_scope</related_list><sys_class_name>sys_ui_related_list_entry</sys_class_name><sys_created_by>admin</sys_created_by><sys_created_on>2020-08-27 21:05:59</sys_created_on><sys_id>b687fa0fdb3e9010fcf417803996191b</sys_id><sys_mod_count>0</sys_mod_count><sys_updated_by>admin</sys_updated_by><sys_updated_on>2020-08-27 21:05:59</sys_updated_on></sys_ui_related_list_entry><sys_ui_related_list_entry action="INSERT_OR_UPDATE"><filter/><list_id display_value="Custom Application - Default view" name="sys_app" related_list="NULL" sys_domain="global" view="Default view">3687fa0fdb3e9010fcf417803996191a</list_id><order_by/><position>4</position><related_list>REL:3275124bdbfa9010fcf4178039961984</related_list><sys_class_name>sys_ui_related_list_entry</sys_class_name><sys_created_by>admin</sys_created_by><sys_created_on>2020-08-27 21:05:59</sys_created_on><sys_id>ba87fa0fdb3e9010fcf417803996191b</sys_id><sys_mod_count>0</sys_mod_count><sys_updated_by>admin</sys_updated_by><sys_updated_on>2020-08-27 21:05:59</sys_updated_on></sys_ui_related_list_entry><sys_ui_related_list action="INSERT_OR_UPDATE"><calculated_name>Custom Application - Default view</calculated_name><filter/><name>sys_app</name><order_by/><position/><related_list/><sys_class_name>sys_ui_related_list</sys_class_name><sys_created_by>admin</sys_created_by><sys_created_on>2020-08-27 21:05:59</sys_created_on><sys_domain>global</sys_domain><sys_domain_path>/</sys_domain_path><sys_id>3687fa0fdb3e9010fcf417803996191a</sys_id><sys_mod_count>1</sys_mod_count><sys_name>Custom Application - Default view</sys_name><sys_package display_value="Application Design Restrictions" source="com.glide.scope.design">408a6fa78002230065177a4cb39b4389</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_update_name>sys_ui_related_sys_app_null</sys_update_name><sys_updated_by>admin</sys_updated_by><sys_updated_on>2020-08-27 21:10:10</sys_updated_on><sys_user/><view display_value="Default view" name="NULL">Default view</view><view_name/></sys_ui_related_list></sys_ui_related></record_update>]]></payload>
<payload_hash>-1601477653</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:51</sys_created_on>
<sys_id>0c5357b32f15b850d8455aab2799b6b2</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c9f030000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:51</sys_updated_on>
<table>sys_app</table>
<target_name>Custom Application</target_name>
<type>Related Lists</type>
<update_domain>global</update_domain>
<update_guid>9c88fa0f5a3e9010c014236f9905eb98</update_guid>
<update_guid_history>9c88fa0f5a3e9010c014236f9905eb98:-1601477653,3687fa0fcc3e9010f144dc874d7eb01d:462409228,0487760fdc3e90103eb083c5ab26f20b:1511094899,bb65f2cbcb3e901023d304fb68167cdb:-671594318,9c65f2cb853e9010853062382aceee2c:-796364533,2924be4ba83e90103521d4ee71ce6eb7:-844736301,f8c3328b0b3e9010ab5b9decffdb9714:-182021346,e7633e4b173e90105e958b47b9de32a7:1234209617,0953fa4bbe3e9010a721f4b7b3eb105a:1612951960,96c8a2ee441280103419965269dff291:191834879,4ec8a2eeb212801087bd52b8cf80c788:1289537551</update_guid_history>
<update_set display_value=""/>
<view>Default view</view>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_properties_217225d7db72d010fcf41780399619fb</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_properties"><sys_properties action="INSERT_OR_UPDATE"><choices/><description>&lt;b&gt;Ensure the Application records (sys_app) is in every update set.&lt;/b&gt;</description><ignore_cache>false</ignore_cache><is_private>false</is_private><name>cicd-integration.prevent.add-sys-app-to-update-set</name><read_roles/><suffix/><sys_class_name>sys_properties</sys_class_name><sys_created_by>admin</sys_created_by><sys_created_on>2020-08-28 09:32:44</sys_created_on><sys_id>217225d7db72d010fcf41780399619fb</sys_id><sys_mod_count>3</sys_mod_count><sys_name>cicd-integration.prevent.add-sys-app-to-update-set</sys_name><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_update_name>sys_properties_217225d7db72d010fcf41780399619fb</sys_update_name><sys_updated_by>admin</sys_updated_by><sys_updated_on>2021-02-17 12:08:56</sys_updated_on><type>boolean</type><value>false</value><write_roles/></sys_properties><sys_translated_text action="delete_multiple" query="documentkey=217225d7db72d010fcf41780399619fb"/></record_update>]]></payload>
<payload_hash>-1123186409</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:51</sys_created_on>
<sys_id>0c539f732f15b850d8455aab2799b61b</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2ca2380000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:51</sys_updated_on>
<table/>
<target_name>cicd-integration.prevent.add-sys-app-to-update-set</target_name>
<type>System Property</type>
<update_domain>global</update_domain>
<update_guid>e441c10b7a1228548dd889187a7ba384</update_guid>
<update_guid_history>e441c10b7a1228548dd889187a7ba384:-1123186409,c4ceedb3499ca01046337de232c4f157:-1123186409,c4ceedb3499ca01046337de232c4f157:-1123186409,8d5a21bf0a5ca0104ae31c125fd67817:-1123186409,8d5a21bf0a5ca0104ae31c125fd67817:-1123186409,0272e5db1372d010a02fc06b467edacc:-1123186409,0272e5db1372d010a02fc06b467edacc:-1123186409</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_properties_category_m2m_0a82a9dbdb72d010fcf417803996191e</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_properties_category_m2m"><sys_properties_category_m2m action="INSERT_OR_UPDATE"><category display_value="CICD Integration">8d1de113dbb86380432cfc600f9619f6</category><order>50</order><property display_value="cicd-integration.prevent.add-sys-app-to-update-set" name="cicd-integration.prevent.add-sys-app-to-update-set">217225d7db72d010fcf41780399619fb</property><sys_class_name>sys_properties_category_m2m</sys_class_name><sys_created_by>admin</sys_created_by><sys_created_on>2020-08-28 09:33:02</sys_created_on><sys_id>0a82a9dbdb72d010fcf417803996191e</sys_id><sys_mod_count>2</sys_mod_count><sys_name>cicd-integration.prevent.add-sys-app-to-update-set.CICD Integration</sys_name><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_update_name>sys_properties_category_m2m_0a82a9dbdb72d010fcf417803996191e</sys_update_name><sys_updated_by>admin</sys_updated_by><sys_updated_on>2020-08-28 11:56:54</sys_updated_on></sys_properties_category_m2m></record_update>]]></payload>
<payload_hash>-413660424</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:51</sys_created_on>
<sys_id>0c539f732f15b850d8455aab2799b61e</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c9f4f0000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:51</sys_updated_on>
<table/>
<target_name>cicd-integration.prevent.add-sys-app-to-update-set.CICD Integration</target_name>
<type>Category Property</type>
<update_domain>global</update_domain>
<update_guid>e573465318f2d01085626992856168c8</update_guid>
<update_guid_history>e573465318f2d01085626992856168c8:-413660424,5292a9db9672d010b361255d93aa7132:-602602697,4a82a9db3f72d010dbe4f100e20e4320:94747698</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_ws_operation_a45f8befdbebd300dfa9b94ffe9619ab</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_ws_operation"&gt;&lt;sys_ws_operation action="INSERT_OR_UPDATE"&gt;&lt;active&gt;true&lt;/active&gt;&lt;consumes&gt;application/json,application/xml,text/xml&lt;/consumes&gt;&lt;consumes_customized&gt;false&lt;/consumes_customized&gt;&lt;default_operation_uri&gt;/api/devops/cicd/atf/test/{testId}&lt;/default_operation_uri&gt;&lt;enforce_acl&gt;9041d7a3db2fd300dfa9b94ffe961910&lt;/enforce_acl&gt;&lt;http_method&gt;GET&lt;/http_method&gt;&lt;name&gt;ATF - Get Test Results&lt;/name&gt;&lt;operation_script&gt;&lt;![CDATA[(function process(/*RESTAPIRequest*/ request, /*RESTAPIResponse*/ response) {

    return new CiCdAtf(request, response).getTestResults();

})(request, response);]]&gt;&lt;/operation_script&gt;&lt;operation_uri&gt;/api/devops/v1/cicd/atf/test/{testId}&lt;/operation_uri&gt;&lt;produces&gt;application/json,application/xml,text/xml&lt;/produces&gt;&lt;produces_customized&gt;false&lt;/produces_customized&gt;&lt;relative_path&gt;/atf/test/{testId}&lt;/relative_path&gt;&lt;request_example/&gt;&lt;requires_acl_authorization&gt;true&lt;/requires_acl_authorization&gt;&lt;requires_authentication&gt;true&lt;/requires_authentication&gt;&lt;requires_snc_internal_role&gt;true&lt;/requires_snc_internal_role&gt;&lt;short_description&gt;Get ATF test results from remote&lt;/short_description&gt;&lt;sys_class_name&gt;sys_ws_operation&lt;/sys_class_name&gt;&lt;sys_created_by&gt;b.moers&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2018-08-02 10:09:18&lt;/sys_created_on&gt;&lt;sys_id&gt;a45f8befdbebd300dfa9b94ffe9619ab&lt;/sys_id&gt;&lt;sys_mod_count&gt;2&lt;/sys_mod_count&gt;&lt;sys_name&gt;ATF - Get Test Results&lt;/sys_name&gt;&lt;sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e"&gt;19190fabdbebd300dfa9b94ffe96193e&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="CICD Integration"&gt;19190fabdbebd300dfa9b94ffe96193e&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_ws_operation_a45f8befdbebd300dfa9b94ffe9619ab&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;b.moers&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2018-08-02 11:07:32&lt;/sys_updated_on&gt;&lt;web_service_definition display_value="CICD Integration"&gt;81eccb6fdbebd300dfa9b94ffe96190e&lt;/web_service_definition&gt;&lt;web_service_version display_value="v1"&gt;0a3dcb2fdbebd300dfa9b94ffe9619c7&lt;/web_service_version&gt;&lt;/sys_ws_operation&gt;&lt;/record_update&gt;</payload>
<payload_hash>-1609935271</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:52</sys_created_on>
<sys_id>105357b32f15b850d8455aab2799b6b9</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c91de0000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:52</sys_updated_on>
<table/>
<target_name>ATF - Get Test Results</target_name>
<type>Scripted REST Resource</type>
<update_domain>global</update_domain>
<update_guid>8c9200e8da777300df8954bb4c51e986</update_guid>
<update_guid_history>167abbd0057773003690f57f167f290e:-1609935271,167abbd0057773003690f57f167f290e:-1609935271,167abbd0057773003690f57f167f290e:-1609935271,adac13ebf92fd300d063baf6ddfaaedf:-883572010,adac13ebf92fd300d063baf6ddfaaedf:-883572010,56521fe3ab2fd300dec0bdce920debfe:-614926587,645f8bef5eebd300d8032ca64a0e2eac:565503247</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_ws_query_parameter_map_1792ef1adb1667c076d6b94ffe961975</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ws_query_parameter_map"><sys_ws_query_parameter_map action="INSERT_OR_UPDATE"><sys_class_name>sys_ws_query_parameter_map</sys_class_name><sys_created_by>b.moers</sys_created_by><sys_created_on>2018-12-13 07:13:50</sys_created_on><sys_id>1792ef1adb1667c076d6b94ffe961975</sys_id><sys_mod_count>0</sys_mod_count><sys_name>8d336669dbb3db0076d6b94ffe96193e</sys_name><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_update_name>sys_ws_query_parameter_map_1792ef1adb1667c076d6b94ffe961975</sys_update_name><sys_updated_by>b.moers</sys_updated_by><sys_updated_on>2018-12-13 07:13:50</sys_updated_on><web_service_operation display_value="CI - Get Scope Details">2082ef56db1667c076d6b94ffe961972</web_service_operation><web_service_query_parameter display_value="sysparm_fields">8d336669dbb3db0076d6b94ffe96193e</web_service_query_parameter></sys_ws_query_parameter_map></record_update>]]></payload>
<payload_hash>745936740</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:52</sys_created_on>
<sys_id>105357b32f15b850d8455aab2799b6bc</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c99180000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:52</sys_updated_on>
<table/>
<target_name>8d336669dbb3db0076d6b94ffe96193e</target_name>
<type>Scripted REST Query Parameter Associatio</type>
<update_domain>global</update_domain>
<update_guid>c89200e8337773009234c8f69197a79f</update_guid>
<update_guid_history>2a7abbd0507773008023d072b8f1d33b:745936740,2a7abbd0507773008023d072b8f1d33b:745936740,2a7abbd0507773008023d072b8f1d33b:745936740,5792ef1a5a1667c0599a4d9b6df6b276:-1335327508</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_ws_query_parameter_map_c71d66f1dbffdb0076d6b94ffe9619d5</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ws_query_parameter_map"><sys_ws_query_parameter_map action="INSERT_OR_UPDATE"><sys_class_name>sys_ws_query_parameter_map</sys_class_name><sys_created_by>b.moers</sys_created_by><sys_created_on>2018-08-09 07:26:14</sys_created_on><sys_id>c71d66f1dbffdb0076d6b94ffe9619d5</sys_id><sys_mod_count>0</sys_mod_count><sys_name>a6294a65db73db0076d6b94ffe961937</sys_name><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_update_name>sys_ws_query_parameter_map_c71d66f1dbffdb0076d6b94ffe9619d5</sys_update_name><sys_updated_by>b.moers</sys_updated_by><sys_updated_on>2018-08-09 07:26:14</sys_updated_on><web_service_operation display_value="CI - Get Files from Table">f3cca2b1dbffdb0076d6b94ffe96191e</web_service_operation><web_service_query_parameter display_value="sysparm_offset">a6294a65db73db0076d6b94ffe961937</web_service_query_parameter></sys_ws_query_parameter_map></record_update>]]></payload>
<payload_hash>1798408538</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:52</sys_created_on>
<sys_id>105357b32f15b850d8455aab2799b6bf</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c944d0000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:52</sys_updated_on>
<table/>
<target_name>a6294a65db73db0076d6b94ffe961937</target_name>
<type>Scripted REST Query Parameter Associatio</type>
<update_domain>global</update_domain>
<update_guid>049200e840777300bfbd1a48ed2b8ab6</update_guid>
<update_guid_history>2a7abbd077777300c300542b035ee862:1798408538,2a7abbd077777300c300542b035ee862:1798408538,2a7abbd077777300c300542b035ee862:1798408538,a5ea9b3bee57a780d252d9cf7b8381ff:636258898,dc2d66f1dfffdb00b412c9508d5bd28d:1030593322</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_ws_operation_6bed8babdbebd300dfa9b94ffe9619c6</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_ws_operation"&gt;&lt;sys_ws_operation action="INSERT_OR_UPDATE"&gt;&lt;active&gt;true&lt;/active&gt;&lt;consumes&gt;application/json,application/xml,text/xml&lt;/consumes&gt;&lt;consumes_customized&gt;false&lt;/consumes_customized&gt;&lt;default_operation_uri&gt;/api/devops/cicd/atf/test&lt;/default_operation_uri&gt;&lt;enforce_acl&gt;9041d7a3db2fd300dfa9b94ffe961910&lt;/enforce_acl&gt;&lt;http_method&gt;POST&lt;/http_method&gt;&lt;name&gt;ATF - Run Test&lt;/name&gt;&lt;operation_script&gt;&lt;![CDATA[(function process(/*RESTAPIRequest*/ request, /*RESTAPIResponse*/ response) {

    return new CiCdAtf(request, response).executeTest();

})(request, response);]]&gt;&lt;/operation_script&gt;&lt;operation_uri&gt;/api/devops/v1/cicd/atf/test&lt;/operation_uri&gt;&lt;produces&gt;application/json,application/xml,text/xml&lt;/produces&gt;&lt;produces_customized&gt;false&lt;/produces_customized&gt;&lt;relative_path&gt;/atf/test&lt;/relative_path&gt;&lt;request_example/&gt;&lt;requires_acl_authorization&gt;true&lt;/requires_acl_authorization&gt;&lt;requires_authentication&gt;true&lt;/requires_authentication&gt;&lt;requires_snc_internal_role&gt;true&lt;/requires_snc_internal_role&gt;&lt;short_description&gt;Execute an ATF test from remote&lt;/short_description&gt;&lt;sys_class_name&gt;sys_ws_operation&lt;/sys_class_name&gt;&lt;sys_created_by&gt;b.moers&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2018-08-02 10:04:07&lt;/sys_created_on&gt;&lt;sys_id&gt;6bed8babdbebd300dfa9b94ffe9619c6&lt;/sys_id&gt;&lt;sys_mod_count&gt;3&lt;/sys_mod_count&gt;&lt;sys_name&gt;ATF - Run Test&lt;/sys_name&gt;&lt;sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e"&gt;19190fabdbebd300dfa9b94ffe96193e&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="CICD Integration"&gt;19190fabdbebd300dfa9b94ffe96193e&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_ws_operation_6bed8babdbebd300dfa9b94ffe9619c6&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;b.moers&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2018-08-02 11:07:46&lt;/sys_updated_on&gt;&lt;web_service_definition display_value="CICD Integration"&gt;81eccb6fdbebd300dfa9b94ffe96190e&lt;/web_service_definition&gt;&lt;web_service_version display_value="v1"&gt;0a3dcb2fdbebd300dfa9b94ffe9619c7&lt;/web_service_version&gt;&lt;/sys_ws_operation&gt;&lt;/record_update&gt;</payload>
<payload_hash>-1162155684</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:52</sys_created_on>
<sys_id>145357b32f15b850d8455aab2799b6b8</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c92040000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:52</sys_updated_on>
<table/>
<target_name>ATF - Run Test</target_name>
<type>Scripted REST Resource</type>
<update_domain>global</update_domain>
<update_guid>849200e83577730027eb4e2ef3177980</update_guid>
<update_guid_history>1e7abbd00d777300c432ad562843e607:-1162155684,1e7abbd00d777300c432ad562843e607:-1162155684,1e7abbd00d777300c432ad562843e607:-1162155684,4dbc5367b82fd3003dd864560e86c352:-1976718057,4dbc5367b82fd3003dd864560e86c352:-1976718057,6472dfe3f12fd30048d5e3e063b0afe9:-1358705338,bcee8bef96ebd30038048ee58a306ca8:2097354080,382e8bab97ebd30069f7e5c2f0933ecd:568975858</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_ws_query_parameter_db836e29dbb3db0076d6b94ffe961976</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ws_query_parameter"><sys_ws_query_parameter action="INSERT_OR_UPDATE"><example_value/><name>sysparm_query_category</name><required>false</required><short_description>Name of the query category (read replica category) to use for queries</short_description><sys_class_name>sys_ws_query_parameter</sys_class_name><sys_created_by>b.moers</sys_created_by><sys_created_on>2018-08-08 12:05:55</sys_created_on><sys_id>db836e29dbb3db0076d6b94ffe961976</sys_id><sys_mod_count>0</sys_mod_count><sys_name>sysparm_query_category</sys_name><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_update_name>sys_ws_query_parameter_db836e29dbb3db0076d6b94ffe961976</sys_update_name><sys_updated_by>b.moers</sys_updated_by><sys_updated_on>2018-08-08 12:05:55</sys_updated_on><web_service_definition display_value="CICD Integration">81eccb6fdbebd300dfa9b94ffe96190e</web_service_definition></sys_ws_query_parameter></record_update>]]></payload>
<payload_hash>1477616023</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:52</sys_created_on>
<sys_id>145357b32f15b850d8455aab2799b6bb</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c92c00000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:52</sys_updated_on>
<table/>
<target_name>sysparm_query_category</target_name>
<type>Scripted REST Query Parameter</type>
<update_domain>global</update_domain>
<update_guid>489200e8317773007ef28fca4df1c899</update_guid>
<update_guid_history>be7abbd0797773004b854904162bcc99:1477616023,be7abbd0797773004b854904162bcc99:1477616023,be7abbd0797773004b854904162bcc99:1477616023,d3836a69aab3db000189068ef1d0c86b:-1060531745</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_ws_query_parameter_map_790b6e31dbffdb0076d6b94ffe9619f1</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ws_query_parameter_map"><sys_ws_query_parameter_map action="INSERT_OR_UPDATE"><sys_class_name>sys_ws_query_parameter_map</sys_class_name><sys_created_by>b.moers</sys_created_by><sys_created_on>2018-08-09 07:17:08</sys_created_on><sys_id>790b6e31dbffdb0076d6b94ffe9619f1</sys_id><sys_mod_count>0</sys_mod_count><sys_name>12c846a5db73db0076d6b94ffe961917</sys_name><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_update_name>sys_ws_query_parameter_map_790b6e31dbffdb0076d6b94ffe9619f1</sys_update_name><sys_updated_by>b.moers</sys_updated_by><sys_updated_on>2018-08-09 07:17:08</sys_updated_on><web_service_operation display_value="CI - Get All Test In Suites">7f82aa29dbb3db0076d6b94ffe9619af</web_service_operation><web_service_query_parameter display_value="sysparm_limit">12c846a5db73db0076d6b94ffe961917</web_service_query_parameter></sys_ws_query_parameter_map></record_update>]]></payload>
<payload_hash>52151329</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:52</sys_created_on>
<sys_id>145357b32f15b850d8455aab2799b6be</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c939b0000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:52</sys_updated_on>
<table/>
<target_name>12c846a5db73db0076d6b94ffe961917</target_name>
<type>Scripted REST Query Parameter Associatio</type>
<update_domain>global</update_domain>
<update_guid>0c9200e8a5777300b874597f929680b0</update_guid>
<update_guid_history>227abbd08a7773005afee393feb9215c:52151329,227abbd08a7773005afee393feb9215c:52151329,227abbd08a7773005afee393feb9215c:52151329,e1ea9b3bbe57a780de04d564e52fe2fb:1584319145,fe0b2e3186ffdb000c8393ab35460d7d:1207956701</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_ws_operation_3ad166b2db1ea7c076d6b94ffe961964</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_ws_operation"&gt;&lt;sys_ws_operation action="INSERT_OR_UPDATE"&gt;&lt;active&gt;true&lt;/active&gt;&lt;consumes&gt;application/json,application/xml,text/xml&lt;/consumes&gt;&lt;consumes_customized&gt;false&lt;/consumes_customized&gt;&lt;default_operation_uri&gt;/api/devops/cicd/pull_request&lt;/default_operation_uri&gt;&lt;enforce_acl&gt;2ae86fe7db6fd300dfa9b94ffe9619bc&lt;/enforce_acl&gt;&lt;http_method&gt;POST&lt;/http_method&gt;&lt;name&gt;CI - Pull Request WebHook Proxy&lt;/name&gt;&lt;operation_script&gt;&lt;![CDATA[(function process(/*RESTAPIRequest*/ request, /*RESTAPIResponse*/ response) {

    return new CiCdWebHook(request, response).proxy();

})(request, response);]]&gt;&lt;/operation_script&gt;&lt;operation_uri&gt;/api/devops/v1/cicd/pull_request&lt;/operation_uri&gt;&lt;produces&gt;application/json,application/xml,text/xml&lt;/produces&gt;&lt;produces_customized&gt;false&lt;/produces_customized&gt;&lt;relative_path&gt;/pull_request&lt;/relative_path&gt;&lt;request_example/&gt;&lt;requires_acl_authorization&gt;true&lt;/requires_acl_authorization&gt;&lt;requires_authentication&gt;false&lt;/requires_authentication&gt;&lt;requires_snc_internal_role&gt;true&lt;/requires_snc_internal_role&gt;&lt;short_description&gt;Request Target to Pull an UpdateSet from Source&lt;/short_description&gt;&lt;sys_class_name&gt;sys_ws_operation&lt;/sys_class_name&gt;&lt;sys_created_by&gt;b.moers&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2018-12-14 15:47:53&lt;/sys_created_on&gt;&lt;sys_id&gt;3ad166b2db1ea7c076d6b94ffe961964&lt;/sys_id&gt;&lt;sys_mod_count&gt;1&lt;/sys_mod_count&gt;&lt;sys_name&gt;CI - Pull Request WebHook Proxy&lt;/sys_name&gt;&lt;sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e"&gt;19190fabdbebd300dfa9b94ffe96193e&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="CICD Integration"&gt;19190fabdbebd300dfa9b94ffe96193e&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_ws_operation_3ad166b2db1ea7c076d6b94ffe961964&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;b.moers&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2018-12-14 15:48:09&lt;/sys_updated_on&gt;&lt;web_service_definition display_value="CICD Integration"&gt;81eccb6fdbebd300dfa9b94ffe96190e&lt;/web_service_definition&gt;&lt;web_service_version display_value="v1"&gt;0a3dcb2fdbebd300dfa9b94ffe9619c7&lt;/web_service_version&gt;&lt;/sys_ws_operation&gt;&lt;/record_update&gt;</payload>
<payload_hash>713862176</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:52</sys_created_on>
<sys_id>185357b32f15b850d8455aab2799b6b7</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c9a1b0000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:52</sys_updated_on>
<table/>
<target_name>CI - Pull Request WebHook Proxy</target_name>
<type>Scripted REST Resource</type>
<update_domain>global</update_domain>
<update_guid>cc9200e8b677730043cf7506f661ac79</update_guid>
<update_guid_history>167abbd0ce7773009739ba9db68ed401:713862176,167abbd0ce7773009739ba9db68ed401:713862176,167abbd0ce7773009739ba9db68ed401:713862176,7ee126f2eb1ea7c01ca33cd183a39a5f:-644078445,7ee126f2eb1ea7c01ca33cd183a39a5f:-644078445,fed166b26c1ea7c02476134336102065:1427594518</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_ws_query_parameter_12c846a5db73db0076d6b94ffe961917</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ws_query_parameter"><sys_ws_query_parameter action="INSERT_OR_UPDATE"><example_value>100</example_value><name>sysparm_limit</name><required>false</required><short_description>The maximum number of results returned per page (default: 10,000)</short_description><sys_class_name>sys_ws_query_parameter</sys_class_name><sys_created_by>b.moers</sys_created_by><sys_created_on>2018-08-08 10:09:37</sys_created_on><sys_id>12c846a5db73db0076d6b94ffe961917</sys_id><sys_mod_count>0</sys_mod_count><sys_name>sysparm_limit</sys_name><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_update_name>sys_ws_query_parameter_12c846a5db73db0076d6b94ffe961917</sys_update_name><sys_updated_by>b.moers</sys_updated_by><sys_updated_on>2018-08-08 10:09:37</sys_updated_on><web_service_definition display_value="CICD Integration">81eccb6fdbebd300dfa9b94ffe96190e</web_service_definition></sys_ws_query_parameter></record_update>]]></payload>
<payload_hash>1354293458</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:52</sys_created_on>
<sys_id>185357b32f15b850d8455aab2799b6ba</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c92290000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:52</sys_updated_on>
<table/>
<target_name>sysparm_limit</target_name>
<type>Scripted REST Query Parameter</type>
<update_domain>global</update_domain>
<update_guid>4c9200e8ca777300d5b9e4f077967a93</update_guid>
<update_guid_history>b67abbd01c777300fca0dcc8dffa1c93:1354293458,b67abbd01c777300fca0dcc8dffa1c93:1354293458,b67abbd01c777300fca0dcc8dffa1c93:1354293458,3fe80665a773db001e346bbbc1a9aa13:1213871834</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_ws_query_parameter_map_5ad9ea31dbffdb0076d6b94ffe961979</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ws_query_parameter_map"><sys_ws_query_parameter_map action="INSERT_OR_UPDATE"><sys_class_name>sys_ws_query_parameter_map</sys_class_name><sys_created_by>b.moers</sys_created_by><sys_created_on>2018-08-09 07:12:05</sys_created_on><sys_id>5ad9ea31dbffdb0076d6b94ffe961979</sys_id><sys_mod_count>0</sys_mod_count><sys_name>8d736e29dbb3db0076d6b94ffe961989</sys_name><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_update_name>sys_ws_query_parameter_map_5ad9ea31dbffdb0076d6b94ffe961979</sys_update_name><sys_updated_by>b.moers</sys_updated_by><sys_updated_on>2018-08-09 07:12:05</sys_updated_on><web_service_operation display_value="CI - Get UpdateSet Details">dfe5f9e1db33db0076d6b94ffe96198a</web_service_operation><web_service_query_parameter display_value="sysparm_display_value">8d736e29dbb3db0076d6b94ffe961989</web_service_query_parameter></sys_ws_query_parameter_map></record_update>]]></payload>
<payload_hash>2142364858</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:52</sys_created_on>
<sys_id>185357b32f15b850d8455aab2799b6bd</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c93490000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:52</sys_updated_on>
<table/>
<target_name>8d736e29dbb3db0076d6b94ffe961989</target_name>
<type>Scripted REST Query Parameter Associatio</type>
<update_domain>global</update_domain>
<update_guid>409200e8ab7773003f5139066168f0ab</update_guid>
<update_guid_history>667abbd0af777300d86075add70ce955:2142364858,667abbd0af777300d86075add70ce955:2142364858,667abbd0af777300d86075add70ce955:2142364858,6dea9b3bc157a7805041d0c247e814f6:-406265934,81e9ee790dbfdb00c40a36cae18005d6:-94136264</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_ws_operation_0dc4a3f9db731f0076d6b94ffe961989</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_ws_operation"&gt;&lt;sys_ws_operation action="INSERT_OR_UPDATE"&gt;&lt;active&gt;true&lt;/active&gt;&lt;consumes&gt;application/json,application/xml,text/xml&lt;/consumes&gt;&lt;consumes_customized&gt;false&lt;/consumes_customized&gt;&lt;default_operation_uri&gt;/api/devops/cicd/updateset_status/{updateSetSysId}&lt;/default_operation_uri&gt;&lt;enforce_acl&gt;1a7833bddbb31f0076d6b94ffe961994&lt;/enforce_acl&gt;&lt;http_method&gt;PATCH&lt;/http_method&gt;&lt;name&gt;CI - Set UpdateSet Status&lt;/name&gt;&lt;operation_script&gt;&lt;![CDATA[(function process(/*RESTAPIRequest*/ request, /*RESTAPIResponse*/ response) {
	
	return new CiCdApi(request, response).setUpdateSetStatus(request.pathParams.updateSetSysId);

})(request, response);]]&gt;&lt;/operation_script&gt;&lt;operation_uri&gt;/api/devops/v1/cicd/updateset_status/{updateSetSysId}&lt;/operation_uri&gt;&lt;produces&gt;application/json&lt;/produces&gt;&lt;produces_customized&gt;true&lt;/produces_customized&gt;&lt;relative_path&gt;/updateset_status/{updateSetSysId}&lt;/relative_path&gt;&lt;request_example&gt;{&amp;#13;
    "state": "state"&amp;#13;
}&lt;/request_example&gt;&lt;requires_acl_authorization&gt;true&lt;/requires_acl_authorization&gt;&lt;requires_authentication&gt;true&lt;/requires_authentication&gt;&lt;requires_snc_internal_role&gt;true&lt;/requires_snc_internal_role&gt;&lt;short_description&gt;Update the status of an UpdateSet&lt;/short_description&gt;&lt;sys_class_name&gt;sys_ws_operation&lt;/sys_class_name&gt;&lt;sys_created_by&gt;b.moers&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2018-08-09 11:29:19&lt;/sys_created_on&gt;&lt;sys_id&gt;0dc4a3f9db731f0076d6b94ffe961989&lt;/sys_id&gt;&lt;sys_mod_count&gt;7&lt;/sys_mod_count&gt;&lt;sys_name&gt;CI - Set UpdateSet Status&lt;/sys_name&gt;&lt;sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e"&gt;19190fabdbebd300dfa9b94ffe96193e&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="CICD Integration"&gt;19190fabdbebd300dfa9b94ffe96193e&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_ws_operation_0dc4a3f9db731f0076d6b94ffe961989&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;b.moers&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2018-10-09 14:34:56&lt;/sys_updated_on&gt;&lt;web_service_definition display_value="CICD Integration"&gt;81eccb6fdbebd300dfa9b94ffe96190e&lt;/web_service_definition&gt;&lt;web_service_version display_value="v1"&gt;0a3dcb2fdbebd300dfa9b94ffe9619c7&lt;/web_service_version&gt;&lt;/sys_ws_operation&gt;&lt;/record_update&gt;</payload>
<payload_hash>-1572643006</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:52</sys_created_on>
<sys_id>1c5357b32f15b850d8455aab2799b6b6</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c96210000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:52</sys_updated_on>
<table/>
<target_name>CI - Set UpdateSet Status</target_name>
<type>Scripted REST Resource</type>
<update_domain>global</update_domain>
<update_guid>089200e8267773001a51053ca477da73</update_guid>
<update_guid_history>1e7a7bd0987773001e4ca82e652c98fa:-1572643006,1e7a7bd0987773001e4ca82e652c98fa:-1572643006,1e7a7bd0987773001e4ca82e652c98fa:-1572643006,cb389e29e64dab8022415f70136df6ea:-1092407363,cb389e29e64dab8022415f70136df6ea:-1092407363,1929fbbd92b31f0043dfa8d518a2006a:-96042052,fe76e7bde3731f00ea4b0764caeec39b:694439244,f4e563bdad731f002ef3a1f0bc10cad8:1778087914,60b523bdbe731f00b42a186a8feb4935:-1953595404,5d9523bd50731f00cf812a651682b324:-1573404310,a5652f3dc1731f00243f53d62eb2a08c:931391444,cdc4a3f96f731f00173c34c76de4538a:1968887680</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_ws_operation_d6cf0b23db2fd300dfa9b94ffe9619cc</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_ws_operation"&gt;&lt;sys_ws_operation action="INSERT_OR_UPDATE"&gt;&lt;active&gt;true&lt;/active&gt;&lt;consumes&gt;application/json,application/xml,text/xml&lt;/consumes&gt;&lt;consumes_customized&gt;false&lt;/consumes_customized&gt;&lt;default_operation_uri&gt;/api/devops/cicd/atf/track/{executionId}&lt;/default_operation_uri&gt;&lt;enforce_acl&gt;9041d7a3db2fd300dfa9b94ffe961910&lt;/enforce_acl&gt;&lt;http_method&gt;GET&lt;/http_method&gt;&lt;name&gt;ATF - Get Execution Tracker State&lt;/name&gt;&lt;operation_script&gt;&lt;![CDATA[(function process(/*RESTAPIRequest*/ request, /*RESTAPIResponse*/ response) {

    return new CiCdAtf(request, response).getExecutionTrackerState();

})(request, response);]]&gt;&lt;/operation_script&gt;&lt;operation_uri&gt;/api/devops/v1/cicd/atf/track/{executionId}&lt;/operation_uri&gt;&lt;produces&gt;application/json,application/xml,text/xml&lt;/produces&gt;&lt;produces_customized&gt;false&lt;/produces_customized&gt;&lt;relative_path&gt;/atf/track/{executionId}&lt;/relative_path&gt;&lt;request_example/&gt;&lt;requires_acl_authorization&gt;true&lt;/requires_acl_authorization&gt;&lt;requires_authentication&gt;true&lt;/requires_authentication&gt;&lt;requires_snc_internal_role&gt;true&lt;/requires_snc_internal_role&gt;&lt;short_description&gt;Get the status of the test execution&lt;/short_description&gt;&lt;sys_class_name&gt;sys_ws_operation&lt;/sys_class_name&gt;&lt;sys_created_by&gt;b.moers&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2018-08-02 10:12:12&lt;/sys_created_on&gt;&lt;sys_id&gt;d6cf0b23db2fd300dfa9b94ffe9619cc&lt;/sys_id&gt;&lt;sys_mod_count&gt;2&lt;/sys_mod_count&gt;&lt;sys_name&gt;ATF - Get Execution Tracker State&lt;/sys_name&gt;&lt;sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e"&gt;19190fabdbebd300dfa9b94ffe96193e&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="CICD Integration"&gt;19190fabdbebd300dfa9b94ffe96193e&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_ws_operation_d6cf0b23db2fd300dfa9b94ffe9619cc&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;b.moers&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2018-08-02 11:07:17&lt;/sys_updated_on&gt;&lt;web_service_definition display_value="CICD Integration"&gt;81eccb6fdbebd300dfa9b94ffe96190e&lt;/web_service_definition&gt;&lt;web_service_version display_value="v1"&gt;0a3dcb2fdbebd300dfa9b94ffe9619c7&lt;/web_service_version&gt;&lt;/sys_ws_operation&gt;&lt;/record_update&gt;</payload>
<payload_hash>60048515</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:52</sys_created_on>
<sys_id>1c5357b32f15b850d8455aab2799b6b9</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c91ca0000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:52</sys_updated_on>
<table/>
<target_name>ATF - Get Execution Tracker State</target_name>
<type>Scripted REST Resource</type>
<update_domain>global</update_domain>
<update_guid>0c9200e8ed777300386a74ccdc03328b</update_guid>
<update_guid_history>927abbd0c17773005b48808ac63fd113:60048515,927abbd0c17773005b48808ac63fd113:60048515,927abbd0c17773005b48808ac63fd113:60048515,b19cdbe35d2fd300d303d4fc8e4a5378:-575737584,b19cdbe35d2fd300d303d4fc8e4a5378:-575737584,37b15fa34d2fd3004af821070f1c0343:-778027327,03ff8b23e92fd300add845a2bb869fb2:-1643845483</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_ws_query_parameter_map_2da36669dbb3db0076d6b94ffe961903</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ws_query_parameter_map"><sys_ws_query_parameter_map action="INSERT_OR_UPDATE"><sys_class_name>sys_ws_query_parameter_map</sys_class_name><sys_created_by>b.moers</sys_created_by><sys_created_on>2018-08-08 12:06:28</sys_created_on><sys_id>2da36669dbb3db0076d6b94ffe961903</sys_id><sys_mod_count>0</sys_mod_count><sys_name>8d736e29dbb3db0076d6b94ffe961989</sys_name><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_update_name>sys_ws_query_parameter_map_2da36669dbb3db0076d6b94ffe961903</sys_update_name><sys_updated_by>b.moers</sys_updated_by><sys_updated_on>2018-08-08 12:06:28</sys_updated_on><web_service_operation display_value="CI - Get UpdateSet Files">4f6a31a9db33db0076d6b94ffe9619fa</web_service_operation><web_service_query_parameter display_value="sysparm_display_value">8d736e29dbb3db0076d6b94ffe961989</web_service_query_parameter></sys_ws_query_parameter_map></record_update>]]></payload>
<payload_hash>-1640333757</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:52</sys_created_on>
<sys_id>1c5357b32f15b850d8455aab2799b6bc</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c92da0000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:52</sys_updated_on>
<table/>
<target_name>8d736e29dbb3db0076d6b94ffe961989</target_name>
<type>Scripted REST Query Parameter Associatio</type>
<update_domain>global</update_domain>
<update_guid>c49200e8f4777300a28d355ebd8491a5</update_guid>
<update_guid_history>267abbd0077773009ea094871d729842:-1640333757,267abbd0077773009ea094871d729842:-1640333757,267abbd0077773009ea094871d729842:-1640333757,e1ea9b3b0a57a780c84258d9c38e74f2:591648571,aba3226945b3db006429aed10c6b80c2:-2045768253</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_ws_query_parameter_map_e8bde335dbb31f0076d6b94ffe961948</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ws_query_parameter_map"><sys_ws_query_parameter_map action="INSERT_OR_UPDATE"><sys_class_name>sys_ws_query_parameter_map</sys_class_name><sys_created_by>b.moers</sys_created_by><sys_created_on>2018-08-09 12:08:30</sys_created_on><sys_id>e8bde335dbb31f0076d6b94ffe961948</sys_id><sys_mod_count>0</sys_mod_count><sys_name>8d736e29dbb3db0076d6b94ffe961989</sys_name><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_update_name>sys_ws_query_parameter_map_e8bde335dbb31f0076d6b94ffe961948</sys_update_name><sys_updated_by>b.moers</sys_updated_by><sys_updated_on>2018-08-09 12:08:30</sys_updated_on><web_service_operation display_value="CI - Set UpdateSet Status">0dc4a3f9db731f0076d6b94ffe961989</web_service_operation><web_service_query_parameter display_value="sysparm_display_value">8d736e29dbb3db0076d6b94ffe961989</web_service_query_parameter></sys_ws_query_parameter_map></record_update>]]></payload>
<payload_hash>-1031452830</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:52</sys_created_on>
<sys_id>1c5357b32f15b850d8455aab2799b6bf</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c94d40000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:52</sys_updated_on>
<table/>
<target_name>8d736e29dbb3db0076d6b94ffe961989</target_name>
<type>Scripted REST Query Parameter Associatio</type>
<update_domain>global</update_domain>
<update_guid>c09200e8047773002efca606a5a739c8</update_guid>
<update_guid_history>e67abbd0e977730085613b6a90b09b75:-1031452830,e67abbd0e977730085613b6a90b09b75:-1031452830,e67abbd0e977730085613b6a90b09b75:-1031452830,4fbd2bf10ab31f002f9100e1e77ecf8e:-559477398</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_properties_category_m2m_94083fe7db34e380432cfc600f9619be</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_properties_category_m2m"><sys_properties_category_m2m action="INSERT_OR_UPDATE"><category display_value="CICD Integration">8d1de113dbb86380432cfc600f9619f6</category><order>300</order><property display_value="cicd-integration.server.mid-server-name" name="cicd-integration.server.mid-server-name">cf30d293db3c6380432cfc600f961913</property><sys_class_name>sys_properties_category_m2m</sys_class_name><sys_created_by>b.moers</sys_created_by><sys_created_on>2018-10-03 16:25:32</sys_created_on><sys_id>94083fe7db34e380432cfc600f9619be</sys_id><sys_mod_count>0</sys_mod_count><sys_name>cicd-integration.server.mid-server-name.CICD Integration</sys_name><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_update_name>sys_properties_category_m2m_94083fe7db34e380432cfc600f9619be</sys_update_name><sys_updated_by>b.moers</sys_updated_by><sys_updated_on>2018-10-03 16:25:32</sys_updated_on></sys_properties_category_m2m></record_update>]]></payload>
<payload_hash>834747044</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:51</sys_created_on>
<sys_id>405357b32f15b850d8455aab2799b6a8</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c95c40000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:51</sys_updated_on>
<table/>
<target_name>cicd-integration.server.mid-server-name.CICD Integration</target_name>
<type>Category Property</type>
<update_domain>global</update_domain>
<update_guid>2f82cca8f2777300a9384868a1b7f3d6</update_guid>
<update_guid_history>267abbd084777300bf9177308b72ce26:834747044,267abbd084777300bf9177308b72ce26:834747044,267abbd084777300bf9177308b72ce26:834747044,54083fe76234e38044259b68344e50bf:1430501724</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_script_4d57c452dbe333801af8b14ffe96198b</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update sys_domain="global" table="sys_script"&gt;&lt;sys_script action="INSERT_OR_UPDATE"&gt;&lt;abort_action&gt;false&lt;/abort_action&gt;&lt;access&gt;package_private&lt;/access&gt;&lt;action_delete&gt;false&lt;/action_delete&gt;&lt;action_insert&gt;true&lt;/action_insert&gt;&lt;action_query&gt;false&lt;/action_query&gt;&lt;action_update&gt;true&lt;/action_update&gt;&lt;active&gt;true&lt;/active&gt;&lt;add_message&gt;false&lt;/add_message&gt;&lt;advanced&gt;true&lt;/advanced&gt;&lt;change_fields&gt;false&lt;/change_fields&gt;&lt;client_callable&gt;false&lt;/client_callable&gt;&lt;collection&gt;sys_remote_update_set&lt;/collection&gt;&lt;condition/&gt;&lt;description/&gt;&lt;execute_function&gt;false&lt;/execute_function&gt;&lt;filter_condition/&gt;&lt;is_rest&gt;false&lt;/is_rest&gt;&lt;message/&gt;&lt;name&gt;[CICD] Send Deployment Complete to CICD&lt;/name&gt;&lt;order&gt;1&lt;/order&gt;&lt;priority&gt;1&lt;/priority&gt;&lt;rest_method/&gt;&lt;rest_method_text/&gt;&lt;rest_service/&gt;&lt;rest_service_text/&gt;&lt;rest_variables/&gt;&lt;role_conditions/&gt;&lt;script&gt;&lt;![CDATA[(function executeRule(current) {
	new global.CiCdRun().sys_remote_update_set_After_IU(current);
})(current);]]&gt;&lt;/script&gt;&lt;sys_class_name&gt;sys_script&lt;/sys_class_name&gt;&lt;sys_created_by&gt;b.moers&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2019-08-30 14:45:25&lt;/sys_created_on&gt;&lt;sys_domain&gt;global&lt;/sys_domain&gt;&lt;sys_domain_path&gt;/&lt;/sys_domain_path&gt;&lt;sys_id&gt;4d57c452dbe333801af8b14ffe96198b&lt;/sys_id&gt;&lt;sys_mod_count&gt;1&lt;/sys_mod_count&gt;&lt;sys_name&gt;[CICD] Send Deployment Complete to CICD&lt;/sys_name&gt;&lt;sys_overrides/&gt;&lt;sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e"&gt;19190fabdbebd300dfa9b94ffe96193e&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="CICD Integration"&gt;19190fabdbebd300dfa9b94ffe96193e&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_script_4d57c452dbe333801af8b14ffe96198b&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;b.moers&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2019-09-24 10:02:40&lt;/sys_updated_on&gt;&lt;template/&gt;&lt;when&gt;after&lt;/when&gt;&lt;/sys_script&gt;&lt;sys_translated_text action="delete_multiple" query="documentkey=4d57c452dbe333801af8b14ffe96198b"/&gt;&lt;/record_update&gt;</payload>
<payload_hash>1976585190</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:51</sys_created_on>
<sys_id>405357b32f15b850d8455aab2799b6ab</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c9e780000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:51</sys_updated_on>
<table>sys_remote_update_set</table>
<target_name>[CICD] Send Deployment Complete to CICD</target_name>
<type>Business Rule</type>
<update_domain>global</update_domain>
<update_guid>0f56fbc6bb4484149a880a62bddb8b5b</update_guid>
<update_guid_history>0f56fbc6bb4484149a880a62bddb8b5b:-342186376,0f56fbc6bb4484149a880a62bddb8b5b:-342186376,4957c45224e3338014423e3f2bacc08e:-1432199529,727abbd06377730047cb74543adf89c8:-317732307,4957c45224e3338014423e3f2bacc08e:-1432199529</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_security_acl_2ae86fe7db6fd300dfa9b94ffe9619bc</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_security_acl"><sys_security_acl action="INSERT_OR_UPDATE"><active>true</active><admin_overrides>true</admin_overrides><advanced>false</advanced><condition/><description/><name>/api/devops/cicd/cd</name><operation display_value="execute">execute</operation><script/><sys_class_name>sys_security_acl</sys_class_name><sys_created_by>b.moers</sys_created_by><sys_created_on>2018-08-02 12:01:49</sys_created_on><sys_id>2ae86fe7db6fd300dfa9b94ffe9619bc</sys_id><sys_mod_count>1</sys_mod_count><sys_name>/api/devops/cicd/cd</sys_name><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_update_name>sys_security_acl_2ae86fe7db6fd300dfa9b94ffe9619bc</sys_update_name><sys_updated_by>b.moers</sys_updated_by><sys_updated_on>2018-08-10 07:15:50</sys_updated_on><type display_value="REST_Endpoint">REST_Endpoint</type></sys_security_acl></record_update>]]></payload>
<payload_hash>562390118</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:51</sys_created_on>
<sys_id>405357b32f15b850d8455aab2799b6ae</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c95660000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:51</sys_updated_on>
<table>/api/devops/cicd/cd</table>
<target_name>/api/devops/cicd/cd</target_name>
<type>Access Control</type>
<update_domain>global</update_domain>
<update_guid>bf8200e8f9777300888f41bf3373a331</update_guid>
<update_guid_history>fa7abbd0c0777300c4293417bcc9b9bd:562390118,fa7abbd0c0777300c4293417bcc9b9bd:562390118,fa7abbd0c0777300c4293417bcc9b9bd:562390118,f1547f46bfff1f0060f7d39420ca26a8:-561860192,b019efe7826fd3000e5d4fc3191cd9be:-1794256720</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_ui_action_view_957fbe33dbdf3f408fb6f6700f9619fc</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ui_action_view"><sys_ui_action_view action="INSERT_OR_UPDATE"><sys_class_name>sys_ui_action_view</sys_class_name><sys_created_by>b.moers</sys_created_by><sys_created_on>2019-08-23 09:45:05</sys_created_on><sys_id>957fbe33dbdf3f408fb6f6700f9619fc</sys_id><sys_mod_count>1</sys_mod_count><sys_name>Commit Update Set.CICD Preview</sys_name><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_ui_action display_value="Commit Update Set">c38b2cab0a0a0b5000470398d9e60c36</sys_ui_action><sys_ui_view display_value="CICD Preview" name="cicd_preview">cdb37233db9f3f408fb6f6700f96191a</sys_ui_view><sys_update_name>sys_ui_action_view_957fbe33dbdf3f408fb6f6700f9619fc</sys_update_name><sys_updated_by>b.moers</sys_updated_by><sys_updated_on>2019-08-23 09:45:13</sys_updated_on><visibility>exclude</visibility></sys_ui_action_view></record_update>]]></payload>
<payload_hash>-371666478</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:51</sys_created_on>
<sys_id>405357b32f15b850d8455aab2799b6b1</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c9cac0000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:51</sys_updated_on>
<table/>
<target_name>exclude</target_name>
<type>UI View Action</type>
<update_domain>global</update_domain>
<update_guid>937ffa33a4df3f40ece2dbdbee953c91</update_guid>
<update_guid_history>937ffa33a4df3f40ece2dbdbee953c91:-1280646966,937ffa33a4df3f40ece2dbdbee953c91:-1280646966,b67abbd0af77730075eabb88efbae19f:-371666478,937ffa33a4df3f40ece2dbdbee953c91:-1280646966,917fbe335adf3f406c329fb73a19abfe:1037813784</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>DELETE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_ui_section_6a34f597dbb2d010fcf41780399619f4</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update><sys_ui_section caption="CI/CD Settings" section_id="6a34f597dbb2d010fcf41780399619f4" sys_domain="global" table="sys_app" version="3" view=""><sys_ui_section action="DELETE"><caption>CI/CD Settings</caption><header>false</header><name>sys_app</name><roles/><sys_class_name/><sys_created_by/><sys_created_on/><sys_domain>global</sys_domain><sys_domain_path/><sys_id>6a34f597dbb2d010fcf41780399619f4</sys_id><sys_mod_count/><sys_name/><sys_overrides/><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_update_name/><sys_updated_by/><sys_updated_on>2020-10-22 08:26:42</sys_updated_on><sys_user/><title>false</title><view display_value="Default view" name="NULL">Default view</view><view_name/></sys_ui_section></sys_ui_section></record_update>]]></payload>
<payload_hash>1608007717</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:51</sys_created_on>
<sys_id>405357b32f15b850d8455aab2799b6b4</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2ca06b0000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:51</sys_updated_on>
<table>sys_app</table>
<target_name>Custom Application</target_name>
<type>Form Layout</type>
<update_domain>global</update_domain>
<update_guid>fec26c8994c02850f811a11caf786aba</update_guid>
<update_guid_history>fec26c8994c02850f811a11caf786aba:1608007717,ba5b39db59b2d0102320435c119fc2e6:422166066,13c9b19b1ab2d0105015432e3836d7d2:-48065333,b1b9799b2bb2d010cf2c17e9c210840d:-674887741,9659b59bebb2d0108ebe96c84598cb13:-2139407315,8e39359b2db2d0100f7ff827e282c30e:-743393758,7119b19baab2d010395c2c5bf20dca0f:-135320125,ddf8fd5bbeb2d01012875632c5159338:-351387720,5dd87d5b47b2d010bcb83b706b69fd59:307232882,d744355737b2d010e3d1e8d36eb25e6c:418876234</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_ui_view_cdb37233db9f3f408fb6f6700f96191a</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ui_view"><sys_ui_view action="INSERT_OR_UPDATE"><group/><hidden>false</hidden><name>cicd_preview</name><roles/><sys_class_name>sys_ui_view</sys_class_name><sys_created_by>b.moers</sys_created_by><sys_created_on>2019-08-23 08:53:44</sys_created_on><sys_id>cdb37233db9f3f408fb6f6700f96191a</sys_id><sys_mod_count>0</sys_mod_count><sys_name>CICD Preview</sys_name><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_update_name>sys_ui_view_cdb37233db9f3f408fb6f6700f96191a</sys_update_name><sys_updated_by>b.moers</sys_updated_by><sys_updated_on>2019-08-23 08:53:44</sys_updated_on><title>CICD Preview</title><user/></sys_ui_view></record_update>]]></payload>
<payload_hash>12315542</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:52</sys_created_on>
<sys_id>405357b32f15b850d8455aab2799b6b5</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c9c450000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:52</sys_updated_on>
<table/>
<target_name>CICD Preview</target_name>
<type>UI View</type>
<update_domain>global</update_domain>
<update_guid>49b37233829f3f404474e268c959471c</update_guid>
<update_guid_history>49b37233829f3f404474e268c959471c:-1792228338,49b37233829f3f404474e268c959471c:-1792228338,8f7abbd096777300ecb8c49891396ae6:12315542,49b37233829f3f404474e268c959471c:-1792228338</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_app_application_91194b2bdbebd300dfa9b94ffe96194d</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_app_application"><sys_app_application action="INSERT_OR_UPDATE"><active>true</active><category display_value="Administration">647e6524c0a80a080010856a87e15ce2</category><description/><device_type>browser</device_type><hint/><name>CICD Integration</name><order/><roles>admin,cicd_integration_user</roles><sys_class_name>sys_app_application</sys_class_name><sys_created_by>b.moers</sys_created_by><sys_created_on>2018-08-02 09:42:02</sys_created_on><sys_domain>global</sys_domain><sys_domain_path>/</sys_domain_path><sys_id>91194b2bdbebd300dfa9b94ffe96194d</sys_id><sys_mod_count>4</sys_mod_count><sys_name>CICD Integration</sys_name><sys_overrides/><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_update_name>sys_app_application_91194b2bdbebd300dfa9b94ffe96194d</sys_update_name><sys_updated_by>b.moers</sys_updated_by><sys_updated_on>2018-11-08 05:49:17</sys_updated_on><title>CICD Integration</title><view_name/></sys_app_application></record_update>]]></payload>
<payload_hash>-1896588942</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:51</sys_created_on>
<sys_id>40539f732f15b850d8455aab2799b61a</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c96e40000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:51</sys_updated_on>
<table/>
<target_name>CICD Integration</target_name>
<type>Application Menu</type>
<update_domain>global</update_domain>
<update_guid>6f82cca8a1777300f958839b44e6aeb8</update_guid>
<update_guid_history>cf7abbd07e777300e2d26249793fc8e4:-1896588942,cf7abbd07e777300e2d26249793fc8e4:-1896588942,cf7abbd07e777300e2d26249793fc8e4:-1896588942,239ffe030ca52b0059868815511d2af0:-2084281760,9dfc61138db863807769146883c02fa0:-1449457090,669c61dfa7786380209f36b4c687cd00:638189414,9d194fabd6ebd300ae99bef41746504c:2143855333,d9194b2b12ebd30094f3239d3e581a4e:586587755</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_properties_6cb7d2f6dbdaa7c076d6b94ffe9619b9</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_properties"><sys_properties action="INSERT_OR_UPDATE"><choices/><description>&lt;hr&gt;&lt;b&gt;Pull Request Proxy switch.&lt;/b&gt;&lt;br&gt;&#13;
Turn on if you want to route Pull-Request from a GIT Repository hosted on the Internet (e.g. GitHub) to the CICD Server.&lt;br&gt;&#13;
Request made to '/api/devops/cicd/pull_request' will be routed to this address.</description><ignore_cache>false</ignore_cache><is_private>false</is_private><name>cicd-integration.pull-request-proxy.enabled</name><read_roles/><suffix/><sys_class_name>sys_properties</sys_class_name><sys_created_by>b.moers</sys_created_by><sys_created_on>2018-12-14 15:03:29</sys_created_on><sys_id>6cb7d2f6dbdaa7c076d6b94ffe9619b9</sys_id><sys_mod_count>9</sys_mod_count><sys_name>cicd-integration.pull-request-proxy.enabled</sys_name><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_update_name>sys_properties_6cb7d2f6dbdaa7c076d6b94ffe9619b9</sys_update_name><sys_updated_by>admin</sys_updated_by><sys_updated_on>2021-02-17 12:09:19</sys_updated_on><type>boolean</type><value>false</value><write_roles/></sys_properties><sys_translated_text action="delete_multiple" query="documentkey=6cb7d2f6dbdaa7c076d6b94ffe9619b9"/></record_update>]]></payload>
<payload_hash>59401593</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:51</sys_created_on>
<sys_id>40539f732f15b850d8455aab2799b61d</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2ca2d80000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:51</sys_updated_on>
<table/>
<target_name>cicd-integration.pull-request-proxy.enabled</target_name>
<type>System Property</type>
<update_domain>global</update_domain>
<update_guid>5251450bb41228542a728d212a352ed0</update_guid>
<update_guid_history>5251450bb41228542a728d212a352ed0:59401593,0079d4e075c1a8506e098d1403fbf87c:59401593,0079d4e075c1a8506e098d1403fbf87c:59401593,7c21eb82d20c4050d09a247a804fff9c:59401593,7c21eb82d20c4050d09a247a804fff9c:59401593,2af6dbee87b3f7c0749e04eaaf5c8225:-345453608,dc4b29a4b5804c10599745bae2fa1e88:59401593,2af6dbee87b3f7c0749e04eaaf5c8225:-345453608,19a0a98351bcb340ca85fddc7b8ae055:59401593,c84321895caaefc0010a29ff8b9760ca:-345453608,2aa08bae1a64b700fae24033b1a11a6f:59401593,c84321895caaefc0010a29ff8b9760ca:-345453608,0113ed49acaaefc0dd028ca655360ae8:-1607555886,9903218985aaefc0246c80db649ffeea:404378700,4eb2e509176aefc0c7c2666cc2098b71:1442535500,b04226f2321ea7c05ececc7ed36e8464:-1948539613,5ebb567e25daa7c0a861411d50c80af7:1442535500,4db7963aa3daa7c07af4b74443048602:-1903194794</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_properties_ddf983a6db7be7409775f6700f961912</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_properties"><sys_properties action="INSERT_OR_UPDATE"><choices/><description>&lt;b&gt;Trigger CICD process on update set 'complete'.&lt;/b&gt;</description><ignore_cache>false</ignore_cache><is_private>false</is_private><name>cicd-integration.enabled.on-update-set</name><read_roles/><suffix/><sys_class_name>sys_properties</sys_class_name><sys_created_by>b.moers</sys_created_by><sys_created_on>2019-02-26 13:38:47</sys_created_on><sys_id>ddf983a6db7be7409775f6700f961912</sys_id><sys_mod_count>9</sys_mod_count><sys_name>cicd-integration.enabled.on-update-set</sys_name><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_update_name>sys_properties_ddf983a6db7be7409775f6700f961912</sys_update_name><sys_updated_by>admin</sys_updated_by><sys_updated_on>2021-02-17 12:08:56</sys_updated_on><type>boolean</type><value>false</value><write_roles/></sys_properties><sys_translated_text action="delete_multiple" query="documentkey=ddf983a6db7be7409775f6700f961912"/></record_update>]]></payload>
<payload_hash>1441765510</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:51</sys_created_on>
<sys_id>445357b32f15b850d8455aab2799b6aa</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2ca2530000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:51</sys_updated_on>
<table/>
<target_name>cicd-integration.enabled.on-update-set</target_name>
<type>System Property</type>
<update_domain>global</update_domain>
<update_guid>28414dc793122854c4523543b0db7745</update_guid>
<update_guid_history>28414dc793122854c4523543b0db7745:1441765510,08ceedb3929ca010d063dff3aeb23050:1441765510,08ceedb3929ca010d063dff3aeb23050:1441765510,305a21bf795ca01095879e1c5cedc411:1441765510,305a21bf795ca01095879e1c5cedc411:1441765510,edf02f82710c4050337b851f5862f1db:1441765510,edf02f82710c4050337b851f5862f1db:1441765510,e8197ca54ae3ff408ae53c2feaeb3608:-1402456303,a78543a864c44c104997d9c9c45bdb89:1441765510,b1deba6007c44c10bc2ed069771f6abb:-832188087,a2cdba60e5c44c1093851a4a0f6e311e:1441765510,b3bbbeac89844c10f401a40782945ea2:-832188087,c619a56067804c100748b5c96d959b11:1441765510,e8197ca54ae3ff408ae53c2feaeb3608:-1402456303,a257b825c5e3ff4026e06fefbe1558ec:-1901766210,6d473ce110e3ff40a0a1e16f0242ae71:-1402456303,3a377ce1a0e3ff40e5bb2ad256910237:-1901766210,f2377ce11be3ff40e66dbbe8e7135c36:-1402456303,2dc7d7333bf3fb00b52cf24c5768af1d:1441765510,b963d0a8a8b77300b70659cc4981ac1d:-832188087,2c3741a52de37f04d75e7880d8d48c67:1441765510,ba09c3da9ace3f005cf0c7ad7e0d41b7:-832188087,d590eeded94e3f0080ab527f7d24699e:1441765510,9f70a6de1f4e3f001035845ad0165a0d:-832188087,15a0a98348bcb3401ca639c9d5d37751:1441765510,c39a8fea477be740be96e96f41f40505:-1402456303,75808f2e6d64b7004de34a98a43e0cc5:1441765510,c39a8fea477be740be96e96f41f40505:-1402456303,2df90faa4c7be740e3f875a4f52d03f5:1133190884</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_script_include_94a29327db2fd300dfa9b94ffe9619a5</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;&lt;sys_script_include action="INSERT_OR_UPDATE"&gt;&lt;access&gt;public&lt;/access&gt;&lt;active&gt;true&lt;/active&gt;&lt;api_name&gt;global.CiCdAtf&lt;/api_name&gt;&lt;caller_access/&gt;&lt;client_callable&gt;false&lt;/client_callable&gt;&lt;description/&gt;&lt;name&gt;CiCdAtf&lt;/name&gt;&lt;script&gt;&lt;![CDATA[/* exported CiCdAtf */

/**
 * Class Description
 * 
 * @class 
 * @author Boris Moers
 * @requires sn_ws_err.module:sys_script_include.BadRequestError
 * @requires global.module:sys_script_include.TestExecutorAjax
 * @memberof global.module:sys_script_include
 */
var CiCdAtf = Class.create();

CiCdAtf.prototype = /** @lends global.module:sys_script_include.CiCdAtf.prototype */ {
 
    /**
      * Constructor
      * 
      * @param {any} request
      * @param {any} response
      * @returns {undefined}
      */
    initialize: function (request, response) {
        var self = this;
 
        self.request = request;
        self.response = response;
 
    },
 
    /**
      * Get param from URL path
      * 
      * @param {any} paramName
      * @param {any} callback
      * @returns {undefined}
      */
    getPathParam: function (paramName, callback) {
        var self = this,
            out = (paramName in self.request.pathParams) ? self.request.pathParams[paramName] : null;
 
        if (self.isFunction(callback)) {
            return callback(out);
        } else {
            return out;
        }
    },
 
    /**
      * Get param form URL query argument
      * 
      * @param {any} paramName
      * @param {any} callback
      * @returns {undefined}
      */
    getQueryParam: function (paramName, callback) {
        var self = this,
            out = (paramName in self.request.queryParams) ? (function () {
                var value = self.request.queryParams[paramName];
                if (Array.isArray(value)) {
                    return (value.length === 1) ? value[0] : value;
                } else {
                    return value;
                }
            })() : null;
 
        if (self.isFunction(callback)) {
            return callback(out);
        } else {
            return out;
        }
    },
 
 
    /**
      * Get the testrunner from the current user.
      * This requires the testrunner window to be opened in a browser first.
      * 
      * @param {any} runnerId
      * @returns {any} testRunnerSessionId
      */
    getTestRunnerSessionId: function (runnerId) {
        var testRunnerSessionId = null;
 
        var existingRunner = new GlideRecord('sys_atf_agent');
        existingRunner.addQuery('status', 'online');
        existingRunner.addQuery('type', 'manual');
        existingRunner.addQuery('user_agent', 'CONTAINS', runnerId);
        // existingRunner.addQuery("session_id", new GlideChecksum(gs.getSessionID()).getMD5());
        // otherSessionRunner.addQuery("session_id","!=", new GlideChecksum(gs.getSessionID()).getMD5());
        // existingRunner.addQuery("user", gs.getUserID());
        existingRunner.setLimit(1);
        existingRunner._query();
        if (existingRunner._next()) {
            testRunnerSessionId = existingRunner.getValue('session_id');
        }
        return testRunnerSessionId;
    },
 
 
    /**
      * Execute a Test-Suite&lt;br&gt;
      * 
      * mapped to POST /api/devops/v1/cicd/atf/suite
      * @returns {any} out
      */
    executeSuite: function () {
        var self = this,
            suiteId,
            runnerId,
            out = {
                executionId: null
            },
            need_browser = false,
            testRunnerSessionId = null;
 
        var requestBody = self.request.body;
        if (!requestBody || !requestBody.hasNext())
            return new sn_ws_err.BadRequestError('initialize: no body found');
 
        var body = requestBody.nextEntry();
        suiteId = body.id || null;
        if (gs.nil(suiteId))
            return new sn_ws_err.BadRequestError('initialize: suiteId property not found');
 
        runnerId = body.runnerId || null;
        if (gs.nil(runnerId))
            return new sn_ws_err.BadRequestError('initialize: runnerId property not found');
         
        var gr = new GlideRecord('sys_atf_test_suite');
        if (!gr.get(suiteId)) {
            return new sn_ws_err.BadRequestError('Could not find the Test suite with id: ' + suiteId);
        }
 
        out.url = gs.getProperty('glide.servlet.uri').concat(gr.getLink(true));
        out.name = gr.getDisplayValue();
 
        need_browser = sn_atf.AutomatedTestingFramework.doesSuiteHaveUITests(suiteId);
        if (need_browser) {
            testRunnerSessionId = self.getTestRunnerSessionId(runnerId);
            if (gs.nil(testRunnerSessionId)) {
                return new sn_ws_err.BadRequestError('This TestSuite requires an active Test Runner to be available.');
            }
        }
 
        // execute suite
        out.executionId = new TestExecutorAjax((function () {
            var params = {
                'sysparm_name': 'true',
                'sysparm_ajax_processor_ut_test_suite_id': suiteId,
                'sysparm_ajax_processor_test_runner_session_id': testRunnerSessionId
            };
            return {
                /**
                  * Description
                  * 
                  * @param {any} paramName
                  * @returns {MemberExpression}
                  */
                getParameter: function (paramName) {
                    return params[paramName];
                }
            };
        })(), new GlideXMLDocument(), '').process();
 
        /*
         var executor = new sn_atf.UserTestSuiteExecutor();
         executor.setTestSuiteSysId(suiteId);
         executor.setTestRunnerSessionId(testRunnerSessionId);
         out.executionId = executor.start();
         */
        return out;
    },
 
    /**
      * Old version, please use getSuiteResultsDeep() instead
      * 
      * @deprecated 
      * @returns {any} out
      */
    getSuiteResults: function () {
        var self = this;
 
        var suiteId = self.getPathParam('suiteId');
        return self._getSuiteResults(suiteId);
    },
 
    /**
      * Get Test-Suite results including all child suites&lt;br&gt;
      * 
      * mapped to GET /api/devops/v1/cicd/atf/suite/{id}
      * @returns {any} out
      */
    getSuiteResultsDeep: function () {
        var self = this,
            out = [];
 
        var suiteId = self.getPathParam('suiteId');
 
        var gr = new GlideRecord('sys_atf_test_suite_result');
        gr.addQuery('base_suite_result', suiteId);
        gr.orderBy('number');
        gr._query();
        while (gr._next()) {
            out.push( self._getSuiteResults(gr.getValue('sys_id')) );
        }
        return out;
    },
 
 
    /**
      * Description
      * 
      * @param {any} suiteId
      * @returns {any} out
      */
    _getSuiteResults: function (suiteId) {
        var self = this,
            out = {
                testResults: []
            };
 
        var gr = new GlideRecord('sys_atf_test_suite_result');
        if (gr.get(suiteId)) {
            out.number = gr.getValue('number');
             
            out.suiteSysId = gr.getValue('test_suite');
            out.suiteName = gr.getDisplayValue('test_suite');
             
            out.baseSuiteResultSysId = gr.getValue('base_suite_result');
            out.baseSuiteResultName = gr.getDisplayValue('base_suite_result');
 
            out.parent = (out.number == out.baseSuiteResultName );
            out.status = gr.getValue('status');
            out.duration = gr.getValue('run_time');
            out.url = gs.getProperty('glide.servlet.uri').concat(gr.getLink(true));
            out.type = 'test_suite_result';
 
            var gRes = new GlideRecord('sys_atf_test_result');
            gRes.addQuery('parent', gr.getValue('sys_id'));
            gRes._query();
            while (gRes._next()) {
                out.testResults.push(self._getTestResultDetails(gRes.getValue('sys_id')));
            }
        }
        return out;
    },
 
    /**
      * Execute a single Test&lt;br&gt;
      * mapped to POST /api/devops/v1/cicd/atf/test
      * @returns {any} out
      */
    executeTest: function () {
        var self = this,
            testId,
            runnerId,
            out = {
                executionId: null
            },
            need_browser = false,
            testRunnerSessionId = null;
 
        var requestBody = self.request.body;
        if (!requestBody || !requestBody.hasNext())
            return new sn_ws_err.BadRequestError('initialize: no body found');
 
        var body = requestBody.nextEntry();
        testId = body.id || null;
        if (gs.nil(testId))
            return new sn_ws_err.BadRequestError('initialize: testId property not found' + JSON.stringify(body));
 
        runnerId = body.runnerId || null;
        if (gs.nil(runnerId))
            return new sn_ws_err.BadRequestError('initialize: runnerId property not found');
         
        var gr = new GlideRecord('sys_atf_test');
        if (!gr.get(testId)) {
            return new sn_ws_err.BadRequestError('Could not find the Test suite with id: ' + testId);
        }
 
        out.url = gs.getProperty('glide.servlet.uri').concat(gr.getLink(true));
        out.name = gr.getDisplayValue();
 
        need_browser = sn_atf.AutomatedTestingFramework.doesTestHaveUISteps(testId);
        if (need_browser) {
            testRunnerSessionId = self.getTestRunnerSessionId(runnerId);
            if (gs.nil(testRunnerSessionId)) {
                return new sn_ws_err.BadRequestError('This Test requires an active Test Runner to be available.');
            }
        }
 
        // execute test
        out.executionId = new TestExecutorAjax((function () {
            var params = {
                'sysparm_ajax_processor_ut_test_id': testId,
                'sysparm_ajax_processor_test_runner_session_id': testRunnerSessionId
            };
            return {
                /**
                  * Description
                  * 
                  * @param {any} name
                  * @returns {MemberExpression}
                  */
                getParameter: function name(name) {
                    return params[name];
                }
            };
        })(), new GlideXMLDocument(), '').process();
 
        return out;
    },
 
 
    /**
      * Get Single Test Results&lt;br&gt;
      * mapped to GET /api/devops/v1/cicd/atf/test/{id}
      * @returns {any}
      */
    getTestResults: function () {
        var self = this;
 
        var testId = self.getPathParam('testId');
 
        return self._getTestResultDetails(testId);
 
    },
 
    /**
      * Get the execution state of a test run&lt;br&gt;
      * mapped to GET /api/devops/v1/cicd/atf/track/{id}
      * @returns {any}
      */
    getExecutionTrackerState: function () {
        var self = this;
        var id = self.getPathParam('executionId');
        var gr = new GlideRecord('sys_execution_tracker');
        gr.get(id);
 
        return {
            state: {
                value: gr.getValue('state'),
                display_value: gr.getDisplayValue('state')
            },
            result: {
                value: gr.getValue('result'),
                display_value: gr.getDisplayValue('result')
            },
            url: gs.getProperty('glide.servlet.uri').concat(gr.getLink(true))
        };
 
    },
 
    /**
      * convert test result to object
      * 
      * @param {any} sysId
      * @returns {any} out
      */
    _getTestResultDetails: function (sysId) {
        var self = this,
            out = {
                stepResults: []
            };
 
        var gr = new GlideRecord('sys_atf_test_result');
        if (gr.get(sysId)) {
 
            out.number = gr.getDisplayValue('test');
            out.status = gr.getValue('status');
            out.startTime = gr.getValue('start_time');
            out.endTime = gr.getValue('end_time');
            out.duration = gr.getValue('run_time');
            out.output = gr.getValue('output');
            out.type = 'test_result';
            out.url = gs.getProperty('glide.servlet.uri').concat(gr.getLink(true));
 
            var gRes = new GlideRecord('sys_atf_test_result_step');
            gRes.addQuery('test_result', gr.getValue('sys_id'));
            gRes.orderBy('step.order');
            gRes._query();
            while (gRes._next()) {
                out.stepResults.push({
                    order: parseInt(gRes.getElement('step.order').toString(), 10),
                    startTime: gRes.getValue('start_time'),
                    step: gRes.getDisplayValue('step'),
                    status: gRes.getValue('status'),
                    summary: gRes.getValue('summary'),
                    url: gs.getProperty('glide.servlet.uri').concat(gRes.getLink(true))
                });
            }
        }
        return out;
    },
 
    type: 'CiCdAtf'
};
 ]]&gt;&lt;/script&gt;&lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;&lt;sys_created_by&gt;b.moers&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2018-08-02 10:25:39&lt;/sys_created_on&gt;&lt;sys_id&gt;94a29327db2fd300dfa9b94ffe9619a5&lt;/sys_id&gt;&lt;sys_mod_count&gt;24&lt;/sys_mod_count&gt;&lt;sys_name&gt;CiCdAtf&lt;/sys_name&gt;&lt;sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e"&gt;19190fabdbebd300dfa9b94ffe96193e&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="CICD Integration"&gt;19190fabdbebd300dfa9b94ffe96193e&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_script_include_94a29327db2fd300dfa9b94ffe9619a5&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-07-19 09:45:47&lt;/sys_updated_on&gt;&lt;/sys_script_include&gt;&lt;/record_update&gt;</payload>
<payload_hash>1396108024</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:51</sys_created_on>
<sys_id>445357b32f15b850d8455aab2799b6ad</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2ca3ae0000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:51</sys_updated_on>
<table/>
<target_name>CiCdAtf</target_name>
<type>Script Include</type>
<update_domain>global</update_domain>
<update_guid>b92293736815b850f9273b3298b60e83</update_guid>
<update_guid_history>b92293736815b850f9273b3298b60e83:1396108024,34ad7d134ede285495c501a14bd518b5:400548344,e504ba833a9628548e3b290c5f1ba6a6:-1176815356,5832b6cfa456285412e78acb309162df:-1258180478,7321b6cf8c562854512c2a911fbb8e6c:-1035056412,0870b28f8e562854d71ae377ba64cf5c:-828926681,7e7abbd0c9777300176b0dbe7d10d8b6:247046836,7e7abbd0c9777300176b0dbe7d10d8b6:247046836,7e7abbd0c9777300176b0dbe7d10d8b6:247046836,e666ad97bc73ab40181df03c85a308a9:-404806724,a3b1577fae17a780b69954923240001d:-1575081301,1562bf93cf20e34044aa93b44b20fb92:-684264248,62513fdf24eca340ce38237bd25ae581:1356482684,b4fdebdfd6eca34097acb16ec6611c5a:602174477,7f79d75ff1aca34020db7694287c3621:-1362713953,30f85b1f30aca34099794ae4ab30cb4f:-1398262677,9a38d71f5caca340f40a380bfd099fef:1986264041,f69c9e9770e8a3409257462e632bb9e8:-8368473,c28b925741e8a3408f00437e83f866cd:1840300241,2dd51a1f02a8a34038c1728bf6309581:574721554,a7859adf50a8a3409ca01d8fda2b19a1:-8368473,03351e9f63a8a34013d57d6c841c952b:794905912,d14fdc222ea8ef0091a608d4d6367fa3:-1820675475,c83f10e25268ef00824e0162101a3cb6:1762877155,b1aed72f6b2fd30076bd17d36d2d4b2e:-173311693,0c041327612fd3001b6e6e2144235708:-181834977,7ec39f27032fd300e1d42d22ddac6b66:2142472068,e0139fe3132fd300054036c4712a463f:-1313089539</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_ui_action_3ee71f77db57a7801af8b14ffe9619c2</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update sys_domain="global" table="sys_ui_action"&gt;&lt;sys_ui_action action="INSERT_OR_UPDATE"&gt;&lt;action_name&gt;cicd_run_build&lt;/action_name&gt;&lt;active&gt;true&lt;/active&gt;&lt;client&gt;false&lt;/client&gt;&lt;client_script_v2/&gt;&lt;comments&gt;Run CICD Process based on a Scoped Application&lt;/comments&gt;&lt;condition&gt;new CiCdRun().showBuildThisApplicationUiAction(current)&lt;/condition&gt;&lt;form_action&gt;true&lt;/form_action&gt;&lt;form_button&gt;true&lt;/form_button&gt;&lt;form_button_v2&gt;false&lt;/form_button_v2&gt;&lt;form_context_menu&gt;false&lt;/form_context_menu&gt;&lt;form_link&gt;false&lt;/form_link&gt;&lt;form_menu_button_v2&gt;false&lt;/form_menu_button_v2&gt;&lt;form_style/&gt;&lt;hint/&gt;&lt;isolate_script&gt;false&lt;/isolate_script&gt;&lt;list_action&gt;false&lt;/list_action&gt;&lt;list_banner_button&gt;false&lt;/list_banner_button&gt;&lt;list_button&gt;false&lt;/list_button&gt;&lt;list_choice&gt;false&lt;/list_choice&gt;&lt;list_context_menu&gt;false&lt;/list_context_menu&gt;&lt;list_link&gt;false&lt;/list_link&gt;&lt;list_save_with_form_button&gt;false&lt;/list_save_with_form_button&gt;&lt;list_style/&gt;&lt;name&gt;Build this Application [CICD]&lt;/name&gt;&lt;onclick/&gt;&lt;order&gt;-1&lt;/order&gt;&lt;script&gt;&lt;![CDATA[new global.CiCdRun().sys_appUiAction(current);
action.setRedirectURL(current);]]&gt;&lt;/script&gt;&lt;show_insert&gt;false&lt;/show_insert&gt;&lt;show_multiple_update&gt;false&lt;/show_multiple_update&gt;&lt;show_query&gt;false&lt;/show_query&gt;&lt;show_update&gt;true&lt;/show_update&gt;&lt;sys_class_name&gt;sys_ui_action&lt;/sys_class_name&gt;&lt;sys_created_by&gt;b.moers&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2019-02-05 15:23:32&lt;/sys_created_on&gt;&lt;sys_domain&gt;global&lt;/sys_domain&gt;&lt;sys_domain_path&gt;/&lt;/sys_domain_path&gt;&lt;sys_id&gt;3ee71f77db57a7801af8b14ffe9619c2&lt;/sys_id&gt;&lt;sys_mod_count&gt;16&lt;/sys_mod_count&gt;&lt;sys_name&gt;Build this Application [CICD]&lt;/sys_name&gt;&lt;sys_overrides/&gt;&lt;sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e"&gt;19190fabdbebd300dfa9b94ffe96193e&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="CICD Integration"&gt;19190fabdbebd300dfa9b94ffe96193e&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_ui_action_3ee71f77db57a7801af8b14ffe9619c2&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;b.moers&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2019-09-13 10:38:13&lt;/sys_updated_on&gt;&lt;table&gt;sys_app&lt;/table&gt;&lt;ui11_compatible&gt;true&lt;/ui11_compatible&gt;&lt;ui16_compatible&gt;false&lt;/ui16_compatible&gt;&lt;/sys_ui_action&gt;&lt;/record_update&gt;</payload>
<payload_hash>720127600</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:51</sys_created_on>
<sys_id>445357b32f15b850d8455aab2799b6b0</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c9e0d0000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:51</sys_updated_on>
<table>sys_app</table>
<target_name>Build this Application [CICD]</target_name>
<type>UI Action</type>
<update_domain>global</update_domain>
<update_guid>ec05536eeab3f7c0d7fb838071463e18</update_guid>
<update_guid_history>ec05536eeab3f7c0d7fb838071463e18:1160475474,ec05536eeab3f7c0d7fb838071463e18:1160475474,2405536e5ab3f7c0a213040ccc40f017:1486365718,ba7abbd0197773005960b0207bc4c2ab:1138384948,ba7abbd0197773005960b0207bc4c2ab:1138384948,45d6e1d7bc73ab40f36584680c2e06e6:-1519606885,45d6e1d7bc73ab40f36584680c2e06e6:-1519606885,b35dcbae8d7be740b8a565021e0cb252:1798895064,a7dc8fae307be740ee1e5812c54c1738:1837001144,479ccb2e7f7be740246f8e099e393d11:1642009664,f1edeffb6a97a78027b08cda7e492ea5:203401804,c87cabbb3597a7800063df176dfe4867:289478714,d35c6bbbae97a78097003ad15888c422:-1053375274,254c637b8f97a780690d1c9c4bc39500:-1721978860,00ad133fcf57a78091bea04ceb9c13c4:-1216731324,af8c1fbbeb57a780967d5c6f6b892683:788308902,d08cd7bb6057a78045a80b853ddae5b4:878535594,2a5bd73b6157a7804d6729cc0df9c7df:1239724764,43cad73b9857a78029c797193c7cb670:1797030488,cdaadb778f57a780f89f437b1ae8a02f:597312356,d25a533b5857a780cc525eecaa99a504:-1848437281,0f889b77f357a780723cc4296c6e26f4:195735400</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_ui_section_0245f1d7dbb2d010fcf417803996191f</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update><sys_ui_section caption="CI/CD Settings" section_id="0245f1d7dbb2d010fcf417803996191f" sys_domain="global" table="sys_app" version="3" view="global"><sys_ui_element action="INSERT_OR_UPDATE"><element>u_repository</element><position>0</position><sys_created_by>admin</sys_created_by><sys_created_on>2020-08-28 10:58:41</sys_created_on><sys_id>3c2679d7dbb2d010fcf41780399619ea</sys_id><sys_mod_count>0</sys_mod_count><sys_ui_formatter/><sys_ui_section caption="CI/CD Settings" display_value="CI/CD Settings" name="sys_app" sys_domain="global" view="b1b17b829333310063d3941e867ffbdf">0245f1d7dbb2d010fcf417803996191f</sys_ui_section><sys_updated_by>admin</sys_updated_by><sys_updated_on>2020-08-28 10:58:41</sys_updated_on><sys_user/><type/></sys_ui_element><sys_ui_section action="INSERT_OR_UPDATE"><caption>CI/CD Settings</caption><header>false</header><name>sys_app</name><roles/><sys_class_name>sys_ui_section</sys_class_name><sys_created_by>admin</sys_created_by><sys_created_on>2020-08-28 10:54:57</sys_created_on><sys_domain>global</sys_domain><sys_domain_path>/</sys_domain_path><sys_id>0245f1d7dbb2d010fcf417803996191f</sys_id><sys_mod_count>0</sys_mod_count><sys_name>CI/CD Settings</sys_name><sys_overrides/><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_update_name>sys_ui_section_0245f1d7dbb2d010fcf417803996191f</sys_update_name><sys_updated_by>admin</sys_updated_by><sys_updated_on>2020-08-28 10:54:57</sys_updated_on><sys_user/><title>false</title><view display_value="Global" name="global">b1b17b829333310063d3941e867ffbdf</view><view_name/></sys_ui_section></sys_ui_section></record_update>]]></payload>
<payload_hash>-1858199884</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:51</sys_created_on>
<sys_id>445357b32f15b850d8455aab2799b6b3</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c9f420000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:51</sys_updated_on>
<table>sys_app</table>
<target_name>Custom Application</target_name>
<type>Form Layout</type>
<update_domain>global</update_domain>
<update_guid>f82679d732b2d010370ed73326d423eb</update_guid>
<update_guid_history>f82679d732b2d010370ed73326d423eb:-1858199884,bf45fd9779b2d010d99804c8206246a0:2111933828</update_guid_history>
<update_set display_value=""/>
<view>global</view>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_ui_section_7354604ddbc02850fcf4178039961988</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update><sys_ui_section caption="" section_id="7354604ddbc02850fcf4178039961988" sys_domain="global" table="sys_app" version="3" view="CICD"><sys_ui_element action="INSERT_OR_UPDATE"><element>name</element><position>0</position><sys_created_by>admin</sys_created_by><sys_created_on>2020-10-22 08:47:33</sys_created_on><sys_id>c8972801db042850fcf41780399619c3</sys_id><sys_mod_count>0</sys_mod_count><sys_ui_formatter/><sys_ui_section caption="NULL" display_value="" name="sys_app" sys_domain="global" view="fb54604ddbc02850fcf4178039961920">7354604ddbc02850fcf4178039961988</sys_ui_section><sys_updated_by>admin</sys_updated_by><sys_updated_on>2020-10-22 08:47:33</sys_updated_on><sys_user/><type/></sys_ui_element><sys_ui_element action="INSERT_OR_UPDATE"><element>.split</element><position>1</position><sys_created_by>admin</sys_created_by><sys_created_on>2020-10-22 08:47:33</sys_created_on><sys_id>4c972801db042850fcf41780399619c3</sys_id><sys_mod_count>0</sys_mod_count><sys_ui_formatter/><sys_ui_section caption="NULL" display_value="" name="sys_app" sys_domain="global" view="fb54604ddbc02850fcf4178039961920">7354604ddbc02850fcf4178039961988</sys_ui_section><sys_updated_by>admin</sys_updated_by><sys_updated_on>2020-10-22 08:47:33</sys_updated_on><sys_user/><type>.split</type></sys_ui_element><sys_ui_element action="INSERT_OR_UPDATE"><element>version</element><position>2</position><sys_created_by>admin</sys_created_by><sys_created_on>2020-10-22 08:47:33</sys_created_on><sys_id>cc972801db042850fcf41780399619c3</sys_id><sys_mod_count>0</sys_mod_count><sys_ui_formatter/><sys_ui_section caption="NULL" display_value="" name="sys_app" sys_domain="global" view="fb54604ddbc02850fcf4178039961920">7354604ddbc02850fcf4178039961988</sys_ui_section><sys_updated_by>admin</sys_updated_by><sys_updated_on>2020-10-22 08:47:33</sys_updated_on><sys_user/><type/></sys_ui_element><sys_ui_element action="INSERT_OR_UPDATE"><element>.end_split</element><position>3</position><sys_created_by>admin</sys_created_by><sys_created_on>2020-10-22 08:47:33</sys_created_on><sys_id>40972801db042850fcf41780399619c4</sys_id><sys_mod_count>0</sys_mod_count><sys_ui_formatter/><sys_ui_section caption="NULL" display_value="" name="sys_app" sys_domain="global" view="fb54604ddbc02850fcf4178039961920">7354604ddbc02850fcf4178039961988</sys_ui_section><sys_updated_by>admin</sys_updated_by><sys_updated_on>2020-10-22 08:47:33</sys_updated_on><sys_user/><type>.end_split</type></sys_ui_element><sys_ui_element action="INSERT_OR_UPDATE"><element>scope</element><position>4</position><sys_created_by>admin</sys_created_by><sys_created_on>2020-10-22 08:47:33</sys_created_on><sys_id>c0972801db042850fcf41780399619c4</sys_id><sys_mod_count>0</sys_mod_count><sys_ui_formatter/><sys_ui_section caption="NULL" display_value="" name="sys_app" sys_domain="global" view="fb54604ddbc02850fcf4178039961920">7354604ddbc02850fcf4178039961988</sys_ui_section><sys_updated_by>admin</sys_updated_by><sys_updated_on>2020-10-22 08:47:33</sys_updated_on><sys_user/><type/></sys_ui_element><sys_ui_section action="INSERT_OR_UPDATE"><caption/><header>false</header><name>sys_app</name><roles/><sys_class_name>sys_ui_section</sys_class_name><sys_created_by>admin</sys_created_by><sys_created_on>2020-10-22 08:33:36</sys_created_on><sys_domain>global</sys_domain><sys_domain_path>/</sys_domain_path><sys_id>7354604ddbc02850fcf4178039961988</sys_id><sys_mod_count>2</sys_mod_count><sys_name>sys_app</sys_name><sys_overrides/><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_update_name>sys_ui_section_7354604ddbc02850fcf4178039961988</sys_update_name><sys_updated_by>admin</sys_updated_by><sys_updated_on>2020-10-22 08:47:31</sys_updated_on><sys_user/><title>false</title><view display_value="CICD" name="CICD">fb54604ddbc02850fcf4178039961920</view><view_name/></sys_ui_section></sys_ui_section></record_update>]]></payload>
<payload_hash>700715234</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:51</sys_created_on>
<sys_id>445357b32f15b850d8455aab2799b6b4</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2ca1500000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:51</sys_updated_on>
<table>sys_app</table>
<target_name>Custom Application</target_name>
<type>Form Layout</type>
<update_domain>global</update_domain>
<update_guid>849728011a042850bbfcb0c35a896dc5</update_guid>
<update_guid_history>849728011a042850bbfcb0c35a896dc5:700715234,e7872801920428500bcfdc3cbb308e61:-533259895,9d8628cd3fc02850984c6d271ecfab15:-1730985739,3525ec4d92c028506eaa90715ea787a1:-1948255786,c3d4a84de8c028504c988c85e3ac1d2a:-966046433,bad4684d49c02850a70a5c1d18bd50ba:-211360186,74c4e44d7ec028507ea4ca0a18a739f7:1184616826,0864604d45c028500a3e9ed94e3fa99f:-1804095163</update_guid_history>
<update_set display_value=""/>
<view>CICD</view>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_properties_34503f972f1c6010d8455aab2799b6d9</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_properties"><sys_properties action="INSERT_OR_UPDATE"><choices/><description>&lt;b&gt;Don't fail on conflicts during 'delivery'.&lt;/b&gt;&lt;br&gt;&#13;
Always treat delivery as successful, regardless of its conflicts</description><ignore_cache>false</ignore_cache><is_private>false</is_private><name>cicd-integration.ignore-delivery-conflicts</name><read_roles/><suffix/><sys_class_name>sys_properties</sys_class_name><sys_created_by>admin</sys_created_by><sys_created_on>2020-11-11 09:26:43</sys_created_on><sys_id>34503f972f1c6010d8455aab2799b6d9</sys_id><sys_mod_count>4</sys_mod_count><sys_name>cicd-integration.ignore-delivery-conflicts</sys_name><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_update_name>sys_properties_34503f972f1c6010d8455aab2799b6d9</sys_update_name><sys_updated_by>admin</sys_updated_by><sys_updated_on>2020-11-12 13:17:33</sys_updated_on><type>boolean</type><value>false</value><write_roles/></sys_properties><sys_translated_text action="delete_multiple" query="documentkey=34503f972f1c6010d8455aab2799b6d9"/></record_update>]]></payload>
<payload_hash>-977463539</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:51</sys_created_on>
<sys_id>44539f732f15b850d8455aab2799b61c</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2ca2010000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:51</sys_updated_on>
<table/>
<target_name>cicd-integration.ignore-delivery-conflicts</target_name>
<type>System Property</type>
<update_domain>global</update_domain>
<update_guid>40ceedb32e9ca010972439d46872e65c</update_guid>
<update_guid_history>40ceedb32e9ca010972439d46872e65c:-1888056766,40ceedb32e9ca010972439d46872e65c:-1888056766,855a21bf5b5ca010593256f8843cb31c:-1888056766,855a21bf5b5ca010593256f8843cb31c:-1888056766,d471b35f571c6010e55c1530ebc8060a:-1888056766,d471b35f571c6010e55c1530ebc8060a:-1888056766,8a513fdb661c601000945dd2801b5948:1065185627,1150b3dbdf1c60100e57c74e251f694b:-471469695</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_properties_category_m2m_3e42a5dbdb72d010fcf417803996199e</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_properties_category_m2m"><sys_properties_category_m2m action="INSERT_OR_UPDATE"><category display_value="CICD Integration">8d1de113dbb86380432cfc600f9619f6</category><order>60</order><property display_value="cicd-integration.prevent.no-multi-scope-update-set" name="cicd-integration.prevent.no-multi-scope-update-set">e632255bdb72d010fcf41780399619b2</property><sys_class_name>sys_properties_category_m2m</sys_class_name><sys_created_by>admin</sys_created_by><sys_created_on>2020-08-28 09:31:59</sys_created_on><sys_id>3e42a5dbdb72d010fcf417803996199e</sys_id><sys_mod_count>2</sys_mod_count><sys_name>cicd-integration.prevent.no-multi-scope-update-set.CICD Integration</sys_name><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_update_name>sys_properties_category_m2m_3e42a5dbdb72d010fcf417803996199e</sys_update_name><sys_updated_by>admin</sys_updated_by><sys_updated_on>2020-08-28 11:56:59</sys_updated_on></sys_properties_category_m2m></record_update>]]></payload>
<payload_hash>1459431452</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:51</sys_created_on>
<sys_id>44539f732f15b850d8455aab2799b61f</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c9f630000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:51</sys_updated_on>
<table/>
<target_name>cicd-integration.prevent.no-multi-scope-update-set.CICD Integration</target_name>
<type>Category Property</type>
<update_domain>global</update_domain>
<update_guid>36730253e8f2d01003ae4835336959a3</update_guid>
<update_guid_history>36730253e8f2d01003ae4835336959a3:1459431452,979269db8e72d010d3e407d29a2f04bf:1270489179,be42a5db2a72d010393c5f2ea2e775a0:1778897301</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_properties_category_m2m_db01782ddba3ff409775f6700f961919</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_properties_category_m2m"><sys_properties_category_m2m action="INSERT_OR_UPDATE"><category display_value="CICD Integration">8d1de113dbb86380432cfc600f9619f6</category><order>30</order><property display_value="cicd-integration.message.build-state" name="cicd-integration.message.build-state">47f0bce9dba3ff409775f6700f9619bf</property><sys_class_name>sys_properties_category_m2m</sys_class_name><sys_created_by>b.moers</sys_created_by><sys_created_on>2019-08-28 09:52:16</sys_created_on><sys_id>db01782ddba3ff409775f6700f961919</sys_id><sys_mod_count>1</sys_mod_count><sys_name>cicd-integration.message.build-state.CICD Integration</sys_name><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_update_name>sys_properties_category_m2m_db01782ddba3ff409775f6700f961919</sys_update_name><sys_updated_by>b.moers</sys_updated_by><sys_updated_on>2019-08-28 09:52:32</sys_updated_on></sys_properties_category_m2m></record_update>]]></payload>
<payload_hash>679609901</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:51</sys_created_on>
<sys_id>485357b32f15b850d8455aab2799b6a9</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c9d320000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:51</sys_updated_on>
<table/>
<target_name>cicd-integration.message.build-state.CICD Integration</target_name>
<type>Category Property</type>
<update_domain>global</update_domain>
<update_guid>ab11782d67a3ff40039a95afe5634678</update_guid>
<update_guid_history>ab11782d67a3ff40039a95afe5634678:-1178606555,ab11782d67a3ff40039a95afe5634678:-1178606555,e67abbd0397773001700e5616c5afe30:679609901,ab11782d67a3ff40039a95afe5634678:-1178606555,9f01782deda3ff40c125ad13744f8d1b:-1221825823</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_script_include_16e746c6dbcfef00ee93b14ffe96194c</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;&lt;sys_script_include action="INSERT_OR_UPDATE"&gt;&lt;access&gt;public&lt;/access&gt;&lt;active&gt;true&lt;/active&gt;&lt;api_name&gt;global.CiCdSource&lt;/api_name&gt;&lt;caller_access/&gt;&lt;client_callable&gt;false&lt;/client_callable&gt;&lt;description/&gt;&lt;name&gt;CiCdSource&lt;/name&gt;&lt;script&gt;&lt;![CDATA[/* exported CiCdSource */

/**
 * CDCD Trigger to execute run in CICD Server
 * 
 * @class 
 * @author Boris Moers
 * @requires sn_ws.module:sys_script_include.RESTMessageV2
 * @requires global.module:sys_script_include.XMLDocument
 * @memberof global.module:sys_script_include
 */
var CiCdSource = Class.create();

CiCdSource.prototype = /** @lends global.module:sys_script_include.CiCdSource.prototype */ {
 
    /**
      * Polyfill for Object.assign
      * 
      * @param {any} target
      * @param {any} arg
      * @returns {any} to
      */
    assign: function (target, arg) {
        if (target === null) {
            throw new TypeError('Cannot convert undefined or null to object');
        }
        var to = Object(target);
        for (var index = 1; index &lt; arguments.length; index++) {
            var nextSource = arguments[index];
            if (nextSource != null) {
                for (var nextKey in nextSource) {
                    if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {
                        to[nextKey] = nextSource[nextKey];
                    }
                }
            }
        }
        return to;
    },
 
 
    /**
      * Constructor
      * 
      * @param {Object} settings
      * @returns {undefined}
      */
    initialize: function (settings) {
        var self = this;
 
        self.console = {
            /**
              * Description
              * 
              * @returns {undefined}
              */
            log: function () {
                if (arguments.length) arguments[0] = '[' + self.type + '] ' + arguments[0];
                gs.info.apply(null, arguments);
            },
            /**
              * Description
              * 
              * @returns {undefined}
              */
            warn: function () {
                if (arguments.length) arguments[0] = '[' + self.type + '] ' + arguments[0];
                gs.warn.apply(null, arguments);
            },
            /**
              * Description
              * 
              * @returns {undefined}
              */
            error: function () {
                if (arguments.length) arguments[0] = '[' + self.type + '] ' + arguments[0];
                gs.error.apply(null, arguments);
            },
            /**
              * Description
              * 
              * @returns {undefined}
              */
            debug: function () {
                if (arguments.length) arguments[0] = '[' + self.type + '] ' + arguments[0];
                gs.debug.apply(null, arguments);
            },
        };
 
        var cicdServerMatch = gs.getProperty('cicd-integration.server.url', '').match(/((?:http[s]?:\/\/)[^/]*)/i);
        var cicdServer = (cicdServerMatch) ? cicdServerMatch[1] : 'server-undefined';
 
        self.settings = self.assign({
            cicdEnabled: Boolean(gs.getProperty('cicd-integration.enabled', 'false') == 'true'),
            throughMidServer: Boolean(gs.getProperty('cicd-integration.server.through-mid', 'false') == 'true'),
            midServerName: gs.getProperty('cicd-integration.server.mid-server-name', self.getMidServer()),
            cicdServerExportURL: cicdServer.concat('/source')
        }, JSON.parse(JSON.stringify(settings || {})));
    },
 
 
    /**
      * proxy request to CICD server to get UpdateSet details
      * 
      * @param {*} commitId
      * @returns {undefined}
      */
    _getUpdateSet: function (commitId) {
        var self = this;
 
        var request = new sn_ws.RESTMessageV2();
        if (self.settings.throughMidServer) {
            if (gs.nil(self.settings.midServerName))
                throw 'no running MID server available';
            request.setMIDServer(self.settings.midServerName);
        }
 
        request.setEndpoint(self.settings.cicdServerExportURL.concat('/update_set/', commitId));
        request.setRequestHeader('Accept', 'application/json');
        request.setRequestHeader('Content-Type', 'application/json');
        request.setHttpMethod('GET');
 
        //self.console.log('Settings {0}', JSON.stringify(self.settings));
        //self.console.log('CommitId {0}', commitId);
        //self.console.log("URL: {0}", request.getEndpoint());
 
        var response = request.execute(); // Async somehow does not perform
        if (!response.haveError()) {
            try {
                var responseJson = JSON.parse(response.getBody());
                //self.console.log("successful - result is: {0}", JSON.stringify(responseJson));
                return responseJson;
 
            } catch (e) {
                self.console.error('JSON parsing failed. Text: {0}, Error:', response.getBody(), e);
                throw e;
            }
        } else {
            var statusCode = response.getStatusCode();
            self.console.error('request ended in error - StatusCode {0}, ResponseMessage: {1}, Endpoint: {2}, RequestBody: {3}', statusCode, response.getErrorMessage(), request.getEndpoint(), response.getBody());
            throw Error(response.getErrorMessage());
        }
    },
 
    /**
      * proxy request to CICD server to get Scope details
      * 
      * @param {*} scopeId
      * @returns {undefined}
      */
    _getScope: function (scopeId) {
        var self = this;
 
        var request = new sn_ws.RESTMessageV2();
        if (self.settings.throughMidServer) {
            if (gs.nil(self.settings.midServerName))
                throw 'no running MID server available';
            request.setMIDServer(self.settings.midServerName);
        }
 
        request.setEndpoint(self.settings.cicdServerExportURL.concat('/sys_scope/', scopeId));
        request.setRequestHeader('Accept', 'application/json');
        request.setRequestHeader('Content-Type', 'application/json');
        request.setHttpMethod('GET');
 
        //self.console.log('Settings {0}', JSON.stringify(self.settings));
        //self.console.log('CommitId {0}', commitId);
        //self.console.log("URL: {0}", request.getEndpoint());
 
        var response = request.execute(); // Async somehow does not perform
        if (!response.haveError()) {
            try {
                var responseJson = JSON.parse(response.getBody());
                //self.console.log("successful - result is: {0}", JSON.stringify(responseJson));
                return responseJson;
 
            } catch (e) {
                self.console.error('JSON parsing failed. Text: {0}, Error:', response.getBody(), e);
                throw e;
            }
        } else {
            var statusCode = response.getStatusCode();
            self.console.error('request ended in error - StatusCode {0}, ResponseMessage: {1}, Endpoint: {2}, RequestBody: {3}', statusCode, response.getErrorMessage(), request.getEndpoint(), response.getBody());
            throw Error(response.getErrorMessage());
        }
    },
 
    /**
      * check for required roles
      * 'admin' or 'cicd_integration_user'
      * in addition, to access the SOAP api it requires the 'soap_query' and 'soap_script' role
      * @returns {undefined}
      */
    checkAccess: function () {
        if (gs.getUser().getRoles().contains('admin'))
            return;
 
        if (!gs.getUser().getRoles().contains('cicd_integration_user'))
            throw Error('User Not Authorized');
 
    },
 
    /**
      * Proxy for hub.do. Call local host with same param and credentials.
      * /api/devops/cicd/source/hub.do
      * 
      * @param {*} request
      * @param {*} response
      * @returns {undefined}
      */
    getHubStatus: function (request, response) {
 
        if ('hub.do' == request.pathParams.page) {
            try {
                gs.info('[CICD] export : hub.do status');
                var rest = new sn_ws.RESTMessageV2();
                rest.setEndpoint(gs.getProperty('glide.servlet.uri').concat(request.pathParams.page, '?', request.queryString));
                rest.setRequestHeader('Authorization', request.getHeader('Authorization'));
                rest.setHttpMethod('GET');
                rest.setRequestHeader('Accept', 'application/json');
                rest.setRequestHeader('Content-Type', 'application/json');
 
                var resp = rest.execute();
                response.setStatus(resp.getStatusCode());
                response.setContentType('application/json');
                if (response.haveError())
                    throw Error(response.getErrorMessage());
 
                var body = resp.getBody();
                var bObj = JSON.parse(body);
                if (bObj.error)
                    throw Error(body);
 
                return response.getStreamWriter().writeString(body);
            } catch (e) {
                // hub.do need high privileges, if the current user d
                return response.getStreamWriter().writeString(JSON.stringify({
                    '__comment': 'this is not the official hub payload',
                    'com.snc.teamdev.requires_codereview': gs.getProperty('com.snc.teamdev.requires_codereview'),
                    'instance_id': gs.getProperty('instance_id'),
                    'instance_properties': gs.getProperty('mid.buildstamp', 'dunno').concat('.zip'),
                    'upgrade_system_busy': GlidePluginManager.isUpgradeSystemBusy()
                }));
            }
        }
 
    },
 
    /**
      * UpdateSet REST Web Service Endpoint for POST messages
      * 
      * On some environments, SOAP request to the scripted 'source' SOAP API (like /api/devops/cicd/source/sys_update_xml.do?SOAP)
      * are routed to the REST API. The REST processor has in this case a higher priority.
      * To avoid update set deployment failure, this REST API exposes the same functionality via REST.
      * 
      * POST: /api/devops/cicd/source/*
      * 
      * @param {*} request
      * @param {*} response
      * @returns {undefined}
      */
    restPostWrapper: function (request, response) {
        var self = this;
 
        try {
            self.checkAccess();
 
            var page = request.pathParams.page;
 
            var requestBody = request.body;
            var requestXml = requestBody ? (requestBody.dataString || '').trim() : '';
 
            var envelope = '&lt;SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:cicd="http://schemas.moers.swiss/soap/cicd" cicd:rest="true"&gt;&lt;SOAP-ENV:Body&gt;&lt;/SOAP-ENV:Body&gt;&lt;/SOAP-ENV:Envelope&gt;';
            response.setContentType('text/xml');
 
            var writer = response.getStreamWriter();
 
            switch (page) {
            case 'sys_properties.do':
                response.setStatus(200);
                writer.writeString(self.sysPropertiesWS(requestXml, envelope).toString());
                break;
 
            case 'sys_scope.do':
                response.setStatus(200);
                writer.writeString(self.sysScopeWS(requestXml, envelope).toString());
                break;
 
            case 'sys_update_set.do':
                response.setStatus(200);
                writer.writeString(self.updateSetWS(requestXml, envelope).toString());
                break;
 
            case 'sys_update_xml.do':
                response.setStatus(200);
                writer.writeString(self.updateSetXmlWS(requestXml, envelope).toString());
                break;
 
            default:
                response.setStatus(404);
                break;
            }
        } catch (e) {
            self.console.error('restPostWrapper ' + e);
            //response.setError(new sn_ws_err.BadRequestError(e));
            throw e;
        }
    },
 
    /**
      * UpdateSet Web Service
      * 
      * @param {*} requestXml
      * @param {*} envelope
      * @returns {any} resp
      */
    updateSetWS: function (requestXml, envelope) {
        var self = this;
 
        var payload = gs.xmlToJSON(requestXml);
        var body = payload['SOAP-ENV:Envelope']['SOAP-ENV:Body'];
        var funcName = Object.keys(body)[0];
 
        var query = body[funcName]['__encoded_query'];
        var commitId = null;
        var count = 0;
        if (query) {
            var match = query.match(/^sys_idIN(.*)$/i);
            if (match &amp;&amp; match[1]) {
                commitId = match[1];
                count = 1;
            }
        }
 
        var resp = (function () {
            if (envelope) {
                var env = new XMLDocument(envelope);
                env.setCurrent(env.getElementByTagName('SOAP-ENV:Body'));
                env.setCurrent(env.createElement(funcName + 'Response'));
                return env;
            } else {
                return new XMLDocument('&lt;' + funcName + 'Response/&gt;');
            }
        })();
 
        if ('getKeys' == funcName) {
 
            resp.createElement('count', count);
            resp.createElement('sys_id', commitId);
 
        } else if ('getRecords' == funcName) {
 
            resp.createElement('count', count);
            var result = resp.createElement('getRecordsResult');
            resp.setCurrent(result);
 
            var head = self.assign({
                application: null,
                application_name: null,
                application_scope: null,
                application_version: null,
 
                base_update_set: null,
                completed_by: null,
                completed_on: null,
                description: null,
                installed_from: null,
                install_date: null,
                is_default: null,
                merged_to: null,
                name: null,
                origin_sys_id: null,
                parent: null,
                release_date: null,
                remote_sys_id: null,
                state: null,
                sys_created_by: null,
                sys_created_on: null,
                sys_id: null,
                sys_mod_count: null,
                sys_updated_by: null,
                sys_updated_on: null
            }, self._getUpdateSet(commitId));
            //self.console.log('getUpdateSet {0}', JSON.stringify(head));
 
            self._preference.set(head.sys_id, commitId);
 
            // create the XML payload
            Object.keys(head).forEach(function (name) {
                if (head[name])
                    resp.createElement(name, head[name]);
                if (!name.startsWith('dv_') &amp;&amp; !head['dv_' + name])
                    resp.createElement('dv_' + name, head[name]);
            });
 
        }
 
        //self.console.log('getUpdateSet XML ' + resp.toIndentedString());
        return resp;
    },
 
    /**
      * UpdateSet SOAP Web Service Endpoint
      * /api/devops/cicd/source/sys_update_set
      * 
      * @param {*} requestXml
      * @param {*} response
      * @returns {undefined}
      */
    updateSetSoapWebService: function (requestXml, response) {
        var self = this;
        try {
            self.checkAccess();
            response.soapResponseElement = self.updateSetWS(requestXml).getDocumentElement();
        } catch (e) {
            self.console.error('updateSetSoapWebService ' + e);
            response.e = e;
        }
    },
 
    /**
      * guess what: split an array into chunks
      * 
      * @param {any} myArray
      * @param {any} chunk_size
      * @returns {any} tempArray
      */
    _chunkArray: function (myArray, chunk_size) {
        var index = 0, arrayLength = myArray.length, tempArray = [];
        for (index = 0; index &lt; arrayLength; index += chunk_size) {
            tempArray.push(myArray.slice(index, index + chunk_size));
        }
        return tempArray;
    },
 
    /**
      * temp preference store. 
      * as service now does not use the same session in the remote update set client, the sys_id information must be stored elsewhere.
      */
    _preference: {
        /**
          * Description
          * 
          * @param {any} name
          * @returns {undefined}
          */
        get: function (name) {
            if (!name)
                return;
 
            var gr = new GlideRecord('sys_user_preference');
            gr.addQuery('user', gs.getUserID());
            gr.addQuery('name', name);
            gr._query();
            if (gr._next()) {
                return gr.getValue('value');
            }
        },
        /**
          * Description
          * 
          * @param {any} name
          * @param {any} value
          * @returns {undefined}
          */
        set: function (name, value) {
            if (!name)
                return;
 
            var gr = new GlideRecord('sys_user_preference');
            gr.addQuery('user', gs.getUserID());
            gr.addQuery('name', name);
            gr._query();
            if (gr._next()) {
                gr.setValue('value', value);
                return gr.update();
            } else {
                gr.initialize();
                gr.setValue('user', gs.getUserID());
                gr.setValue('name', name);
                gr.setValue('type', 'string');
                gr.setValue('value', value);
                return gr.insert();
            }
        },
        /**
          * Description
          * 
          * @param {any} name
          * @returns {undefined}
          */
        del: function (name) {
            if (!name)
                return;
 
            var gr = new GlideRecord('sys_user_preference');
            gr.addQuery('user', gs.getUserID());
            gr.addQuery('name', name);
            gr._query();
            if (gr._next()) {
                return gr.deleteRecord();
            }
        }
    },
 
    /**
      * SysProperties Web Service
      * 
      * @param {*} requestXml
      * @param {*} envelope
      * @returns {any} resp
      */
    sysPropertiesWS: function (requestXml, envelope) {
        var payload = gs.xmlToJSON(requestXml);
        var body = payload['SOAP-ENV:Envelope']['SOAP-ENV:Body'];
        var funcName = Object.keys(body)[0];
 
 
        var resp = (function () {
            if (envelope) {
                var env = new XMLDocument(envelope);
                env.setCurrent(env.getElementByTagName('SOAP-ENV:Body'));
                env.setCurrent(env.createElement(funcName + 'Response'));
                return env;
            } else {
                return new XMLDocument('&lt;' + funcName + 'Response/&gt;');
            }
        })();
 
        var gr;
        if ('getKeys' == funcName) {
 
            gr = new GlideRecord('sys_properties');
            if (gr.get('name', 'instance_id')) {
                resp.createElement('count', 1);
                resp.createElement('sys_id', gr.getValue('sys_id'));
            } else {
                throw Error('property not found');
            }
 
        } else if ('getRecords' == funcName) {
 
            resp.createElement('count', 1);
            var result = resp.createElement('getRecordsResult');
            resp.setCurrent(result);
 
            gr = new GlideRecord('sys_properties');
            if (gr.get('name', 'instance_id')) {
                Object.keys(gr).forEach(function (fieldName) {
                    fieldName = fieldName.trim();
 
                    if (!gr.isValidField(fieldName.split('.')[0]))
                        return;
                    resp.createElement(fieldName, gr.getValue(fieldName));
                });
            }
        }
 
        //self.console.log('getUpdateSet XML ' + resp.toIndentedString());
        return resp;
 
    },
 
    /**
      * SysProperties SOAP Web Service Endpoint
      * /api/devops/cicd/source/sys_properties
      * 
      * @param {*} requestXml
      * @param {*} response
      * @returns {undefined}
      */
    instanceIdWebService: function (requestXml, response) {
        var self = this;
        try {
            self.checkAccess();
            response.soapResponseElement = self.sysPropertiesWS(requestXml).getDocumentElement();
        } catch (e) {
            self.console.error('sysPropertiesWS ' + e);
            response.e = e;
        }
    },
 
 
    /**
      * SysScope Web Service
      * 
      * @param {*} requestXml
      * @param {*} envelope
      * @returns {any} resp
      */
    sysScopeWS: function (requestXml, envelope) {
        var self = this;
 
        var payload = gs.xmlToJSON(requestXml);
        var body = payload['SOAP-ENV:Envelope']['SOAP-ENV:Body'];
 
        var funcName = Object.keys(body)[0];
        var scopeSysId = null;
 
        var resp = (function () {
            if (envelope) {
                var env = new XMLDocument(envelope);
                env.setCurrent(env.getElementByTagName('SOAP-ENV:Body'));
                env.setCurrent(env.createElement(funcName + 'Response'));
                return env;
            } else {
                return new XMLDocument('&lt;' + funcName + 'Response/&gt;');
            }
        })();
 
        if ('getKeys' == funcName) {
            scopeSysId = body['getKeys']['sys_id'];
            resp.createElement('count', 1);
            resp.createElement('sys_id', scopeSysId);
 
        } else if ('getRecords' == funcName) {
            var query = body['getRecords']['__encoded_query'];
            scopeSysId = null;
 
            if (query) {
                var match = query.match(/^sys_idIN(.*)$/i);
                if (match &amp;&amp; match[1]) {
                    scopeSysId = match[1];
                }
            }
            if (!scopeSysId)
                throw 'No sys_id found in query';
 
            resp.createElement('count', 1);
            var result = resp.createElement('getRecordsResult');
            resp.setCurrent(result);
 
            var head = self.assign({
                active: 1,
                can_edit_in_studio: 1,
                enforce_license: 'log',
                js_level: 'helsinki_es5',
                licensable: 0,
                license_category: undefined,
                license_model: 'none',
                logo: undefined,
                name: 'Scope Name',
                'private': 0,
                restrict_table_access: 0,
                runtime_access_tracking: 'permissive',
                scope: 'scope_name',
                scoped_administration: 0,
                short_description: undefined,
                source: 'scope_name',
                sys_class_name: 'sys_app',
                sys_created_by: 'admin',
                sys_created_on: '2015-05-18 00:00:00',
                sys_id: '000000000000000000000000000000',
                sys_mod_count: 0,
                sys_updated_by: 'system',
                sys_updated_on: '2015-05-18 00:00:00',
                template: undefined,
                trackable: 1,
                vendor: undefined,
                vendor_prefix: undefined,
                version: '1.0.0'
            }, self._getScope(scopeSysId));
            //self.console.log('getUpdateSet {0}', JSON.stringify(head));
 
            // create the XML payload
            Object.keys(head).forEach(function (name) {
                if (head[name])
                    resp.createElement(name, head[name]);
                /*
                 if (!name.startsWith('dv_') &amp;&amp; !head['dv_' + name])
                     resp.createElement('dv_' + name, head[name]);
                 */
            });
        }
        //self.console.log('getUpdateSet XML ' + resp.toIndentedString());
        return resp;
    },
 
    /**
      * SysScope SOAP Web Service Endpoint
      * /api/devops/cicd/source/sys_scope
      * 
      * @param {*} requestXml
      * @param {*} response
      * @returns {undefined}
      */
    sysScopeSoapWebService: function (requestXml, response) {
        var self = this;
        try {
            self.checkAccess();
            response.soapResponseElement = self.sysScopeWS(requestXml).getDocumentElement();
        } catch (e) {
            self.console.error('sysScopeWS ' + e);
            response.e = e;
        }
    },
 
 
    /**
      * UpdateSetXml Web Service
      * 
      * @param {*} requestXml
      * @param {*} envelope
      * @returns {any} resp
      */
    updateSetXmlWS: function (requestXml, envelope) {
        var self = this;
 
 
        var payload = gs.xmlToJSON(requestXml);
        var body = payload['SOAP-ENV:Envelope']['SOAP-ENV:Body'];
 
        var funcName = Object.keys(body)[0];
        var commitId;
        var resp = (function () {
            if (envelope) {
                var env = new XMLDocument(envelope);
                env.setCurrent(env.getElementByTagName('SOAP-ENV:Body'));
                env.setCurrent(env.createElement(funcName + 'Response'));
                return env;
            } else {
                return new XMLDocument('&lt;' + funcName + 'Response/&gt;');
            }
        })();
 
        if ('getKeys' == funcName) {
            var sysId = body['getKeys']['update_set'];
            commitId = self._preference.get(sysId);
            self._preference.del(sysId);
 
            var aggregate = self._getUpdateSetXmlCount(commitId);
            /*
                 as the update-set sysId (commitId) is not sent to the XML api we 
                 have to keep it. unfortunately the client is not session aware, so put it into user prop..
             */
            self._chunkArray(aggregate.sys_id.split(','), 250).forEach(function (page) {
                var md5 = new GlideChecksum(page.join(',')).getMD5();
                self._preference.set(md5, commitId);
                //self.console.log('SAVE TO SESSION:  - md5: ' + md5 + ' sysId: ' + commitId);
            });
 
 
            resp.createElement('count', aggregate.count);
            resp.createElement('sys_id', aggregate.sys_id);
 
        } else if ('getRecords' == funcName) {
 
            body = body['getRecords'];
            var query = body['__encoded_query'];
            var xmlSysIds = null;
            if (query) {
                var match = query.match(/^sys_idIN(.*)$/i);
                if (match &amp;&amp; match[1]) {
                    xmlSysIds = match[1];
                }
            }
            if (!xmlSysIds)
                throw 'No sys_id found in query';
 
            /*
                 get the commitId form the user prefs and delete it later.
             */
            var md5 = new GlideChecksum(xmlSysIds).getMD5();
            commitId = self._preference.get(md5);
 
            self._preference.del(md5);
 
            //self.console.log("GET FROM SESSION. md5 " + md5 + ", sysid: " + commitId);
            //self.console.log("update-set sysId " + commitId);
            //self.console.log('XML QUERY ' + JSON.stringify(body));
 
            //resp = new XMLDocument("&lt;" + funcName + "Response&gt;" + self._getUpdateSetXml(commitId, xmlSysIds) + "&lt;/" + funcName + "Response&gt;");
            if (envelope) {
                resp = new XMLDocument(envelope.replace('&lt;SOAP-ENV:Body&gt;&lt;/SOAP-ENV:Body&gt;', '&lt;SOAP-ENV:Body&gt;&lt;' + funcName + 'Response&gt;' + self._getUpdateSetXml(commitId, xmlSysIds) + '&lt;/' + funcName + 'Response&gt;&lt;/SOAP-ENV:Body&gt;'));
            } else {
                resp = new XMLDocument('&lt;' + funcName + 'Response&gt;' + self._getUpdateSetXml(commitId, xmlSysIds) + '&lt;/' + funcName + 'Response&gt;');
            }
        }
 
        //self.console.log('updateSetXmlWS ' + resp.toIndentedString());
        return resp;
 
    },
 
 
    /**
      * UpdateSet XML SOAP Web Service Endpoint
      * /api/devops/cicd/source/sys_update_xml
      * 
      * @param {*} requestXml
      * @param {*} response
      * @returns {undefined}
      */
    updateSetXmlSoapWebService: function (requestXml, response) {
        var self = this;
        try {
            self.checkAccess();
            response.soapResponseElement = self.updateSetXmlWS(requestXml).getDocumentElement();
        } catch (e) {
            self.console.error('updateSetXmlSoapWebService ' + e);
            response.e = e;
        }
    },
 
 
    /**
      * Connect to CICD Server and get the aggregate information about the update-set-xml records
      * 
      * @param {} commitId
      * @returns {undefined}
      */
    _getUpdateSetXmlCount: function (commitId) {
        var self = this;
 
        var request = new sn_ws.RESTMessageV2();
        if (self.settings.throughMidServer) {
            if (gs.nil(self.settings.midServerName))
                throw 'no running MID server available';
            request.setMIDServer(self.settings.midServerName);
        }
 
        //self.console.log('Settings {0}', JSON.stringify(self.settings));
        //self.console.log('commitId {0}', commitId);
 
        request.setEndpoint(self.settings.cicdServerExportURL.concat('/xml_count/', commitId));
        request.setRequestHeader('Accept', 'application/json');
        request.setRequestHeader('Content-Type', 'application/json');
        request.setHttpMethod('GET');
 
 
        var response = request.execute(); // Async somehow does not perform
        if (!response.haveError()) {
            try {
                var responseJson = JSON.parse(response.getBody());
                //self.console.log("successful - result is: {0}", JSON.stringify(responseJson));
                return responseJson;
 
            } catch (e) {
                self.console.error('JSON parsing failed. Text: {0}, Error:', response.getBody(), e);
                throw e;
            }
        } else {
            var statusCode = response.getStatusCode();
            self.console.error('request ended in error - StatusCode {0}, ResponseMessage: {1}, Endpoint: {2}, RequestBody: {3}', statusCode, response.getErrorMessage(), request.getEndpoint(), response.getBody());
            throw Error(response.getErrorMessage());
        }
    },
 
    /**
      * Connect to CICD Server and get the update-set-xml records
      * 
      * @param {} commitId
      * @param {any} xmlSysIds
      * @returns {undefined}
      */
    _getUpdateSetXml: function (commitId, xmlSysIds) {
        var self = this;
 
        var request = new sn_ws.RESTMessageV2();
        if (self.settings.throughMidServer) {
            if (gs.nil(self.settings.midServerName))
                throw 'no running MID server available';
            request.setMIDServer(self.settings.midServerName);
        }
 
        //self.console.log('Settings {0}', JSON.stringify(self.settings));
        //self.console.log('commitId {0}', commitId);
 
        request.setEndpoint(self.settings.cicdServerExportURL.concat('/xml/'));
        request.setRequestHeader('Accept', 'application/json');
        request.setRequestHeader('Content-Type', 'application/json');
        request.setHttpMethod('POST');
 
        var body = {
            commitId: commitId,
            xmlSysIds: xmlSysIds
        };
        request.setRequestBody(JSON.stringify(body));
 
        var response = request.execute(); // Async somehow does not perform
        if (!response.haveError()) {
            try {
                var responseXML = response.getBody();
                //self.console.log("successful - result is: {0}", responseXML);
                return responseXML;
 
            } catch (e) {
                self.console.error('JSON parsing failed. Text: {0}, Error:', response.getBody(), e);
                throw e;
            }
        } else {
            var statusCode = response.getStatusCode();
            self.console.error('request ended in error - StatusCode {0}, ResponseMessage: {1}, Endpoint: {2}, RequestBody: {3}', statusCode, response.getErrorMessage(), request.getEndpoint(), JSON.stringify(body));
            throw Error(response.getErrorMessage());
        }
    },
 
    /**
      * Aggregate Rest Worker. Called by CiCdDeploy()._aggregateUpdateSet()
      * 
      * @param {*} payload the payload used in the deployment
      * @returns {undefined}
      */
    aggregateUpdateSetWorker: function (payload) {
        var self = this;
 
        self.console.log('aggregateUpdateSetWorker: {0}', JSON.stringify(payload));
 
        if (!payload)
            throw Error('payload not specified');
 
        var tracker = SNC.GlideExecutionTracker.getLastRunning();
        //tracker.setSourceTable();
        tracker.setMaxProgressValue(10);
        tracker.run();
         
        var retry = true;
        var maxTry = 10;
        var tryCount = 0;
         
        try {
 
            var commitId = Array.isArray(payload.limitSet) ? payload.limitSet[0] : payload.limitSet;
            if (!commitId)
                throw Error('payload.limitSet (commitId) not specified');
 
            if (self.settings.throughMidServer &amp;&amp; gs.nil(self.settings.midServerName)) {
                throw Error('no running MID server available');
            }
 
            var endpoint = self.settings.cicdServerExportURL.concat('/xml_count/', commitId);
 
            var request = new sn_ws.RESTMessageV2();
            if (self.settings.throughMidServer) {
                request.setMIDServer(self.settings.midServerName);
            }
 
            request.setEndpoint(endpoint);
            request.setRequestHeader('Accept', 'application/json');
            request.setRequestHeader('Content-Type', 'application/json');
            request.setHttpMethod('GET');
 
            var response = request.execute();
 
            while (retry) {
 
                tryCount++;
                if (tryCount &gt;= maxTry) {
                    retry = false;
                }
 
                tracker.incrementProgressValue();
 
                try {
                    if (!response.haveError()) {
                        try {
                            var responseJson = JSON.parse(response.getBody());
                            tracker.updateResult({ count: responseJson.count });
                            tracker.updateProgressValue(10);
                            tracker.success('Export success');
                            break;
 
                        } catch (e) {
                            retry = false;
                            throw gs.getMessage('JSON parsing failed. Text: {0}, Error: {1}', [response.getBody(), e]);
                        }
                    } else {
                        var statusCode = response.getStatusCode();
                        retry = false;
                        throw gs.getMessage('Request ended in error - StatusCode {0}, ResponseMessage: {1}, Endpoint: {2}, RequestBody: {3}', [statusCode, response.getErrorMessage(), request.getEndpoint(), response.getBody()]);
                    }
                } catch (e) {
 
                    // retry on ECCResponseTimeoutException issues
                    if (!e.toString().includes('ECCResponseTimeoutException')) {
                        throw e;
                    }
                    if (!retry) {
                        self.console.error(gs.getMessage('aggregateUpdateSetWorker: Request failed after {0} retry to URL: \'{1}\'', [tryCount.toString(), endpoint]));
                        throw e;
                    }
 
                    self.console.error(gs.getMessage('aggregateUpdateSetWorker: ECCResponseTimeoutException, going to retry ({0}) the request to URL: \'{0}\'', [tryCount.toString(), endpoint]));
                    self.console.error(e);
                }
            }
 
        } catch (e) {
 
            tracker.fail(gs.getMessage('Tracker Error: {0}', [e]));
            self.console.error(e);
        }
    },
 
    /**
      * Get one active mid server
      * 
      * @returns {any} name
      */
    getMidServer: function () {
        var name = null;
        var mid = new GlideRecord('ecc_agent');
        mid.addQuery('status', 'Up');
        mid.addQuery('validated', 'true');
        mid.setLimit(1);
        mid.query();
        if (mid._next()) {
            name = mid.name.toString();
        }
        return name;
    },
 
    type: 'CiCdSource'
};
 ]]&gt;&lt;/script&gt;&lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;&lt;sys_created_by&gt;b.moers&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2019-01-18 12:50:13&lt;/sys_created_on&gt;&lt;sys_id&gt;16e746c6dbcfef00ee93b14ffe96194c&lt;/sys_id&gt;&lt;sys_mod_count&gt;96&lt;/sys_mod_count&gt;&lt;sys_name&gt;CiCdSource&lt;/sys_name&gt;&lt;sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e"&gt;19190fabdbebd300dfa9b94ffe96193e&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="CICD Integration"&gt;19190fabdbebd300dfa9b94ffe96193e&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_script_include_16e746c6dbcfef00ee93b14ffe96194c&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-07-19 09:48:50&lt;/sys_updated_on&gt;&lt;/sys_script_include&gt;&lt;/record_update&gt;</payload>
<payload_hash>-1249082143</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:51</sys_created_on>
<sys_id>485357b32f15b850d8455aab2799b6ac</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2ca4830000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:51</sys_updated_on>
<table/>
<target_name>CiCdSource</target_name>
<type>Script Include</type>
<update_domain>global</update_domain>
<update_guid>eed25f734a15b8503bfa3c35d9b8e774</update_guid>
<update_guid_history>eed25f734a15b8503bfa3c35d9b8e774:-1249082143,05a42e4b51207810c93f0dd00ceb505c:-855156332,6e7737486d3a2c1084156b5ceeba3fee:-968059690,1876af085ff62c10ebd8c79745246a09:-1851897048,cd70decf15096090333a7b74c6e8012e:1603739114,65435a3e7b4d2090755d9992157ee44b:-1414293313,2c125a3ed44d20901bf8a35a3610f844:1761184963,11819a3e8f4d2090ead01e2ed140e446:984866224,19a43a1b9676d010de5d0ba9c739d296:-852641868,09f4cc073052c0104b7e96e8e4a1268d:-1521306281,55d3cc070152c010d8abb8231c14e46e:996983085,b4504883bd52c01091ae348363421300:2138145604,55deb3325e52c010a441e52d4949ea32:1547320443,7add3bfa5212c0108270ec935046e6a9:-1718602968,f46af33ea412c0107ac27371562470e0:-1458087255,d309333ea312c010720de557b35245cb:1726421570,7671b776f312c0108b01590d2e3090e1:-1636290250,24803b36df12c0109bc517264b3f0379:-807473288,adcab928628c8cd00ff7bac2a18ff8a4:-994495423,3f7ab124abc04c101d83ddd1b9804f4a:2082814201,0b59f5a078c04c105d33bd193d4d82a4:1450745125,1b39f1e0fbc04c10b1bd3fc5c6ef54c3:-1972040262,35b879203cc04c10e875886cd826acdf:670416864,08e4f9ac5b804c10568587f1111adad2:-1358527637,724475ac5a804c10e134985988adc9a3:-1762487493,e1076604fecc0cd0d87d2b2350a1c7c0:302959426,3f161204808c0cd0db329a6d26d10ab1:1665989185,c899718403c8c8107079cc36997eb692:1369674900,7527807437c6fb8004eac7e8847ae9a3:-1400695949,ba7abbd0ce7773008f4a208385d48bb0:-894578261,7527807437c6fb8004eac7e8847ae9a3:-1400695949,7927ccb81086fb808cc0ba10be95b187:-372456842,8fa6e1d7d673ab40f98ed8c88957ea3b:-372456842,fe01d7a2d7bbe7409560be8df6367b4e:-1791958873,2be197330e57a780bff465fc4f3f2590:-1964746123,aac5fcc25e17238058d418a9de9d3945:-1436032499,09cda3b1571323803a3d294ebeb44314:1107868074,c9cd0f2d8b9faf40d44931614a525d11:1461283094,909f1950131f2b40dfe5df1431d1410e:795820325,4fb7a908ba17a74084565bbb8441af47:-1955796839,cfc6e580f057a74047bbfe292e6c8898:2127159535,3646e1803157a740fdd93e77cee4cddb:64725105,cce5a1004717a7409d571c56705d0f34:-950087913,09e45180f817a740d517e31621884214:-1682921258,b05295800217a740acc4a106bb76c643:348967977,b7d111804517a7407bebf768a82e9cba:-1730933781,2b711d44c3d3a740daa0e1be91df60a8:-2122975861,bb41958cd6d3a740deca30108931a0be:-625995383,618f4d44bcd3a74037994ff6599a7e59:-2050901336,5a5485807953a740fc3d43ea3669e3c2:1465876426,0b8db0cc1e93a740d2cee6aa4047c8fa:-1247012398,f96c948ce213a740f118a05948d8cd9d:2054704397,513b94807853a7400ef5c53e972c01b0:-789951106,67ba184cdc13a740d0379b1fae806f3f:2102823466,73b3540c2913a74062631c2cf2dd71ef:1496424445,0973940c0713a74022ac04607a28ee29:-1905582962,01331c0c3413a740bac46120f8715115:-1993789452,6df2580c2513a7407c9c58bebb7e611e:2085504414,b79290c87313a7408fc852ba47b54e27:655985454,d63154408613a740becd60675f34f57d:1059077518,f3df44406c13a74028109a2d7e32869e:-1031177776,4228d03b64836740aea4f71995117bf4:-138340478,3787dc3bf8836740477b1a4019e20f71:-42189315,8856943b14836740785b9d48b19737ee:1819628971,3916dc3bfe8367407a2ddcd83430af78:1861741526,4c1bcc7b5a8367408aa57c381c4d2cbb:-1535195220,5aca443b57836740cbcca0f3f6af7381:545306458,700748f383836740d692730ddae08f7e:364840656,a6361b1be0436740d63912f32769b2de:-512947346,b1165b1b91436740fce8bcff29bc7f05:1895998399,ade5931b20436740018842116d7642f3:1311445687,7b3317134f436740995c90f59cc799b3:-1454956119,92bfcbd3d7436740dd035fb995712405:-1139038576,c11f8f93a84367409408331b3edc054a:124594692,a4fe8b5387436740102052e7b4defeb5:-367857377,2b5c43dfcd036740ee5cae1958c029f8:-269602936,b0fa43df8a0367404a21429541bd0bdd:2045801378,cdbac3db3a0367406c1af33704a24271:1784689289,3f1ac39f870367403954683d31bd010c:-998286850,76c9475f99036740ab87517f344ab01d:-1570550912,3668879bc703674028f4642ac78ba556:-1213707277,b17687d785036740b782ed892ebfc365:552802121,d316c3dbec03674009e983b79ef7913a:27938344,de75879b53036740f4435d3fd188bf50:-1871297425,550547d7500367409ce38e0d8209551e:1935600025,c9644f17610367401de0de7398f8aa21:35561948,23c307d7fb036740e64a7dd50b25e4fb:-174641444,1b938f1b3b036740b21a18a3a8bba41f:2002157393,6ebebe1785036740b78ae278ffe5a53b:-1718084246,c1ae7e17aa03674039dd16402a70e511:403209335,9a9e3a1f40cf2740a123029104408981:-1495175305,b77efe53b90367408ce6dfee073b403a:493181689,5c3dfa9bdecf274085ecb7329a97961e:-2085635563,c5ec76d3e7036740bddcfe40b3dcca5b:1944040078,9ffbbe5315036740daa214d66756f1dc:613288584,0f7b369b36cf274017bb55f9429ee350:-1084591318,f1b53a1f07cf2740b5aaaad3b7dd5954:-129474252,6dbe068e4dcfef0037c3d442212fbc52:160717021,3a5e8e4edfcfef00eef82ba998c0f9c6:-291851197,6a3e8a8a0acfef000681fc679db517c5:675648822,710e8a4e20cfef004a65a32e8c2e0b36:1055640250,aebd464e97cfef002c466c8be46010d5:-293560657,5e6b4a4aafcfef002464a97252b9d764:1835579659,5f1b828af4cfef00a7ebe67d23031148:-409756711,779ace8a38cfef00faf63453049a4c13:-237207233,f14a4ec64ecfef00229380778db0b610:-949709957,e9d8464a31cfef005ccd788cac652c3e:983551382</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_security_acl_role_d2018d57db6d2b00323efc600f961948</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_security_acl_role"><sys_security_acl_role action="INSERT_OR_UPDATE"><sys_class_name>sys_security_acl_role</sys_class_name><sys_created_by>b.moers</sys_created_by><sys_created_on>2018-11-08 15:15:24</sys_created_on><sys_id>d2018d57db6d2b00323efc600f961948</sys_id><sys_mod_count>0</sys_mod_count><sys_name>.cicd_integration_user</sys_name><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_security_acl display_value="CiCdExportUpdateSet">bc014d97db6d2b00323efc600f961936</sys_security_acl><sys_update_name>sys_security_acl_role_d2018d57db6d2b00323efc600f961948</sys_update_name><sys_updated_by>b.moers</sys_updated_by><sys_updated_on>2018-11-08 15:15:24</sys_updated_on><sys_user_role display_value="cicd_integration_user" name="cicd_integration_user">dd194b2bdbebd300dfa9b94ffe96194f</sys_user_role><transaction_id/></sys_security_acl_role></record_update>]]></payload>
<payload_hash>1770437566</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:51</sys_created_on>
<sys_id>485357b32f15b850d8455aab2799b6af</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c97200000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:51</sys_updated_on>
<table>CiCdExportUpdateSet</table>
<target_name>.cicd_integration_user</target_name>
<type>Access Roles</type>
<update_domain>global</update_domain>
<update_guid>bf8200e824777300d0b0d42c2db45445</update_guid>
<update_guid_history>8f7abbd0a07773007260515b4fa374d9:1770437566,8f7abbd0a07773007260515b4fa374d9:1770437566,8f7abbd0a07773007260515b4fa374d9:1770437566,79eadb3b2e57a7800f7405b7212bee50:1563576374,00318d57566d2b00752139f26c5f0d4e:-844995694</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_ui_related_sys_app_global</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update><sys_ui_related sys_domain="global" table="sys_app" version="2" view="global"><sys_ui_related_list_entry action="INSERT_OR_UPDATE"><filter/><list_id display_value="Custom Application - Global" name="sys_app" related_list="NULL" sys_domain="global" view="b1b17b829333310063d3941e867ffbdf">6987fa0fdb3e9010fcf4178039961900</list_id><order_by/><position>0</position><related_list>sys_metadata.sys_scope</related_list><sys_class_name>sys_ui_related_list_entry</sys_class_name><sys_created_by>admin</sys_created_by><sys_created_on>2020-08-27 21:05:53</sys_created_on><sys_id>ed87fa0fdb3e9010fcf4178039961900</sys_id><sys_mod_count>0</sys_mod_count><sys_updated_by>admin</sys_updated_by><sys_updated_on>2020-08-27 21:05:53</sys_updated_on></sys_ui_related_list_entry><sys_ui_related_list_entry action="INSERT_OR_UPDATE"><filter/><list_id display_value="Custom Application - Global" name="sys_app" related_list="NULL" sys_domain="global" view="b1b17b829333310063d3941e867ffbdf">6987fa0fdb3e9010fcf4178039961900</list_id><order_by/><position>1</position><related_list>sys_package_dependency_m2m.sys_package</related_list><sys_class_name>sys_ui_related_list_entry</sys_class_name><sys_created_by>admin</sys_created_by><sys_created_on>2020-08-27 21:05:53</sys_created_on><sys_id>e187fa0fdb3e9010fcf4178039961901</sys_id><sys_mod_count>0</sys_mod_count><sys_updated_by>admin</sys_updated_by><sys_updated_on>2020-08-27 21:05:53</sys_updated_on></sys_ui_related_list_entry><sys_ui_related_list_entry action="INSERT_OR_UPDATE"><filter/><list_id display_value="Custom Application - Global" name="sys_app" related_list="NULL" sys_domain="global" view="b1b17b829333310063d3941e867ffbdf">6987fa0fdb3e9010fcf4178039961900</list_id><order_by/><position>2</position><related_list>sys_scope_privilege.sys_scope</related_list><sys_class_name>sys_ui_related_list_entry</sys_class_name><sys_created_by>admin</sys_created_by><sys_created_on>2020-08-27 21:05:53</sys_created_on><sys_id>e587fa0fdb3e9010fcf4178039961901</sys_id><sys_mod_count>0</sys_mod_count><sys_updated_by>admin</sys_updated_by><sys_updated_on>2020-08-27 21:05:53</sys_updated_on></sys_ui_related_list_entry><sys_ui_related_list_entry action="INSERT_OR_UPDATE"><filter/><list_id display_value="Custom Application - Global" name="sys_app" related_list="NULL" sys_domain="global" view="b1b17b829333310063d3941e867ffbdf">6987fa0fdb3e9010fcf4178039961900</list_id><order_by/><position>3</position><related_list>sys_scope_design_access.sys_scope</related_list><sys_class_name>sys_ui_related_list_entry</sys_class_name><sys_created_by>admin</sys_created_by><sys_created_on>2020-08-27 21:05:53</sys_created_on><sys_id>e987fa0fdb3e9010fcf4178039961901</sys_id><sys_mod_count>0</sys_mod_count><sys_updated_by>admin</sys_updated_by><sys_updated_on>2020-08-27 21:05:53</sys_updated_on></sys_ui_related_list_entry><sys_ui_related_list_entry action="INSERT_OR_UPDATE"><filter/><list_id display_value="Custom Application - Global" name="sys_app" related_list="NULL" sys_domain="global" view="b1b17b829333310063d3941e867ffbdf">6987fa0fdb3e9010fcf4178039961900</list_id><order_by/><position>4</position><related_list>REL:3275124bdbfa9010fcf4178039961984</related_list><sys_class_name>sys_ui_related_list_entry</sys_class_name><sys_created_by>admin</sys_created_by><sys_created_on>2020-08-27 21:05:53</sys_created_on><sys_id>ed87fa0fdb3e9010fcf4178039961901</sys_id><sys_mod_count>0</sys_mod_count><sys_updated_by>admin</sys_updated_by><sys_updated_on>2020-08-27 21:05:53</sys_updated_on></sys_ui_related_list_entry><sys_ui_related_list action="INSERT_OR_UPDATE"><calculated_name>Custom Application - Global</calculated_name><filter/><name>sys_app</name><order_by/><position/><related_list/><sys_class_name>sys_ui_related_list</sys_class_name><sys_created_by>admin</sys_created_by><sys_created_on>2020-08-27 21:05:53</sys_created_on><sys_domain>global</sys_domain><sys_domain_path>/</sys_domain_path><sys_id>6987fa0fdb3e9010fcf4178039961900</sys_id><sys_mod_count>1</sys_mod_count><sys_name>Custom Application - Global</sys_name><sys_package display_value="A Global Scoped App" source="0923860adbff7700fcf41780399619b9">0923860adbff7700fcf41780399619b9</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_update_name>sys_ui_related_sys_app_global</sys_update_name><sys_updated_by>admin</sys_updated_by><sys_updated_on>2020-08-27 21:09:51</sys_updated_on><sys_user/><view display_value="Global" name="global">b1b17b829333310063d3941e867ffbdf</view><view_name/></sys_ui_related_list></sys_ui_related></record_update>]]></payload>
<payload_hash>-2041129646</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:51</sys_created_on>
<sys_id>485357b32f15b850d8455aab2799b6b2</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c9ee10000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:51</sys_updated_on>
<table>sys_app</table>
<target_name>Custom Application</target_name>
<type>Related Lists</type>
<update_domain>global</update_domain>
<update_guid>eb683e0fd23e9010ff59d63b3cb76ff5</update_guid>
<update_guid_history>eb683e0fd23e9010ff59d63b3cb76ff5:-2041129646,6987fa0f3a3e901084d9f44a68c36103:-1351280397,ae77760fc03e9010e0d1c91306314a87:-932749199,e5767ecb663e9010e7ef6916a2155445:-913025107,497576cbc73e90100762e0310baf9346:662904996,b56572cb743e9010182e23dd5fef083c:298607360,e71572cbd93e90106d62a03fc2d95b30:718620281,7905fe8bd93e9010b08312746f64f881:-1210177069,e767168ba9fa90105dd5e95b13856a3c:-728993098,4484160b9bfa90108bbec4b41ccd1108:998462228,a274d20bacfa901080bed57ba49207c3:1654067490,f1068cd15f18885024883b596fe4c353:1627996665</update_guid_history>
<update_set display_value=""/>
<view>global</view>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_properties_11095a7adbdaa7c076d6b94ffe96190c</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_properties"><sys_properties action="INSERT_OR_UPDATE"><choices/><description>&lt;b&gt;Secret Token&lt;/b&gt;&lt;br&gt;&#13;
&lt;small&gt;a random string&lt;/small&gt;&lt;br&gt;&#13;
The Secure Token. &lt;span color="red" style="color: red;"&gt;If no name and no token is specified the API is public!&lt;/span&gt;</description><ignore_cache>false</ignore_cache><is_private>false</is_private><name>cicd-integration.pull-request-proxy.secret</name><read_roles/><suffix/><sys_class_name>sys_properties</sys_class_name><sys_created_by>b.moers</sys_created_by><sys_created_on>2018-12-14 15:09:16</sys_created_on><sys_id>11095a7adbdaa7c076d6b94ffe96190c</sys_id><sys_mod_count>44</sys_mod_count><sys_name>cicd-integration.pull-request-proxy.secret</sys_name><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_update_name>sys_properties_11095a7adbdaa7c076d6b94ffe96190c</sys_update_name><sys_updated_by>b.moers</sys_updated_by><sys_updated_on>2019-01-09 16:50:03</sys_updated_on><type>string</type><value>5VCSj9SPRH3EbNHrBSTf</value><write_roles/></sys_properties><sys_translated_text action="delete_multiple" query="documentkey=11095a7adbdaa7c076d6b94ffe96190c"/></record_update>]]></payload>
<payload_hash>1814745686</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:51</sys_created_on>
<sys_id>48539f732f15b850d8455aab2799b61b</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c9a9e0000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:51</sys_updated_on>
<table/>
<target_name>cicd-integration.pull-request-proxy.secret</target_name>
<type>System Property</type>
<update_domain>global</update_domain>
<update_guid>6782cca84677730005ad15f273c0c7c1</update_guid>
<update_guid_history>227abbd0bc7773002b1103ee3ab2c479:1814745686,227abbd0bc7773002b1103ee3ab2c479:1814745686,227abbd0bc7773002b1103ee3ab2c479:1814745686,ef692c5741fa27001e9376f861a64891:-1330139281,6d69a857c8fa2700e99f4b11274f3422:1896186327,5a492817d2fa27007426abd9e050bdb7:2033293849,2b392457f7fa27001aa6791f58df3806:1697211991,8b29605729fa2700158dc84b9359d864:2033293849,7df8a01346fa27000415e79d3a1e157f:1697211991,6fe8a017b8fa27003f9b5540050cb9e4:1010593825,6cb860932efa2700da01a871bfdabba9:1359562291,42c7249380fa27000b05a10c17206811:1023480433,50b760933afa27007b232e823512ae03:-1330139281,87872c5315fa2700f334fc7c734854c9:1023480433,9267a813c7fa2700f0f4c4635d9cf6ea:192160071,aa17e813acfa2700b1d04bd515b35aa1:1359562291,0e072813f3fa2700a85e38615f4c7ac1:192160071,78f6641386fa2700df546550efd507ee:1359562291,02c6acdf26ba27008a0856e32c5acc90:1023480433,4386609f1eba2700051f6c6287890f3d:-576175026,5c04ec1f3fba27000c277dbe8b20d9e6:1359562291,5ef3605fe1ba2700ff4652526bbcafb7:192160071,a3926cdbbfba2700b1a68a17a2204075:1023480433,93f1e45b0eba2700800e4e7e44c952ea:-1410470392,7f30605b03ba2700e4747229e1361369:1359562291,1820601b44ba2700a2d88798fd4c0788:-621239754,f76f5053f7ba27008fccc9744ec1a0bd:-576175026,b68e1c1721ba2700b62a1da394cde914:2033293849,1b7e9c97a1ba270074cbce1dba49d286:881782135,166e989763ba270031fcb0465861d5dc:2033293849,513e1c1742ba270016dab248e84a580e:1023480433,aadb94539dba27005bef06e8b77ce107:147959965,82cbd05389ba27001f8272547ae26f15:2033293849,a0bb505323ba2700c6aaf5547c6ea53b:1010593825,3e3b1813a9ba2700d33a7c7d6e4af7e7:2033293849,1a1b185ffe7a2700dc9075918da93666:1576521512,b9cadcdf877a27003721ef01237ba2fa:1359562291,d0381c1ba47a27004821b828922c9f87:-1330139281,4ae221498aaaefc0fd84aef61e69bffe:-476785826,5692e236f91ea7c076a17dea9ef87dfa:-1768406780,0f7222367d1ea7c0eaa406658022cec5:1516489890,05626ef2da1ea7c05001e67128b658c0:-1768406780,347c1abeb4daa7c00fec2ab7be19fdb1:1078039537,c03cd2bed4daa7c030aac0d32b913b09:-1817596055,409adebaaedaa7c07bdca5bd0fdddfd3:99175200,59f91eba40daa7c074a62e8706343a73:1412405570,39095a7a05daa7c08259a48dd186cd10:-19326764</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_properties_category_m2m_09dc5d86dbe74300dfa9b94ffe961944</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_properties_category_m2m"><sys_properties_category_m2m action="INSERT_OR_UPDATE"><category display_value="CICD Integration">8d1de113dbb86380432cfc600f9619f6</category><order>350</order><property display_value="cicd-integration.jsdocButton.enabled" name="cicd-integration.jsdocButton.enabled">3aacd546dbe74300dfa9b94ffe961943</property><sys_class_name>sys_properties_category_m2m</sys_class_name><sys_created_by>b.moers</sys_created_by><sys_created_on>2018-01-10 13:47:02</sys_created_on><sys_id>09dc5d86dbe74300dfa9b94ffe961944</sys_id><sys_mod_count>7</sys_mod_count><sys_name>cicd-integration.jsdocButton.enabled.CICD Integration</sys_name><sys_package display_value="Global" source="global">global</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_update_name>sys_properties_category_m2m_09dc5d86dbe74300dfa9b94ffe961944</sys_update_name><sys_updated_by>b.moers</sys_updated_by><sys_updated_on>2019-01-16 16:59:05</sys_updated_on></sys_properties_category_m2m></record_update>]]></payload>
<payload_hash>-134628517</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:51</sys_created_on>
<sys_id>48539f732f15b850d8455aab2799b61e</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c9aba0000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:51</sys_updated_on>
<table/>
<target_name>cicd-integration.jsdocButton.enabled.CICD Integration</target_name>
<type>Category Property</type>
<update_domain>global</update_domain>
<update_guid>eb82cca873777300fbb592d0932dbecc</update_guid>
<update_guid_history>127abbd0fc7773006675953ca89a7b1a:-134628517,127abbd0fc7773006675953ca89a7b1a:-134628517,127abbd0fc7773006675953ca89a7b1a:-134628517,ab9e6c2d67c36f0066d7f5c82a572fae:-144364845,2b9dc626afe1a700ae4dfd19a981148b:-1306501779,d49dce260ae1a70009b86862ac270619:656713110,27e1d4216685ab80e94a3861c0048dd5:-1807553390,b6c0d0ed3645ab806694d320f38d2d41:-1383240701,1ea0d8edbd45ab80153b0ae545736232:763074859,5aa0d8ed9b45ab8070727d4967454931:-1113670772</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_properties_category_m2m_b8c8bb10db777300fcf4178039961900</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_properties_category_m2m"><sys_properties_category_m2m action="INSERT_OR_UPDATE"><category display_value="CICD Integration">8d1de113dbb86380432cfc600f9619f6</category><order>15</order><property display_value="cicd-integration.scoped-app.single-update-set" name="cicd-integration.scoped-app.single-update-set">6cb8bb58db377300fcf417803996199b</property><sys_class_name>sys_properties_category_m2m</sys_class_name><sys_created_by>admin</sys_created_by><sys_created_on>2019-09-06 13:28:06</sys_created_on><sys_id>b8c8bb10db777300fcf4178039961900</sys_id><sys_mod_count>1</sys_mod_count><sys_name>cicd-integration.scoped-app.single-update-set.CICD Integration</sys_name><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_update_name>sys_properties_category_m2m_b8c8bb10db777300fcf4178039961900</sys_update_name><sys_updated_by>admin</sys_updated_by><sys_updated_on>2019-09-06 13:28:33</sys_updated_on></sys_properties_category_m2m></record_update>]]></payload>
<payload_hash>1258354175</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:51</sys_created_on>
<sys_id>4c5357b32f15b850d8455aab2799b6a8</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c9dfa0000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:51</sys_updated_on>
<table/>
<target_name>cicd-integration.scoped-app.single-update-set.CICD Integration</target_name>
<type>Category Property</type>
<update_domain>global</update_domain>
<update_guid>400d3b14f4f3fb8015ef04a88527df31</update_guid>
<update_guid_history>400d3b14f4f3fb8015ef04a88527df31:-2088261821,400d3b14f4f3fb8015ef04a88527df31:-2088261821,5bd8fb98af377300b0a558f12401bc4e:1258354175,34c8bb10a37773002b428b31f54d0a02:-1094901572</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_script_client_31d2addbdb72d010fcf4178039961929</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update sys_domain="global" table="sys_script_client"&gt;&lt;sys_script_client action="INSERT_OR_UPDATE"&gt;&lt;active&gt;true&lt;/active&gt;&lt;applies_extended&gt;true&lt;/applies_extended&gt;&lt;condition/&gt;&lt;description/&gt;&lt;field&gt;active&lt;/field&gt;&lt;global&gt;true&lt;/global&gt;&lt;isolate_script&gt;true&lt;/isolate_script&gt;&lt;messages/&gt;&lt;name&gt;[CICD] set 'repository' visibility&lt;/name&gt;&lt;order/&gt;&lt;script&gt;&lt;![CDATA[/**
 * Toggle visibility of 'u_repository'
 *
 * @author System Administrator [admin]
 * @memberof global.module:sys_script_client
 * @returns {undefined}
 */
function onLoad() {
	var sectionName = 'cicd_settings';
    var repoFieldName = 'u_repository';
	var hasSection = g_form.getSectionNames().indexOf(sectionName) != -1;

    // no section, no cry
	if(!hasSection)
		return;
	
	if(!g_scratchpad.settings || !g_scratchpad.settings.cicdEnabled){
		// hide the cicd section
		
		g_form.setSectionDisplay(sectionName, false);
		// hide the repo field
		g_form.setDisplay(repoFieldName, false);	
		return;
	}
	
	var sanitize = function(str){
		return str.toLowerCase().replace(/[^\w]/g, ' ').replace(/\s+/g, '_').replace(/^_+|_+$/g, '');
	};
	
	// show the cicd section
	g_form.setSectionDisplay(sectionName, g_scratchpad.settings.showRepositoryField);
	// show the repo field
	g_form.setDisplay(repoFieldName, g_scratchpad.settings.showRepositoryField);

	
	if(g_scratchpad.settings.showRepositoryField){
		
		var name = g_form.getValue('name');
		var repo = g_form.getValue(repoFieldName);
		var makeReadonly = true;
		// make sure the repo name is auto populated
		if(name &amp;&amp; !repo){
			g_form.setValue("u_repository", sanitize(name));
			makeReadonly = false;
		}
		
		var element = g_form.getElement(repoFieldName);
		var scope = g_form.getValue('scope');
		if(scope == 'global'){
			// make the repo field mandatory for global scoped apps
			g_form.setMandatory(repoFieldName, true);
		} else if(!g_form.getValue(repoFieldName)){
			// if not a global app and empty, gerenarte the repo name based on the scope
			g_form.setValue(repoFieldName, sanitize(scope));
		}

		// if a repo is already set, make the field read only, but allow users to click on it to edit the form
		if(makeReadonly &amp;&amp; element.value.length != 0){
			// we can install an enventListener
			if(typeof element.addEventListener == 'function'){
				// help text in case user does not know one can click here to edit...
				element.title = 'Click to edit....';
				
				g_form.setReadOnly(repoFieldName, true);
				
				// add click and blur eventlistener
				element.addEventListener('click', function(){
					g_form.setReadOnly(repoFieldName, false);
				}, false);
				element.addEventListener('blur', function(){
					g_form.setReadOnly(repoFieldName, true);
				}, false);
			}
		}
	}
}]]&gt;&lt;/script&gt;&lt;sys_class_name&gt;sys_script_client&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2020-08-28 09:37:01&lt;/sys_created_on&gt;&lt;sys_domain&gt;global&lt;/sys_domain&gt;&lt;sys_domain_path&gt;/&lt;/sys_domain_path&gt;&lt;sys_id&gt;31d2addbdb72d010fcf4178039961929&lt;/sys_id&gt;&lt;sys_mod_count&gt;27&lt;/sys_mod_count&gt;&lt;sys_name&gt;[CICD] set 'repository' visibility&lt;/sys_name&gt;&lt;sys_overrides/&gt;&lt;sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e"&gt;19190fabdbebd300dfa9b94ffe96193e&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="CICD Integration"&gt;19190fabdbebd300dfa9b94ffe96193e&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_script_client_31d2addbdb72d010fcf4178039961929&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2020-10-21 08:45:15&lt;/sys_updated_on&gt;&lt;table&gt;sys_scope&lt;/table&gt;&lt;type&gt;onLoad&lt;/type&gt;&lt;ui_type&gt;0&lt;/ui_type&gt;&lt;view/&gt;&lt;/sys_script_client&gt;&lt;/record_update&gt;</payload>
<payload_hash>400334257</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:51</sys_created_on>
<sys_id>4c5357b32f15b850d8455aab2799b6ab</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2ca0100000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:51</sys_updated_on>
<table>sys_scope</table>
<target_name>[CICD] set 'repository' visibility</target_name>
<type>Client Script</type>
<update_domain>global</update_domain>
<update_guid>ec7d5f686d44e45007e17cf594aac849</update_guid>
<update_guid_history>ec7d5f686d44e45007e17cf594aac849:400334257,f5ac17e8e844e450cbd6984d0d2d5162:104083313,e0ef8cac390ca450d283112aae63b9b9:-832372522,87ad70d1d1cf94106010dad25b8250ed:2127211520,4e1c305503cf9410621a73c85219e246:687117361,e63770d18ccf94108ba1950c727ff56a:1176995313,6bc6f051fdcf9410a727f8821a162ab9:699511137,51967051dacf94108e1d727f9b103ca2:-593009457,99cb22136c76d010425fe18cca93490b:-947899969,17e3de1f53f2d010fdfef68eb6527ddc:1739302663,7113125f88f2d010b26bf4c2caf582e7:-1072050212,2c72de9b34f2d0103b50820c98dff461:-804311477,7750529b0cf2d010a122c9530e3dcf11:-313766851,8c30d69baef2d010caa91cd3457906a5:1936897772,33efc61bd7f2d0109b06d35b3e221fd9:-1204828341,7e9fc65b32f2d0106708e5dd53c72491:778694323,8aee061b31f2d010a2b8759664983e50:-1305276762,993e025b2df2d010b4ff4c5609441f0a:-1182582703,e75d8297f8f2d010f4bd3b93e430fa7c:1523845445,9cab821b50f2d010130923748d614a87:1090027231,7cb4829387f2d01002a8c80f9ca3492b:2055472501,66548e539af2d010465dc4accc7bd447:1697360034,5f624e9fb6b2d010e47831da09ad618a:814190918,0d2ebd1fc9b2d010556befcbe8284517:-763425841,890e7d1f8bb2d010bffa733ff270063d:1439975761,fbdbfddb77b2d010d42aec6016b149a8:589748663,15d17d13dcb2d0102abbb2886fa41c79:1255055215,24736ddb8b72d0108c1f90c9ac77824e:257234466</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_security_acl_role_560285d7db6d2b00323efc600f9619a5</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_security_acl_role"><sys_security_acl_role action="INSERT_OR_UPDATE"><sys_class_name>sys_security_acl_role</sys_class_name><sys_created_by>b.moers</sys_created_by><sys_created_on>2018-11-08 15:19:17</sys_created_on><sys_id>560285d7db6d2b00323efc600f9619a5</sys_id><sys_mod_count>0</sys_mod_count><sys_name>CiCdExportBaseUpdateSet.cicd_integration_user</sys_name><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_security_acl display_value="CiCdExportBaseUpdateSet">bc02c9d7db6d2b00323efc600f96192c</sys_security_acl><sys_update_name>sys_security_acl_role_560285d7db6d2b00323efc600f9619a5</sys_update_name><sys_updated_by>b.moers</sys_updated_by><sys_updated_on>2018-11-08 15:19:17</sys_updated_on><sys_user_role display_value="cicd_integration_user" name="cicd_integration_user">dd194b2bdbebd300dfa9b94ffe96194f</sys_user_role><transaction_id/></sys_security_acl_role></record_update>]]></payload>
<payload_hash>-1740924822</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:51</sys_created_on>
<sys_id>4c5357b32f15b850d8455aab2799b6ae</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c977d0000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:51</sys_updated_on>
<table>CiCdExportBaseUpdateSet</table>
<target_name>CiCdExportBaseUpdateSet.cicd_integration_user</target_name>
<type>Access Roles</type>
<update_domain>global</update_domain>
<update_guid>fb8200e803777300874ee03d4746ce3b</update_guid>
<update_guid_history>4f7abbd0b17773006785240c79f8bbd2:-1740924822,4f7abbd0b17773006785240c79f8bbd2:-1740924822,4f7abbd0b17773006785240c79f8bbd2:-1740924822,b412c9d7f56d2b0090655243ccc0eb54:833217698</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_ui_action_view_ce54b273db9f3f408fb6f6700f96190d</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ui_action_view"><sys_ui_action_view action="INSERT_OR_UPDATE"><sys_class_name>sys_ui_action_view</sys_class_name><sys_created_by>b.moers</sys_created_by><sys_created_on>2019-08-23 08:56:32</sys_created_on><sys_id>ce54b273db9f3f408fb6f6700f96190d</sys_id><sys_mod_count>0</sys_mod_count><sys_name>Save &amp; close.CICD Preview</sys_name><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_ui_action display_value="Update">42df02e20a0a0b340080e61b551f2909</sys_ui_action><sys_ui_view display_value="CICD Preview" name="cicd_preview">cdb37233db9f3f408fb6f6700f96191a</sys_ui_view><sys_update_name>sys_ui_action_view_ce54b273db9f3f408fb6f6700f96190d</sys_update_name><sys_updated_by>b.moers</sys_updated_by><sys_updated_on>2019-08-23 08:56:32</sys_updated_on><visibility>exclude</visibility></sys_ui_action_view></record_update>]]></payload>
<payload_hash>1370548074</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:51</sys_created_on>
<sys_id>4c5357b32f15b850d8455aab2799b6b1</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c9c7a0000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:51</sys_updated_on>
<table/>
<target_name>exclude</target_name>
<type>UI View Action</type>
<update_domain>global</update_domain>
<update_guid>0654b273609f3f400f7569e3020d7b0f</update_guid>
<update_guid_history>0654b273609f3f400f7569e3020d7b0f:-893895863,0654b273609f3f400f7569e3020d7b0f:-893895863,b67abbd0d1777300fb90b86e505af5a6:1370548074,0654b273609f3f400f7569e3020d7b0f:-893895863</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_web_service_57540cbfdb4367409775f6700f9619c0</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_web_service"&gt;&lt;sys_web_service action="INSERT_OR_UPDATE"&gt;&lt;active&gt;true&lt;/active&gt;&lt;function_name&gt;*&lt;/function_name&gt;&lt;name&gt;api/devops/cicd/source/sys_update_xml&lt;/name&gt;&lt;scoped_name&gt;api/devops/cicd/source/sys_update_xml&lt;/scoped_name&gt;&lt;script&gt;&lt;![CDATA[(function scriptedWebServiceOperation(request, response) {

	return new CiCdSource().updateSetXmlSoapWebService(this.soapRequestXML, response);

})(request, response);]]&gt;&lt;/script&gt;&lt;short_description&gt;getKeys, getRecords&lt;/short_description&gt;&lt;sys_class_name&gt;sys_web_service&lt;/sys_class_name&gt;&lt;sys_created_by&gt;b.moers&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2019-01-23 13:40:47&lt;/sys_created_on&gt;&lt;sys_id&gt;57540cbfdb4367409775f6700f9619c0&lt;/sys_id&gt;&lt;sys_mod_count&gt;2&lt;/sys_mod_count&gt;&lt;sys_name&gt;api/devops/cicd/source/sys_update_xml&lt;/sys_name&gt;&lt;sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e"&gt;19190fabdbebd300dfa9b94ffe96193e&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="CICD Integration"&gt;19190fabdbebd300dfa9b94ffe96193e&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_web_service_57540cbfdb4367409775f6700f9619c0&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;b.moers&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2019-01-30 17:01:15&lt;/sys_updated_on&gt;&lt;wsdl&gt;https://dev65672.service-now.com/api/devops/cicd/source/sys_update_xml.do?WSDL&lt;/wsdl&gt;&lt;wsdl_compliance&gt;false&lt;/wsdl_compliance&gt;&lt;/sys_web_service&gt;&lt;/record_update&gt;</payload>
<payload_hash>-1412981639</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:52</sys_created_on>
<sys_id>4c5357b32f15b850d8455aab2799b6b5</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c9b540000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:52</sys_updated_on>
<table/>
<target_name>api/devops/cicd/source/sys_update_xml</target_name>
<type>Scripted Web Service</type>
<update_domain>global</update_domain>
<update_guid>778200e846777300247f9a11c3e3c46e</update_guid>
<update_guid_history>7a7abbd0df77730039e4e2645e340d91:-1412981639,7a7abbd0df77730039e4e2645e340d91:-1412981639,7a7abbd0df77730039e4e2645e340d91:-1412981639,ff5530c2c5172380c425aa4afa48b4f6:-2121208871,ba89087761836740841c865bbba6db54:2044751538,53540cbf53436740c9effcbbc6f63dc1:-1005594556</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>DELETE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_documentation_sys_app_u_repository_en</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update><sys_documentation action="DELETE" element="u_repository" label="Repository" language="en" table="sys_app"><sys_documentation action="DELETE"><element>u_repository</element><help/><hint>Define the GIT repository name.&#13;
Click to edit...</hint><label>Repository</label><language>en</language><name>sys_app</name><plural>Repositories</plural><sys_class_name>sys_documentation</sys_class_name><sys_created_by>admin</sys_created_by><sys_created_on>2020-08-28 07:09:56</sys_created_on><sys_id>fdc1c19bdb32d010fcf41780399619fb</sys_id><sys_mod_count>2</sys_mod_count><sys_name>Repository</sys_name><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_update_name>sys_documentation_sys_app_u_repository_en</sys_update_name><sys_updated_by>admin</sys_updated_by><sys_updated_on>2020-08-28 13:05:55</sys_updated_on><url/><url_target/></sys_documentation></sys_documentation></record_update>]]></payload>
<payload_hash>-644645900</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:51</sys_created_on>
<sys_id>4c539f732f15b850d8455aab2799b61a</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c9fae0000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:51</sys_updated_on>
<table>sys_app</table>
<target_name>Custom Application.u_repository</target_name>
<type>Field Label</type>
<update_domain>global</update_domain>
<update_guid>314d8c6c170ca4500529e5691adaf541</update_guid>
<update_guid_history>314d8c6c170ca4500529e5691adaf541:-644645900,a843565f6bf2d0109dcfe1b7dae702a0:-423696756,a55ec9138972d01064cc6777ab71b98c:-524438543,7dc1059bf032d01025e2db5ba84fc703:1600494073</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_properties_b809e21b2f6c7810d8455aab2799b682</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_properties"><sys_properties action="INSERT_OR_UPDATE"><choices/><description>&lt;b&gt;Alow to skip the CICD process.&lt;/b&gt;</description><ignore_cache>false</ignore_cache><is_private>false</is_private><name>cicd-integration.skip-enabled</name><read_roles/><suffix/><sys_class_name>sys_properties</sys_class_name><sys_created_by>admin</sys_created_by><sys_created_on>2021-06-10 10:41:59</sys_created_on><sys_id>b809e21b2f6c7810d8455aab2799b682</sys_id><sys_mod_count>3</sys_mod_count><sys_name>cicd-integration.skip-enabled</sys_name><sys_package display_value="[ws] Xplore: Developer Toolkit" source="0f6ab99a0f36060094f3c09ce1050ee8">0f6ab99a0f36060094f3c09ce1050ee8</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_update_name>sys_properties_b809e21b2f6c7810d8455aab2799b682</sys_update_name><sys_updated_by>admin</sys_updated_by><sys_updated_on>2021-06-10 10:52:41</sys_updated_on><type>boolean</type><value>false</value><write_roles/></sys_properties><sys_translated_text action="delete_multiple" query="documentkey=b809e21b2f6c7810d8455aab2799b682"/></record_update>]]></payload>
<payload_hash>-482004464</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:51</sys_created_on>
<sys_id>4c539f732f15b850d8455aab2799b61d</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2ca3560000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:51</sys_updated_on>
<table/>
<target_name>cicd-integration.skip-enabled</target_name>
<type>System Property</type>
<update_domain>global</update_domain>
<update_guid>757bea9bf36c7810a6a0cf24d4bc2b86</update_guid>
<update_guid_history>757bea9bf36c7810a6a0cf24d4bc2b86:-482004464,576aaa1fa06c781039f92c2b13140c1a:-2076940764,ee2a26db7e6c7810225365469a394d3f:-1646429109,e509e21b836c7810dc8d8a9f8fbcb886:-2076940764</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_ws_operation_6680a3afdb2fd300dfa9b94ffe961992</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_ws_operation"&gt;&lt;sys_ws_operation action="INSERT_OR_UPDATE"&gt;&lt;active&gt;true&lt;/active&gt;&lt;consumes&gt;application/json,application/xml,text/xml&lt;/consumes&gt;&lt;consumes_customized&gt;false&lt;/consumes_customized&gt;&lt;default_operation_uri&gt;/api/devops/cicd/pull&lt;/default_operation_uri&gt;&lt;enforce_acl&gt;2ae86fe7db6fd300dfa9b94ffe9619bc&lt;/enforce_acl&gt;&lt;http_method&gt;POST&lt;/http_method&gt;&lt;name&gt;CD - Pull UpdateSet from source&lt;/name&gt;&lt;operation_script&gt;&lt;![CDATA[(function process(/*RESTAPIRequest*/ request, /*RESTAPIResponse*/ response) {

    return new CiCdDeploy(request, response).pullUpdateSet();

})(request, response);]]&gt;&lt;/operation_script&gt;&lt;operation_uri&gt;/api/devops/v1/cicd/pull&lt;/operation_uri&gt;&lt;produces&gt;application/json,application/xml,text/xml&lt;/produces&gt;&lt;produces_customized&gt;false&lt;/produces_customized&gt;&lt;relative_path&gt;/pull&lt;/relative_path&gt;&lt;request_example/&gt;&lt;requires_acl_authorization&gt;true&lt;/requires_acl_authorization&gt;&lt;requires_authentication&gt;true&lt;/requires_authentication&gt;&lt;requires_snc_internal_role&gt;true&lt;/requires_snc_internal_role&gt;&lt;short_description&gt;Request Target to Pull an UpdateSet from Source&lt;/short_description&gt;&lt;sys_class_name&gt;sys_ws_operation&lt;/sys_class_name&gt;&lt;sys_created_by&gt;b.moers&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2018-08-02 11:24:31&lt;/sys_created_on&gt;&lt;sys_id&gt;6680a3afdb2fd300dfa9b94ffe961992&lt;/sys_id&gt;&lt;sys_mod_count&gt;3&lt;/sys_mod_count&gt;&lt;sys_name&gt;CD - Pull UpdateSet from source&lt;/sys_name&gt;&lt;sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e"&gt;19190fabdbebd300dfa9b94ffe96193e&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="CICD Integration"&gt;19190fabdbebd300dfa9b94ffe96193e&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_ws_operation_6680a3afdb2fd300dfa9b94ffe961992&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;b.moers&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2018-08-09 12:59:44&lt;/sys_updated_on&gt;&lt;web_service_definition display_value="CICD Integration"&gt;81eccb6fdbebd300dfa9b94ffe96190e&lt;/web_service_definition&gt;&lt;web_service_version display_value="v1"&gt;0a3dcb2fdbebd300dfa9b94ffe9619c7&lt;/web_service_version&gt;&lt;/sys_ws_operation&gt;&lt;/record_update&gt;</payload>
<payload_hash>534160033</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:52</sys_created_on>
<sys_id>505357b32f15b850d8455aab2799b6b8</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c95450000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:52</sys_updated_on>
<table/>
<target_name>CD - Pull UpdateSet from source</target_name>
<type>Scripted REST Resource</type>
<update_domain>global</update_domain>
<update_guid>0c9200e8f8777300cb3ddf004acec97e</update_guid>
<update_guid_history>927abbd057777300164da72773d53a06:534160033,927abbd057777300164da72773d53a06:534160033,927abbd057777300164da72773d53a06:534160033,2d7933fd98b31f0076143864d0fbcda6:-150353904,2d7933fd98b31f0076143864d0fbcda6:-150353904,a1a92b2b6e6fd3003229f9a103afe188:-724411354,e5a023af212fd3002dd9f3d64809d48e:-632480401,2680a3afba2fd300c54b55ccec139993:-1086528747</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_ws_query_parameter_a6294a65db73db0076d6b94ffe961937</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ws_query_parameter"><sys_ws_query_parameter action="INSERT_OR_UPDATE"><example_value>0</example_value><name>sysparm_offset</name><required>false</required><short_description>The offset row (default 0)</short_description><sys_class_name>sys_ws_query_parameter</sys_class_name><sys_created_by>b.moers</sys_created_by><sys_created_on>2018-08-08 10:10:38</sys_created_on><sys_id>a6294a65db73db0076d6b94ffe961937</sys_id><sys_mod_count>1</sys_mod_count><sys_name>sysparm_offset</sys_name><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_update_name>sys_ws_query_parameter_a6294a65db73db0076d6b94ffe961937</sys_update_name><sys_updated_by>b.moers</sys_updated_by><sys_updated_on>2018-08-08 10:15:15</sys_updated_on><web_service_definition display_value="CICD Integration">81eccb6fdbebd300dfa9b94ffe96190e</web_service_definition></sys_ws_query_parameter></record_update>]]></payload>
<payload_hash>736659766</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:52</sys_created_on>
<sys_id>505357b32f15b850d8455aab2799b6bb</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c92800000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:52</sys_updated_on>
<table/>
<target_name>sysparm_offset</target_name>
<type>Scripted REST Query Parameter</type>
<update_domain>global</update_domain>
<update_guid>409200e8077773007c738a5896264f98</update_guid>
<update_guid_history>367abbd0f77773003c128d7072354898:736659766,367abbd0f77773003c128d7072354898:736659766,367abbd0f77773003c128d7072354898:736659766,623a8a659073db00c4d654d5133cbafc:120400958,26294a65bb73db001102c4b21efbfd38:48386590</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_ws_query_parameter_map_716ba231dbffdb0076d6b94ffe96194a</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ws_query_parameter_map"><sys_ws_query_parameter_map action="INSERT_OR_UPDATE"><sys_class_name>sys_ws_query_parameter_map</sys_class_name><sys_created_by>b.moers</sys_created_by><sys_created_on>2018-08-09 07:18:52</sys_created_on><sys_id>716ba231dbffdb0076d6b94ffe96194a</sys_id><sys_mod_count>0</sys_mod_count><sys_name>db836e29dbb3db0076d6b94ffe961976</sys_name><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_update_name>sys_ws_query_parameter_map_716ba231dbffdb0076d6b94ffe96194a</sys_update_name><sys_updated_by>b.moers</sys_updated_by><sys_updated_on>2018-08-09 07:18:52</sys_updated_on><web_service_operation display_value="CI - Get User Details">15a0fd61db33db0076d6b94ffe961987</web_service_operation><web_service_query_parameter display_value="sysparm_query_category">db836e29dbb3db0076d6b94ffe961976</web_service_query_parameter></sys_ws_query_parameter_map></record_update>]]></payload>
<payload_hash>-700892478</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:52</sys_created_on>
<sys_id>505357b32f15b850d8455aab2799b6be</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c941c0000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:52</sys_updated_on>
<table/>
<target_name>db836e29dbb3db0076d6b94ffe961976</target_name>
<type>Scripted REST Query Parameter Associatio</type>
<update_domain>global</update_domain>
<update_guid>449200e8cf77730056324ff7548fb8af</update_guid>
<update_guid_history>667abbd067777300dad20f5b2adbc65a:-700892478,667abbd067777300dad20f5b2adbc65a:-700892478,667abbd067777300dad20f5b2adbc65a:-700892478,21ea9b3be357a780d83a026c39e5c7fa:-191225734,5c7b6e7198ffdb00548210a2a49696ee:-1023754812</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_ws_operation_2082ef56db1667c076d6b94ffe961972</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_ws_operation"&gt;&lt;sys_ws_operation action="INSERT_OR_UPDATE"&gt;&lt;active&gt;true&lt;/active&gt;&lt;consumes&gt;application/json,application/xml,text/xml&lt;/consumes&gt;&lt;consumes_customized&gt;false&lt;/consumes_customized&gt;&lt;default_operation_uri&gt;/api/devops/cicd/scope/{scopeId}&lt;/default_operation_uri&gt;&lt;enforce_acl&gt;1a7833bddbb31f0076d6b94ffe961994&lt;/enforce_acl&gt;&lt;http_method&gt;GET&lt;/http_method&gt;&lt;name&gt;CI - Get Scope Details&lt;/name&gt;&lt;operation_script&gt;&lt;![CDATA[(function process(/*RESTAPIRequest*/ request, /*RESTAPIResponse*/ response) {
	
	return new CiCdApi(request, response).getScopeDetails(request.pathParams.scopeId);

})(request, response);]]&gt;&lt;/operation_script&gt;&lt;operation_uri&gt;/api/devops/v1/cicd/scope/{scopeId}&lt;/operation_uri&gt;&lt;produces&gt;application/json,application/xml,text/xml&lt;/produces&gt;&lt;produces_customized&gt;false&lt;/produces_customized&gt;&lt;relative_path&gt;/scope/{scopeId}&lt;/relative_path&gt;&lt;request_example/&gt;&lt;requires_acl_authorization&gt;true&lt;/requires_acl_authorization&gt;&lt;requires_authentication&gt;true&lt;/requires_authentication&gt;&lt;requires_snc_internal_role&gt;true&lt;/requires_snc_internal_role&gt;&lt;short_description&gt;Get all XML records of an UpdateSet&lt;/short_description&gt;&lt;sys_class_name&gt;sys_ws_operation&lt;/sys_class_name&gt;&lt;sys_created_by&gt;b.moers&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2018-12-13 07:13:22&lt;/sys_created_on&gt;&lt;sys_id&gt;2082ef56db1667c076d6b94ffe961972&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_name&gt;CI - Get Scope Details&lt;/sys_name&gt;&lt;sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e"&gt;19190fabdbebd300dfa9b94ffe96193e&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="CICD Integration"&gt;19190fabdbebd300dfa9b94ffe96193e&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_ws_operation_2082ef56db1667c076d6b94ffe961972&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;b.moers&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2018-12-13 07:13:22&lt;/sys_updated_on&gt;&lt;web_service_definition display_value="CICD Integration"&gt;81eccb6fdbebd300dfa9b94ffe96190e&lt;/web_service_definition&gt;&lt;web_service_version display_value="v1"&gt;0a3dcb2fdbebd300dfa9b94ffe9619c7&lt;/web_service_version&gt;&lt;/sys_ws_operation&gt;&lt;/record_update&gt;</payload>
<payload_hash>-1986267553</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:52</sys_created_on>
<sys_id>545357b32f15b850d8455aab2799b6b7</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c98e40000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:52</sys_updated_on>
<table/>
<target_name>CI - Get Scope Details</target_name>
<type>Scripted REST Resource</type>
<update_domain>global</update_domain>
<update_guid>449200e8617773001e30e77ef6563478</update_guid>
<update_guid_history>9a7a7bd07a777300da2deade4d6f17ff:-1986267553,9a7a7bd07a777300da2deade4d6f17ff:-1986267553,9a7a7bd07a777300da2deade4d6f17ff:-1986267553,2882ef56a41667c09232899f437e1273:948958524,2882ef56a41667c09232899f437e1273:948958524</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_ws_operation_f6af13ebdb2fd300dfa9b94ffe9619b3</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_ws_operation"&gt;&lt;sys_ws_operation action="INSERT_OR_UPDATE"&gt;&lt;active&gt;true&lt;/active&gt;&lt;consumes&gt;application/json,application/xml,text/xml&lt;/consumes&gt;&lt;consumes_customized&gt;false&lt;/consumes_customized&gt;&lt;default_operation_uri&gt;/api/devops/cicd/deploy&lt;/default_operation_uri&gt;&lt;enforce_acl&gt;2ae86fe7db6fd300dfa9b94ffe9619bc&lt;/enforce_acl&gt;&lt;http_method&gt;POST&lt;/http_method&gt;&lt;name&gt;CD - Deploy UpdateSet to target&lt;/name&gt;&lt;operation_script&gt;&lt;![CDATA[(function process(/*RESTAPIRequest*/ request, /*RESTAPIResponse*/ response) {

    return new CiCdDeploy(request, response).deployUpdateSet();

})(request, response);]]&gt;&lt;/operation_script&gt;&lt;operation_uri&gt;/api/devops/v1/cicd/deploy&lt;/operation_uri&gt;&lt;produces&gt;application/json,application/xml,text/xml&lt;/produces&gt;&lt;produces_customized&gt;false&lt;/produces_customized&gt;&lt;relative_path&gt;/deploy&lt;/relative_path&gt;&lt;request_example/&gt;&lt;requires_acl_authorization&gt;true&lt;/requires_acl_authorization&gt;&lt;requires_authentication&gt;true&lt;/requires_authentication&gt;&lt;requires_snc_internal_role&gt;true&lt;/requires_snc_internal_role&gt;&lt;short_description/&gt;&lt;sys_class_name&gt;sys_ws_operation&lt;/sys_class_name&gt;&lt;sys_created_by&gt;b.moers&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2018-08-02 11:21:45&lt;/sys_created_on&gt;&lt;sys_id&gt;f6af13ebdb2fd300dfa9b94ffe9619b3&lt;/sys_id&gt;&lt;sys_mod_count&gt;7&lt;/sys_mod_count&gt;&lt;sys_name&gt;CD - Deploy UpdateSet to target&lt;/sys_name&gt;&lt;sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e"&gt;19190fabdbebd300dfa9b94ffe96193e&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="CICD Integration"&gt;19190fabdbebd300dfa9b94ffe96193e&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_ws_operation_f6af13ebdb2fd300dfa9b94ffe9619b3&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;b.moers&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2018-11-08 05:35:58&lt;/sys_updated_on&gt;&lt;web_service_definition display_value="CICD Integration"&gt;81eccb6fdbebd300dfa9b94ffe96190e&lt;/web_service_definition&gt;&lt;web_service_version display_value="v1"&gt;0a3dcb2fdbebd300dfa9b94ffe9619c7&lt;/web_service_version&gt;&lt;/sys_ws_operation&gt;&lt;/record_update&gt;</payload>
<payload_hash>293734253</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:52</sys_created_on>
<sys_id>545357b32f15b850d8455aab2799b6ba</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c96980000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:52</sys_updated_on>
<table/>
<target_name>CD - Deploy UpdateSet to target</target_name>
<type>Scripted REST Resource</type>
<update_domain>global</update_domain>
<update_guid>449200e849777300aed5637b1a8bea92</update_guid>
<update_guid_history>127abbd001777300edace9f4f77ead18:293734253,127abbd001777300edace9f4f77ead18:293734253,127abbd001777300edace9f4f77ead18:293734253,5c9c364f38652b0066f2ddd2a03b69a7:483246786,5c9c364f38652b0066f2ddd2a03b69a7:483246786,b36692d264f75f00043133ee860d0578:1202004368,1056525261f75f0086f95c249de948e3:-1670159462,99d552d2ecf75f00dd92670ab5e0f7b9:1202004368,f335da12d8f75f005fe6aac49d42e545:1780245857,8499672bbb6fd300373f5aa6ca9c8bfe:483246786,b390e72fbc2fd300cc6a4eefd692ba59:1268358817,75ef5f6fb92fd3004f45665fb52e2b6c:-1125499961</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_ws_query_parameter_map_595daaf1dbffdb0076d6b94ffe961926</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ws_query_parameter_map"><sys_ws_query_parameter_map action="INSERT_OR_UPDATE"><sys_class_name>sys_ws_query_parameter_map</sys_class_name><sys_created_by>b.moers</sys_created_by><sys_created_on>2018-08-09 07:27:14</sys_created_on><sys_id>595daaf1dbffdb0076d6b94ffe961926</sys_id><sys_mod_count>0</sys_mod_count><sys_name>8d736e29dbb3db0076d6b94ffe961989</sys_name><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_update_name>sys_ws_query_parameter_map_595daaf1dbffdb0076d6b94ffe961926</sys_update_name><sys_updated_by>b.moers</sys_updated_by><sys_updated_on>2018-08-09 07:27:14</sys_updated_on><web_service_operation display_value="CI - Get Files from Table">f3cca2b1dbffdb0076d6b94ffe96191e</web_service_operation><web_service_query_parameter display_value="sysparm_display_value">8d736e29dbb3db0076d6b94ffe961989</web_service_query_parameter></sys_ws_query_parameter_map></record_update>]]></payload>
<payload_hash>600227481</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:52</sys_created_on>
<sys_id>545357b32f15b850d8455aab2799b6bd</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c948a0000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:52</sys_updated_on>
<table/>
<target_name>8d736e29dbb3db0076d6b94ffe961989</target_name>
<type>Scripted REST Query Parameter Associatio</type>
<update_domain>global</update_domain>
<update_guid>889200e80577730010f91f18de4eb5a9</update_guid>
<update_guid_history>aa7abbd0b8777300b34f69f5c2570053:600227481,aa7abbd0b8777300b34f69f5c2570053:600227481,aa7abbd0b8777300b34f69f5c2570053:600227481,a9ea9b3b8657a7807ec0d7c5e3ddb3f5:1072202913,4b5d66f11cffdb00135ba4ab8bb2a2dc:916659993</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_ws_operation_09d498f9db87af00ee93b14ffe9619f9</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_ws_operation"&gt;&lt;sys_ws_operation action="INSERT_OR_UPDATE"&gt;&lt;active&gt;true&lt;/active&gt;&lt;consumes&gt;application/json,application/xml,text/xml&lt;/consumes&gt;&lt;consumes_customized&gt;false&lt;/consumes_customized&gt;&lt;default_operation_uri&gt;/api/devops/cicd/source/{page}&lt;/default_operation_uri&gt;&lt;enforce_acl&gt;2ae86fe7db6fd300dfa9b94ffe9619bc&lt;/enforce_acl&gt;&lt;http_method&gt;GET&lt;/http_method&gt;&lt;name&gt;CD - Update Set Source [hub.do]&lt;/name&gt;&lt;operation_script&gt;&lt;![CDATA[(function process(/*RESTAPIRequest*/ request, /*RESTAPIResponse*/ response) {
	
	return new CiCdSource().getHubStatus(request, response);
	
})(request, response);]]&gt;&lt;/operation_script&gt;&lt;operation_uri&gt;/api/devops/v1/cicd/source/{page}&lt;/operation_uri&gt;&lt;produces&gt;application/json,application/xml,text/xml&lt;/produces&gt;&lt;produces_customized&gt;false&lt;/produces_customized&gt;&lt;relative_path&gt;/source/{page}&lt;/relative_path&gt;&lt;request_example/&gt;&lt;requires_acl_authorization&gt;true&lt;/requires_acl_authorization&gt;&lt;requires_authentication&gt;true&lt;/requires_authentication&gt;&lt;requires_snc_internal_role&gt;false&lt;/requires_snc_internal_role&gt;&lt;short_description/&gt;&lt;sys_class_name&gt;sys_ws_operation&lt;/sys_class_name&gt;&lt;sys_created_by&gt;b.moers&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2019-01-17 09:45:37&lt;/sys_created_on&gt;&lt;sys_id&gt;09d498f9db87af00ee93b14ffe9619f9&lt;/sys_id&gt;&lt;sys_mod_count&gt;24&lt;/sys_mod_count&gt;&lt;sys_name&gt;CD - Update Set Source [hub.do]&lt;/sys_name&gt;&lt;sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e"&gt;19190fabdbebd300dfa9b94ffe96193e&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="CICD Integration"&gt;19190fabdbebd300dfa9b94ffe96193e&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_ws_operation_09d498f9db87af00ee93b14ffe9619f9&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;b.moers&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2019-02-28 14:23:16&lt;/sys_updated_on&gt;&lt;web_service_definition display_value="CICD Integration"&gt;81eccb6fdbebd300dfa9b94ffe96190e&lt;/web_service_definition&gt;&lt;web_service_version display_value="v1"&gt;0a3dcb2fdbebd300dfa9b94ffe9619c7&lt;/web_service_version&gt;&lt;/sys_ws_operation&gt;&lt;/record_update&gt;</payload>
<payload_hash>-592403134</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:52</sys_created_on>
<sys_id>585357b32f15b850d8455aab2799b6b6</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c9c260000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:52</sys_updated_on>
<table/>
<target_name>CD - Update Set Source [hub.do]</target_name>
<type>Scripted REST Resource</type>
<update_domain>global</update_domain>
<update_guid>809200e88a7773002414dcd0aadc8f72</update_guid>
<update_guid_history>927a7bd05a77730039ead7c4449141f9:-592403134,927a7bd05a77730039ead7c4449141f9:-592403134,927a7bd05a77730039ead7c4449141f9:-592403134,5057a1d74a73ab40acec6dbfb9f60be0:715069524,5057a1d74a73ab40acec6dbfb9f60be0:715069524,43b2d3331f57a7802331f31a4e36c6fd:-60190730,bd15b84e6dd32380528d7bc16d36cafb:875383286,4a05b84e0bd3238002778d2b96f1be7f:-1547336448,171644ff88cf2740eff0abb3dc220fe4:-522263040,149540b32683674018b35fa585c9b40c:-59772262,c53de9f520cbaf0077b371708efd55d1:1675175978,07690139b64baf003381d41dd5b1ad05:-1636411609,64694d79364baf00157e92e4a8bbe655:1633226215,85098539114baf004c8f5bcccdcdbdcd:-820276016,2df845792c4baf00c07633c0e141d22b:900166544,b7d801392b4baf009b9735622a76f31b:262682009,15e7cdf5524baf002dcb3ef79c85bdfe:900166544,d1d205b1b54baf0060f860459c692294:-1636411609,1db245b1d44baf00c7c166eeb4eec20f:1193302841,6ea10d71534baf005e998b9f5a7b5bce:32327177,fc8181b1794baf009f5919a66393a7b4:-1608342953,ef27503d5c87af00eb67523bbf7c7858:-910635189,ae17d4f91f87af00d5fe298b74447a96:1683276052,f7f6943ddb87af00919e62b9f045db1d:-1406111351,b9a5943dc187af0040b27efef4eeaf15:-1037654858,1d551cf96387af00320c9971140bdaf6:-1547110018,7e259cf9d287af00883aa23959a9912e:-1295025054,182518f93887af00327fd33c8ffd3fa4:-1249294206,fbf41cf91787af001a3e45cb9db59bf2:-542143797</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_ws_operation_d66077b2db12c010fcf41780399619eb</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_ws_operation"&gt;&lt;sys_ws_operation action="INSERT_OR_UPDATE"&gt;&lt;active&gt;true&lt;/active&gt;&lt;consumes&gt;application/json,application/xml,text/xml&lt;/consumes&gt;&lt;consumes_customized&gt;false&lt;/consumes_customized&gt;&lt;default_operation_uri&gt;/api/devops/cicd/source/{page}&lt;/default_operation_uri&gt;&lt;enforce_acl&gt;2ae86fe7db6fd300dfa9b94ffe9619bc&lt;/enforce_acl&gt;&lt;http_method&gt;POST&lt;/http_method&gt;&lt;name&gt;CD - Update Set Source [hub.do]&lt;/name&gt;&lt;operation_script&gt;&lt;![CDATA[(function process(/*RESTAPIRequest*/ request, /*RESTAPIResponse*/ response) {
	
	return new CiCdSource().restPostWrapper(request, response);
	
})(request, response);]]&gt;&lt;/operation_script&gt;&lt;operation_uri&gt;/api/devops/v1/cicd/source/{page}&lt;/operation_uri&gt;&lt;produces&gt;application/json,application/xml,text/xml&lt;/produces&gt;&lt;produces_customized&gt;false&lt;/produces_customized&gt;&lt;relative_path&gt;/source/{page}&lt;/relative_path&gt;&lt;request_example/&gt;&lt;requires_acl_authorization&gt;true&lt;/requires_acl_authorization&gt;&lt;requires_authentication&gt;true&lt;/requires_authentication&gt;&lt;requires_snc_internal_role&gt;false&lt;/requires_snc_internal_role&gt;&lt;short_description/&gt;&lt;sys_class_name&gt;sys_ws_operation&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2020-01-16 13:53:23&lt;/sys_created_on&gt;&lt;sys_id&gt;d66077b2db12c010fcf41780399619eb&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_name&gt;CD - Update Set Source [hub.do]&lt;/sys_name&gt;&lt;sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e"&gt;19190fabdbebd300dfa9b94ffe96193e&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="CICD Integration"&gt;19190fabdbebd300dfa9b94ffe96193e&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_ws_operation_d66077b2db12c010fcf41780399619eb&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2020-01-16 13:53:23&lt;/sys_updated_on&gt;&lt;web_service_definition display_value="CICD Integration"&gt;81eccb6fdbebd300dfa9b94ffe96190e&lt;/web_service_definition&gt;&lt;web_service_version display_value="v1"&gt;0a3dcb2fdbebd300dfa9b94ffe9619c7&lt;/web_service_version&gt;&lt;/sys_ws_operation&gt;&lt;/record_update&gt;</payload>
<payload_hash>1819479696</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:52</sys_created_on>
<sys_id>585357b32f15b850d8455aab2799b6b9</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c9ea00000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:52</sys_updated_on>
<table/>
<target_name>CD - Update Set Source [hub.do]</target_name>
<type>Scripted REST Resource</type>
<update_domain>global</update_domain>
<update_guid>5a6077b2e712c01089e249e4698316ec</update_guid>
<update_guid_history>5a6077b2e712c01089e249e4698316ec:1819479696</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_ws_query_parameter_map_2b1baafddbbfdb0076d6b94ffe9619c9</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ws_query_parameter_map"><sys_ws_query_parameter_map action="INSERT_OR_UPDATE"><sys_class_name>sys_ws_query_parameter_map</sys_class_name><sys_created_by>b.moers</sys_created_by><sys_created_on>2018-08-09 07:17:32</sys_created_on><sys_id>2b1baafddbbfdb0076d6b94ffe9619c9</sys_id><sys_mod_count>0</sys_mod_count><sys_name>a6294a65db73db0076d6b94ffe961937</sys_name><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_update_name>sys_ws_query_parameter_map_2b1baafddbbfdb0076d6b94ffe9619c9</sys_update_name><sys_updated_by>b.moers</sys_updated_by><sys_updated_on>2018-08-09 07:17:32</sys_updated_on><web_service_operation display_value="CI - Get All Test In Suites">7f82aa29dbb3db0076d6b94ffe9619af</web_service_operation><web_service_query_parameter display_value="sysparm_offset">a6294a65db73db0076d6b94ffe961937</web_service_query_parameter></sys_ws_query_parameter_map></record_update>]]></payload>
<payload_hash>1946565007</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:52</sys_created_on>
<sys_id>585357b32f15b850d8455aab2799b6bc</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c93ce0000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:52</sys_updated_on>
<table/>
<target_name>a6294a65db73db0076d6b94ffe961937</target_name>
<type>Scripted REST Query Parameter Associatio</type>
<update_domain>global</update_domain>
<update_guid>009200e86c777300b4c3ebb1a11132a4</update_guid>
<update_guid_history>6a7abbd0197773009d0548167e984b40:1946565007,6a7abbd0197773009d0548167e984b40:1946565007,6a7abbd0197773009d0548167e984b40:1946565007,21ea9b3b5b57a78055429be2e91ed4f1:1812257927,7c2baa7185ffdb0072f5ddb06f763f0b:-1484449953</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_ws_query_parameter_map_dc5b2e71dbffdb0076d6b94ffe96191d</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ws_query_parameter_map"><sys_ws_query_parameter_map action="INSERT_OR_UPDATE"><sys_class_name>sys_ws_query_parameter_map</sys_class_name><sys_created_by>b.moers</sys_created_by><sys_created_on>2018-08-09 07:18:23</sys_created_on><sys_id>dc5b2e71dbffdb0076d6b94ffe96191d</sys_id><sys_mod_count>0</sys_mod_count><sys_name>db836e29dbb3db0076d6b94ffe961976</sys_name><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_update_name>sys_ws_query_parameter_map_dc5b2e71dbffdb0076d6b94ffe96191d</sys_update_name><sys_updated_by>b.moers</sys_updated_by><sys_updated_on>2018-08-09 07:18:23</sys_updated_on><web_service_operation display_value="CI - Get UpdateSet Details">dfe5f9e1db33db0076d6b94ffe96198a</web_service_operation><web_service_query_parameter display_value="sysparm_query_category">db836e29dbb3db0076d6b94ffe961976</web_service_query_parameter></sys_ws_query_parameter_map></record_update>]]></payload>
<payload_hash>-1874320263</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:52</sys_created_on>
<sys_id>585357b32f15b850d8455aab2799b6bf</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c94010000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:52</sys_updated_on>
<table/>
<target_name>db836e29dbb3db0076d6b94ffe961976</target_name>
<type>Scripted REST Query Parameter Associatio</type>
<update_domain>global</update_domain>
<update_guid>4c9200e83877730055d0a8c68f2117c6</update_guid>
<update_guid_history>a67abbd06c777300d66f534226636a67:-1874320263,a67abbd06c777300d66f534226636a67:-1874320263,a67abbd06c777300d66f534226636a67:-1874320263,2deadb3ba357a780bb28e9d480450102:1839862209,515b2a31caffdb009b5b5cd9d15b56e0:1392012665</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_ws_operation_8bb25eaddb0dab80432cfc600f961931</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_ws_operation"&gt;&lt;sys_ws_operation action="INSERT_OR_UPDATE"&gt;&lt;active&gt;true&lt;/active&gt;&lt;consumes&gt;application/json,application/xml,text/xml&lt;/consumes&gt;&lt;consumes_customized&gt;false&lt;/consumes_customized&gt;&lt;default_operation_uri&gt;/api/devops/cicd/export_updateset/{updateSetSysId}&lt;/default_operation_uri&gt;&lt;enforce_acl&gt;1a7833bddbb31f0076d6b94ffe961994&lt;/enforce_acl&gt;&lt;http_method&gt;GET&lt;/http_method&gt;&lt;name&gt;CI - Export UpdateSet XML&lt;/name&gt;&lt;operation_script&gt;&lt;![CDATA[(function process(/*RESTAPIRequest*/ request, /*RESTAPIResponse*/ response) {
	
	return new CiCdApi(request, response).exportUpdateSet(request.pathParams.updateSetSysId);
	
})(request, response);]]&gt;&lt;/operation_script&gt;&lt;operation_uri&gt;/api/devops/v1/cicd/export_updateset/{updateSetSysId}&lt;/operation_uri&gt;&lt;produces&gt;application/json,application/xml,text/xml&lt;/produces&gt;&lt;produces_customized&gt;false&lt;/produces_customized&gt;&lt;relative_path&gt;/export_updateset/{updateSetSysId}&lt;/relative_path&gt;&lt;request_example/&gt;&lt;requires_acl_authorization&gt;true&lt;/requires_acl_authorization&gt;&lt;requires_authentication&gt;true&lt;/requires_authentication&gt;&lt;requires_snc_internal_role&gt;true&lt;/requires_snc_internal_role&gt;&lt;short_description&gt;Get all XML records of an UpdateSet&lt;/short_description&gt;&lt;sys_class_name&gt;sys_ws_operation&lt;/sys_class_name&gt;&lt;sys_created_by&gt;b.moers&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2018-10-09 14:10:55&lt;/sys_created_on&gt;&lt;sys_id&gt;8bb25eaddb0dab80432cfc600f961931&lt;/sys_id&gt;&lt;sys_mod_count&gt;10&lt;/sys_mod_count&gt;&lt;sys_name&gt;CI - Export UpdateSet XML&lt;/sys_name&gt;&lt;sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e"&gt;19190fabdbebd300dfa9b94ffe96193e&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="CICD Integration"&gt;19190fabdbebd300dfa9b94ffe96193e&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_ws_operation_8bb25eaddb0dab80432cfc600f961931&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;b.moers&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2019-01-29 11:05:03&lt;/sys_updated_on&gt;&lt;web_service_definition display_value="CICD Integration"&gt;81eccb6fdbebd300dfa9b94ffe96190e&lt;/web_service_definition&gt;&lt;web_service_version display_value="v1"&gt;0a3dcb2fdbebd300dfa9b94ffe9619c7&lt;/web_service_version&gt;&lt;/sys_ws_operation&gt;&lt;/record_update&gt;</payload>
<payload_hash>-1638530559</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:52</sys_created_on>
<sys_id>5c5357b32f15b850d8455aab2799b6b8</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c9ad80000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:52</sys_updated_on>
<table/>
<target_name>CI - Export UpdateSet XML</target_name>
<type>Scripted REST Resource</type>
<update_domain>global</update_domain>
<update_guid>049200e89f777300056999dd303b7585</update_guid>
<update_guid_history>9a7abbd06b7773006bfcb2aa05eee40c:-1638530559,9a7abbd06b7773006bfcb2aa05eee40c:-1638530559,9a7abbd06b7773006bfcb2aa05eee40c:-1638530559,d44ad22decdbaf40cf7c137f8ee8a619:1154178780,d44ad22decdbaf40cf7c137f8ee8a619:1154178780,c56142a57c9baf40e0ccd86c2c3214fc:-1436146039,754106a54a9baf40eb1f9d8be574f1a7:-1486729047,7f704625a49baf4054f907b709447cf2:1728286121,b8408a659d9baf4084b1db56f8f6ce88:894321638,252e75a1129baf40328ce037ecf205ba:2108079403,110ef161f19baf404b4491233b2c2c7d:-1107326962,c3bcfd21af9baf40bc4029487012f903:154570653,80caf561dd9baf40ab9b160c34c7466e:-443115239,148af1ed945baf40d29a651ab6f6dab7:-1596083239,8fb25eadb50dab8055dff1fe44e34f32:629038397</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_ws_query_parameter_map_146946a5db73db0076d6b94ffe961962</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ws_query_parameter_map"><sys_ws_query_parameter_map action="INSERT_OR_UPDATE"><sys_class_name>sys_ws_query_parameter_map</sys_class_name><sys_created_by>b.moers</sys_created_by><sys_created_on>2018-08-08 10:11:39</sys_created_on><sys_id>146946a5db73db0076d6b94ffe961962</sys_id><sys_mod_count>0</sys_mod_count><sys_name>a6294a65db73db0076d6b94ffe961937</sys_name><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_update_name>sys_ws_query_parameter_map_146946a5db73db0076d6b94ffe961962</sys_update_name><sys_updated_by>b.moers</sys_updated_by><sys_updated_on>2018-08-08 10:11:39</sys_updated_on><web_service_operation display_value="CI - Get UpdateSet Files">4f6a31a9db33db0076d6b94ffe9619fa</web_service_operation><web_service_query_parameter display_value="sysparm_offset">a6294a65db73db0076d6b94ffe961937</web_service_query_parameter></sys_ws_query_parameter_map></record_update>]]></payload>
<payload_hash>-347623616</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:52</sys_created_on>
<sys_id>5c5357b32f15b850d8455aab2799b6bb</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c926c0000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:52</sys_updated_on>
<table/>
<target_name>a6294a65db73db0076d6b94ffe961937</target_name>
<type>Scripted REST Query Parameter Associatio</type>
<update_domain>global</update_domain>
<update_guid>049200e8ae777300a39e31891a8f739e</update_guid>
<update_guid_history>6e7abbd0f4777300857b39c833af1939:-347623616,6e7abbd0f4777300857b39c833af1939:-347623616,6e7abbd0f4777300857b39c833af1939:-347623616,adea9b3b3e57a7801f8baad118859aec:1831645000,65694aa5e473db0037cfc42bd6b61064:458892144</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_ws_query_parameter_map_b182675adb1667c076d6b94ffe9619a1</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ws_query_parameter_map"><sys_ws_query_parameter_map action="INSERT_OR_UPDATE"><sys_class_name>sys_ws_query_parameter_map</sys_class_name><sys_created_by>b.moers</sys_created_by><sys_created_on>2018-12-13 07:13:42</sys_created_on><sys_id>b182675adb1667c076d6b94ffe9619a1</sys_id><sys_mod_count>0</sys_mod_count><sys_name>8d736e29dbb3db0076d6b94ffe961989</sys_name><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_update_name>sys_ws_query_parameter_map_b182675adb1667c076d6b94ffe9619a1</sys_update_name><sys_updated_by>b.moers</sys_updated_by><sys_updated_on>2018-12-13 07:13:42</sys_updated_on><web_service_operation display_value="CI - Get Scope Details">2082ef56db1667c076d6b94ffe961972</web_service_operation><web_service_query_parameter display_value="sysparm_display_value">8d736e29dbb3db0076d6b94ffe961989</web_service_query_parameter></sys_ws_query_parameter_map></record_update>]]></payload>
<payload_hash>-728053147</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:52</sys_created_on>
<sys_id>5c5357b32f15b850d8455aab2799b6be</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c99060000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:52</sys_updated_on>
<table/>
<target_name>8d736e29dbb3db0076d6b94ffe961989</target_name>
<type>Scripted REST Query Parameter Associatio</type>
<update_domain>global</update_domain>
<update_guid>8c9200e8b6777300e7f7f0f0b1bca5b4</update_guid>
<update_guid_history>ae7abbd06e777300bbc67bc61b2e6160:-728053147,ae7abbd06e777300bbc67bc61b2e6160:-728053147,ae7abbd06e777300bbc67bc61b2e6160:-728053147,9592a75acf1667c006bba9de7b861d3d:731251037</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_properties_d9ecc622dbe1a700323efc600f961901</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_properties"><sys_properties action="INSERT_OR_UPDATE"><choices/><description>&lt;b&gt;CICD Integration enabled.&lt;/b&gt;&lt;br&gt;&#13;
&lt;small&gt;CICD process master switch.&lt;/small&gt;</description><ignore_cache>false</ignore_cache><is_private>false</is_private><name>cicd-integration.enabled</name><read_roles/><suffix/><sys_class_name>sys_properties</sys_class_name><sys_created_by>b.moers</sys_created_by><sys_created_on>2018-11-06 12:50:43</sys_created_on><sys_id>d9ecc622dbe1a700323efc600f961901</sys_id><sys_mod_count>31</sys_mod_count><sys_name>cicd-integration.enabled</sys_name><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_update_name>sys_properties_d9ecc622dbe1a700323efc600f961901</sys_update_name><sys_updated_by>admin</sys_updated_by><sys_updated_on>2021-06-09 15:53:07</sys_updated_on><type>boolean</type><value>false</value><write_roles/></sys_properties><sys_translated_text action="delete_multiple" query="documentkey=d9ecc622dbe1a700323efc600f961901"/></record_update>]]></payload>
<payload_hash>-353741295</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:51</sys_created_on>
<sys_id>805357b32f15b850d8455aab2799b6aa</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2ca3420000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:51</sys_updated_on>
<table/>
<target_name>cicd-integration.enabled</target_name>
<type>System Property</type>
<update_domain>global</update_domain>
<update_guid>b8a6a68f5e207810092c1e912bdeb2c2</update_guid>
<update_guid_history>b8a6a68f5e207810092c1e912bdeb2c2:-353741295,b331516e0624f41020815bce3711ac74:-658324194,6c414dc79c12285427a2ead276edbe40:-353741295,08cee9ffea5ca0104925a3b1938eb49b:-353741295,08cee9ffea5ca0104925a3b1938eb49b:-353741295,3c5aad7f205ca0106e06c250401f9b03:-353741295,3c5aad7f205ca0106e06c250401f9b03:-353741295,0628091d5fcf9410aca7e8a5c08635af:-353741295,0628091d5fcf9410aca7e8a5c08635af:-353741295,b5400dd59dcf94102055e5713c1c03b1:-658324194,99f1f05df78f941072acdb06388f85ed:-353741295,2fb6204160c79410809155f597b6d511:-658324194,dd2dfa74ae439410c7ee8898ec1b14ac:-353741295,fe7ce15474035410656038b05d4e879a:-658324194,fe7be0d0bd8f1410dedf37c24b2ff340:-353741295,7a0c2253e476d0107e4fe5e9b6670ac9:-658324194,b7eb6e136d76d01086cb68a9d4206c1e:-353741295,362a2adff136d0100bf5334ad3a06324:-658324194,11ffb5df17b2d010aaed0927256c0b45:-353741295,906d3d1f7bb2d010dc718372e932133b:-658324194,ad142d1f6772d010c3908ea7eeabd3da:-353741295,a773e11f0d72d010c1da118f738d9215:-658324194,daa6e20c15365490f4e06e585c418812:-353741295,a5c11d4cae99545045bfeab3467049dd:-658324194,694adeed368810500569e06c61d1f4d3:-353741295,f44a221562e3001026ac0fca5e1192f9:-658324194,69f06742880c4050deff5f5d5c48a1cd:-353741295,66f6dbeeb7b3f7c0ab2424bc01e9f030:400204041,0619a56075804c10ef49ddd62ee1bc0a:-353741295,66f6dbeeb7b3f7c0ab2424bc01e9f030:400204041,ad63d0a837b77300c46a4f6fe9c2481a:-353741295,395350a8eeb77300072da902cdbe00c9:-658324194,e44a7bb4682bfb0461aa7d96886d8005:-353741295,0fb0dc4d0d9b330420be1dbb6b5b5d28:-658324194,d094e247c33df300e053af3a9aabf3cb:-353741295,d6742a079e3df3001398500c1f35c865:-658324194,91a0a98354bcb340ff3a10d906e9124f:-353741295,68a8476659a4b700b485620ae0e6d430:-658324194,adea032eb57be740870c8d590bb7151d:400204041,eaba1efad3daa7c066b899dd36548bec:-825671755,61cbadf66b1aa7c05aee808ade0c51e3:-1937715490,47bb2db2cb5aa7c0e8aa5ff1cfa64e58:1778083313,e987d62786a56b00f795d5ffc24580b6:-1937715490,da5d8e2690e1a700f074fc02c15c525b:-691945290,fe3d42269ae1a7003ce310ae3054e2fd:-563853579,79ecc622c0e1a70033e8af8962593f06:1845269461</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_script_include_79e4545fdbbb134076d6b94ffe9619bf</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;&lt;sys_script_include action="INSERT_OR_UPDATE"&gt;&lt;access&gt;public&lt;/access&gt;&lt;active&gt;true&lt;/active&gt;&lt;api_name&gt;global.CiCdDeploy&lt;/api_name&gt;&lt;caller_access/&gt;&lt;client_callable&gt;false&lt;/client_callable&gt;&lt;description/&gt;&lt;name&gt;CiCdDeploy&lt;/name&gt;&lt;script&gt;&lt;![CDATA[/* exported CiCdDeploy */

/**
 * CD API to request target instance to pull update set
 * 
 * @class 
 * @author Boris Moers
 * @requires sn_ws.module:sys_script_include.RESTMessageV2
 * @requires sn_ws_err.module:sys_script_include.BadRequestError
 * @requires global.module:sys_script_include.UpdateSetPreviewAjax
 * @requires global.module:sys_script_include.HierarchyUpdateSetPreviewAjax
 * @requires global.module:sys_script_include.UpdateSetCommitAjax
 * @requires global.module:sys_script_include.SNC#HierarchyUpdateSetScriptable
 * @requires sn_ws_err.module:sys_script_include.ServiceError
 * @memberof global.module:sys_script_include
 */
var CiCdDeploy = Class.create();

CiCdDeploy.prototype = /** @lends global.module:sys_script_include.CiCdDeploy.prototype */ {
 
    REQUIRES_REVIEW: 'conflict_review',//'Do Not Commit',
 
    /**
      * Polyfills for Object.assign
      * 
      * @param {any} target
      * @returns {any} to
      */
    assign: function (target) {
        if (target === null) { // TypeError if undefined or null
            throw new TypeError('Cannot convert undefined or null to object');
        }
        var to = Object(target);
 
        for (var index = 1; index &lt; arguments.length; index++) {
            var nextSource = arguments[index];
 
            if (nextSource !== null) { // Skip over if undefined or null
                for (var nextKey in nextSource) {
                    // Avoid bugs when hasOwnProperty is shadowed
                    if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {
                        to[nextKey] = nextSource[nextKey];
                    }
                }
            }
        }
        return to;
    },
 
    /**
      * Constructor
      * 
      * @param {any} request
      * @param {any} response
      * @returns {undefined}
      */
    initialize: function (request, response) {
        var self = this;
 
        self.request = request;
        self.response = response;
 
        self.body = null;
        try {
            // support for POST request
            var requestBody = request.body;
            if (requestBody &amp;&amp; requestBody.hasNext()) {
                var body = requestBody.nextEntry();
                if (body) {
                    self.body = body;
                }
            }
        } catch (ignore) {
            // ignore
        }
 
        self.console = {
            /**
              * Description
              * 
              * @returns {undefined}
              */
            log: function () {
                if (arguments.length) arguments[0] = '[' + self.type + '] ' + arguments[0];
                gs.info.apply(null, arguments);
            },
            /**
              * Description
              * 
              * @returns {undefined}
              */
            warn: function () {
                if (arguments.length) arguments[0] = '[' + self.type + '] ' + arguments[0];
                gs.warn.apply(null, arguments);
            },
            /**
              * Description
              * 
              * @returns {undefined}
              */
            error: function () {
                if (arguments.length) arguments[0] = '[' + self.type + '] ' + arguments[0];
                gs.error.apply(null, arguments);
            },
            /**
              * Description
              * 
              * @returns {undefined}
              */
            debug: function () {
                if (arguments.length) arguments[0] = '[' + self.type + '] ' + arguments[0];
                gs.debug.apply(null, arguments);
            },
        };
    },
 
    /**
      * Get param from URL path
      * 
      * @param {any} paramName
      * @param {any} defaultValue
      * @returns {ConditionalExpression}
      */
    getPathParam: function (paramName, defaultValue) {
        var self = this;
 
        return (paramName in self.request.pathParams) ? self.request.pathParams[paramName] : defaultValue;
    },
 
    /**
      * Get param form URL query argument
      * 
      * @param {any} paramName
      * @param {any} defaultValue
      * @returns {any}
      */
    getQueryParam: function (paramName, defaultValue) {
        var self = this;
 
        var out = (paramName in self.request.queryParams) ? (function () {
            var value = self.request.queryParams[paramName];
            if (Array.isArray(value)) {
                return (value.length === 1) ? value[0] : value;
            } else {
                return value;
            }
        })() : defaultValue;
        var outL = out.toLowerCase();
        if (out === undefined)
            return out;
 
        if (!isNaN(out))
            return parseInt(out, 10);
        if ('null' == outL)
            return null;
        if ('true' == outL)
            return true;
        if ('false' == outL)
            return false;
 
        return out;
    },
 
    /**
      * Get base uri from current request uri
      * 
      * @returns {ConditionalExpression}
      */
    getBaseURI: function () {
        var self = this;
        // get base uri out of '/api/devops/v101/cicd/pull' or '/api/devops/cicd/pull'
        var tmp = self.request.uri.replace(/(\/+)/g, '/').split('/');
        tmp = tmp.slice(0, ((/^v\d+$/m).test(tmp[3]) ? 5 : 4)).join('/');
        return tmp.startsWith('/') ? tmp : '/'.concat(tmp);
    },
 
 
    /**
      * Description
      * 
      * @param {any} updateSetSysId
      * @returns {any}
      */
    _cloneUpdateSet: function (updateSetSysId) {
        var self = this;
        /**
          * Description
          * 
          * @param {any} sysId
          * @param {any} parentSysId
          * @param {any} batchBaseSysId
          * @returns {undefined}
          */
        var cloneUpdateSet = function (sysId, parentSysId, batchBaseSysId) {
            var us = new GlideRecord('sys_update_set');
            if (us.get(sysId)) {
                self.console.log('cloning update set {0} with parent {1}', sysId, parentSysId);
 
                us.setValue('name', '[CICD PREFLIGHT] - '.concat(us.getValue('name')));
                us.setValue('description', 'This is the preflight copy of the update set \''.concat(sysId, '\' from \'', gs.getProperty('instance_name'), '\'.\nPlease do not deploy this update set.'));
 
                if (parentSysId)
                    us.setValue('parent', parentSysId);
 
                if (batchBaseSysId)
                    us.setValue('base_update_set', batchBaseSysId);
 
                var copySysId = us.insert();
 
                var isBatchBase = (sysId == us.getValue('base_update_set')); // the current update set is the base and must point to itself.
                if (isBatchBase) {
                    us.setValue('base_update_set', copySysId);
                    us.update();
                    batchBaseSysId = copySysId;
                }
                self.console('Cloned update set {0}', copySysId);
 
                // clone all XML records
                var usXml = new GlideRecord('sys_update_xml');
                usXml.addQuery('update_set', sysId);
                usXml.query();
                while (usXml._next()) {
                    usXml.setValue('update_set', copySysId);
                    usXml.insert();
                }
 
                // copy all dependent update sets
                var bus = new GlideRecord('sys_update_set');
                bus.addQuery('sys_id', '!=', sysId);
                bus.addQuery('parent', sysId);
                bus._query();
                while (bus._next()) {
                    cloneUpdateSet(bus.getValue('sys_id'), copySysId, batchBaseSysId);
                }
                return copySysId;
            }
        };
 
        return cloneUpdateSet(updateSetSysId);
    },
 
    /**
      * Description
      * 
      * @param {any} updateSetSysId
      * @returns {boolean}
      */
    _deleteClone: function (updateSetSysId) {
        var self = this;
 
        /**
          * Description
          * 
          * @param {any} parentSysID
          * @returns {undefined}
          */
        var deleteDependentUpdateSet = function (parentSysID) {
            var bus = new GlideRecord('sys_update_set');
            bus.addQuery('name', 'STARTSWITH', '[CICD PREFLIGHT]');
            bus.addQuery('parent', parentSysID);
            bus.query();
            while (bus._next()) {
                deleteDependentUpdateSet(bus.getValue('sys_id'));
                self.console.log('Deleting update set ' + bus.getValue('sys_id'));
                bus.deleteRecord();
            }
 
        };
 
        var us = new GlideRecord('sys_update_set');
        us.addQuery('name', 'STARTSWITH', '[CICD PREFLIGHT]');
        us.addQuery('sys_id', updateSetSysId);
        us.setLimit(1);
        us.query();
        if (us._next()) {
            deleteDependentUpdateSet(us.getValue('sys_id'));
            self.console.log('Deleting update set ' + us.getValue('sys_id'));
            return us.deleteRecord();
        }
 
        return false;
    },
 
 
    /**
      * Source API. &lt;br&gt;This is the entry point to trigger a deployment on a target env.
      * takes updateSetSysId and targetEnvironment from payload body. &lt;p&gt;
      * It:
      * &lt;ul&gt;
      * &lt;li&gt;can create a local admin user with a random password&lt;/li&gt;
      * &lt;li&gt;sends a pull request for the update-set to the target containing
      * &lt;ul&gt;&lt;li&gt;User Credentials (encrypted)&lt;/li&gt;&lt;li&gt;Update Set ID&lt;/li&gt;&lt;li&gt;Source environment&lt;/li&gt;
      * &lt;/li&gt;
      * &lt;li&gt;waits for the target instance to pull and check the update-set&lt;/li&gt;
      * &lt;li&gt;returns the update-set status on the target env&lt;/li&gt;
      * &lt;/ul&gt;
      * &lt;/p&gt;
      * 
      * This is mapped to POST: /api/devops/v1/cicd/deploy
      * 
      * @returns {undefined}
      */
    deployUpdateSet: function () {
        var self = this;
        var userSysId,
            roleSysId, updateSetSysId, commitId, sourceEnvironment, targetEnvironment, limitSet = [],
            sourceUserName, sourcePassword,
            targetUserName, targetPassword,
            autoCreateCdUser,
            gitDeployment, sourceUrl, collisionDetect;
 
        /*
             {
                 "updateSetSysId": "xxxxxxxxxxxxxxxxxxxxxxxx",
                 "commitId": "xxxxxxxxxxxxxxxxxxxxxxx",
                 "deploy" : true/false
                 "collisionDetect" : true/false
                 "targetEnvironment": {
                     "host": "https://targethost.service-now.com",
                     "username": "",
                     "password": ""
                 },
                 "sourceEnvironment": {
                     "username": "",
                     "password": ""
                 },
                 "conflicts": {
                     "resolutions": {},
                     "defaults" : {}
                 }
             }
         */
 
        try {
 
            if (GlidePluginManager.isUpgradeSystemBusy()) {
                self.console.error('[pullUpdateSet] Environment is upgrading');
                throw Error('pullUpdateSet: Environment is upgrading');
            }
 
            if (!self.body) {
                self.console.error('no request payload found');
                throw Error('deployUpdateSet: no request payload found');
            }
            if (gs.nil(self.body.commitId || self.body.updateSetSysId) || gs.nil(self.body.targetEnvironment) || gs.nil(self.body.targetEnvironment.host)) {
                throw Error('updateSetSysId/commitId and targetEnvironment are mandatory');
            }
 
            collisionDetect = Boolean(self.body.collisionDetect);
            commitId = gs.nil(self.body.commitId) ? null : self.body.commitId;
            updateSetSysId = self.body.updateSetSysId; // request.updateSetId
            sourceEnvironment = gs.getProperty('glide.servlet.uri').toLowerCase().replace(/\/$/, ''); // the current instance
            gitDeployment = (!collisionDetect &amp;&amp; !gs.nil(commitId)); // collisionDetect can not be done via gitDeployment
 
            sourceUrl = gitDeployment ? sourceEnvironment.concat(self.getBaseURI(), '/source/') : sourceEnvironment;
 
            targetEnvironment = self.body.targetEnvironment.host.toLowerCase().replace(/\/$/, '');
            targetUserName = self.body.targetEnvironment.username;
            targetPassword = self.body.targetEnvironment.password;
 
            if (self.body.sourceEnvironment) {
                sourceUserName = self.body.sourceEnvironment.username;
                sourcePassword = self.body.sourceEnvironment.password;
            }
 
            autoCreateCdUser = ('true' == gs.getProperty('cicd-integration.auto-create-cd-user', 'false'));
 
            var targetMatch = targetEnvironment.match(/(?:http[s]?:\/\/)([^.]*)([^:/]*)/i);
            if (!targetMatch || !targetMatch[1] || !targetMatch[2])
                throw Error('invalid target host');
 
            var sourceMatch = sourceEnvironment.match(/(?:http[s]?:\/\/)([^.]*)([^:/]*)/i);
            if (!sourceMatch || !sourceMatch[1] || !sourceMatch[2])
                throw Error('invalid source host');
 
            if (sourceMatch[1] == targetMatch[1])
                throw Error('source and target can not be same');
 
            // protect from sending credentials with high privileges to a non service-now.com host
            if (sourceMatch[2] != targetMatch[2]) {
                throw Error('invalid hosts');
            }
 
            // updateSetSysId = the sys_id of the source update set
            // commitId = the id to load the update set
 
            if (gitDeployment) { // git 2 snow deployment
                if (!updateSetSysId) { // if no updateSetId provided, derive from the commit id
                    updateSetSysId = commitId.substr(0, 32); // make the commit ID as long as a sys_id
                }
                limitSet.push(commitId);
 
            } else { // for snow 2 snow deployment, check us state etc
                var us = new GlideRecord('sys_update_set');
                if (!us.get(updateSetSysId))
                    throw Error('UpdateSet not found');
 
                if (us.getValue('state') != 'complete') {
                    throw Error('UpdateSet is not in complete state');
                }
 
                /*
                 if (collisionDetect) {
                     // clone the update set on the source env for preview
                     updateSetSysId = self._cloneUpdateSet(updateSetSysId);
                     us = new GlideRecord('sys_update_set');
                     if (!us.get(updateSetSysId))
                         throw Error('UpdateSet not found');
                 }
                 */
                if (us.base_update_set.nil()) {
                    limitSet.push(updateSetSysId);
                } else {
                    var baseSysId = us.getValue('base_update_set');
                    if (updateSetSysId != baseSysId)
                        throw Error('This update-set is member of a batch. Parent must be deployed: ' + baseSysId);
 
                    var bus = new GlideRecord('sys_update_set');
                    bus.addQuery('base_update_set', updateSetSysId);
                    bus._query();
                    while (bus._next()) {
                        limitSet.push(bus.getValue('sys_id'));
                    }
                }
            }
 
            // in GIT deployment mode, the user does not require to have the 'admin' role
            var requiredUserRoles = (gitDeployment) ? ['soap_query', 'soap_script', 'cicd_integration_user'] : ['admin'];
            // get the sys_ids of the required roles
            var adminRole = '';
            var role = new GlideRecord('sys_user_role');
            if (role.get('name', 'admin')) {
                adminRole = role.getValue('sys_id');
            }
 
            var adminRoles = [];
            var roles = new GlideRecord('sys_user_role');
            roles.addQuery('name', 'IN', requiredUserRoles);
            roles._query();
            while (roles._next()) {
                adminRoles.push(roles.getValue('sys_id'));
            }
 
            var user;
 
            if (!autoCreateCdUser) {
 
                if (!sourceUserName || !sourcePassword)
                    throw Error('source credentials not specified');
 
                user = new GlideRecord('sys_user');
                if (!user.get('user_name', sourceUserName))
                    throw Error('source user not specified'); // same error as above to not expose user existence
 
                userSysId = user.getValue('sys_id');
 
                // check if use has right roles
                var roleAssignment = new GlideRecord('sys_user_has_role');
                roleAssignment.addQuery('user', userSysId);
                roleAssignment.addQuery('role', 'IN', adminRoles).addOrCondition('role', adminRole);
                roleAssignment.addQuery('state', 'active');
                roleAssignment._query();
                if (!roleAssignment._next())
                    throw Error('source user has not the appropriate role');
 
            } else {
 
                // create user on source instance
                var userUniqueId = sourceUrl.concat(' to ', targetEnvironment);
                user = new GlideRecord('sys_user');
                sourceUserName = '_CICD_DEPLOYMENT_'.concat(new GlideChecksum(userUniqueId).getMD5()).substr(0, 40);
                var firstName = 'CD-User for '.concat((gitDeployment) ? 'GIT' : 'source', ' based deployments');
                sourcePassword = null;
 
                if (user.get('user_name', sourceUserName)) {
                    userSysId = user.getValue('sys_id');
                    if (user.getValue('last_name') !== userUniqueId) {
                        user.setValue('first_name', firstName);
                        user.setValue('last_name', userUniqueId);
                        user.update();
                    }
                } else {
                    // create a random password
                    sourcePassword = GlideSecureRandomUtil.getSecureRandomString(100);
 
                    user.initialize();
                    user.setValue('user_name', sourceUserName);
                    user.setDisplayValue('user_password', sourcePassword);
                    user.setValue('first_name', firstName);
                    user.setValue('last_name', userUniqueId);
                    userSysId = user.insert();
                    if (!userSysId)
                        throw Error('CICdDeploy: User not created. sys_update_set_source on \'' + targetEnvironment + '\' for host \'' + sourceEnvironment + '\' needs to be created manually');
 
                }
 
                if (adminRoles.length == 0)
                    throw Error('CICdDeploy: admin role not found. ' + sourceUserName + ' will not have the correct grants to have this working');
 
                // assign or update the correct role to the _CICD_DEPLOYMENT_ user
                adminRoles.forEach(function (roleSysId) {
                    // check if use has right roles
                    var roleAssignment = new GlideRecord('sys_user_has_role');
                    roleAssignment.addQuery('user', userSysId);
                    roleAssignment.addQuery('role', roleSysId);
                    roleAssignment.addQuery('state', 'active');
                    roleAssignment._query();
                    if (!roleAssignment._next()) {
                        roleAssignment.initialize();
                        roleAssignment.setValue('user', userSysId);
                        roleAssignment.setValue('role', roleSysId);
                        roleAssignment.setValue('state', 'active');
                        roleAssignment.insert();
                    }
                });
            }
 
            // call target instance to load the update set
            var endpoint = targetEnvironment.concat(self.getBaseURI(), '/pull'), // pullUpdateSet()
                requestBody = {
                    sourceEnvironment: sourceEnvironment,
                    sourceUrl: sourceUrl,
                    gitDeployment: gitDeployment,
                    credentials: {
                        user: sourceUserName,
                        password: (sourcePassword) ? new GlideEncrypter().encrypt(sourcePassword) : null
                    }
                };
 
            var request = new sn_ws.RESTMessageV2();
            request.setEndpoint(endpoint);
 
            if (targetUserName &amp;&amp; targetPassword) {
                request.setBasicAuth(targetUserName, targetPassword);
            } else {
                throw Error('No credentials specified for ' + endpoint);
            }
 
            request.setRequestHeader('Accept', 'application/json');
            request.setRequestHeader('Content-Type', 'application/json');
            request.setHttpMethod('POST');
 
            request.setRequestBody(JSON.stringify(requestBody));
 
            //gs.info("POST body: {0}", requestBody);
 
            var response = request.execute();
            if (!response.haveError()) {
                /* redirect to the target environment to execute 
                     - loadUpdateSet
                     - previewUpdateSet
                     - commitUpdateSet
                     - deploymentComplete
                 */
                var responseBody = JSON.parse(response.getBody()).result;
                var payload = {
                    // TODO: self.getAppVersion() not specified !
                    version: self.getAppVersion(),
                    sourceSysId: responseBody.sourceSysId,
                    targetEnvironment: responseBody.targetEnvironment,
 
                    updateSetSysId: updateSetSysId,
                    limitSet: limitSet, // &lt;-- these are actually the US to be deployed
 
                    gitDeployment: gitDeployment,
 
                    sourceEnvironment: sourceEnvironment,
                    deploy: Boolean(self.body.deploy),
                    collisionDetect: collisionDetect,
                    conflicts: self.body.conflicts,
                    step: gitDeployment ? 'aggregateUpdateSet' : 'loadUpdateSet'
 
                };
                return self._sendLocation(303, payload, targetEnvironment); // see other
            } else {
                var statusCode = response.getStatusCode();
                if (statusCode == 666) {
                    /* Something went wrong with the creation of 'sys_update_set_source', remove user from source.*/
                    self.teardownSource(roleSysId, userSysId);
                }
                throw Error(endpoint.concat(' Request ended in error. Code: ', statusCode, ', Message: ', response.getErrorMessage(), response.getBody()));
            }
 
 
        } catch (e) {
            self.console.error(e.message);
            return new sn_ws_err.BadRequestError(e.message);
 
        }
 
    },
 
 
    /**
      * Remove Update Set Source on target
      * 
      * @param {any} sourceSysId
      * @returns {undefined}
      */
    teardownTarget: function (sourceSysId) {
        var source = new GlideRecord('sys_update_set_source');
        if (!gs.nil(sourceSysId) &amp;&amp; source.get(sourceSysId)) {
            source.deleteRecord();
        }
    },
 
 
 
 
 
    /**
      * This is mapped to POST: /api/devops/v1/cicd/deploy_step
      * 
      * @returns {undefined}
      */
    processUpdateSetDeploySteps: function () {
        var self = this;
 
        try {
 
            if (GlidePluginManager.isUpgradeSystemBusy()) {
                self.console.error('[pullUpdateSet] Environment is upgrading');
                throw Error('pullUpdateSet: Environment is upgrading');
            }
 
            var payload = self.body;
            if (!Object.keys(payload))
                throw Error('processUpdateSetDeploySteps: no request payload found');
 
            var progressId = payload.progressId;
 
            if (payload.targetEnvironment == gs.getProperty('glide.servlet.uri').toLowerCase()) {
 
                if (!gs.nil(progressId)) {
                    var pgr = new GlideRecord('sys_execution_tracker');
                    if (!pgr.get(progressId)) {
                        self.console.error('no tracker found with ID: '+ progressId + ' - '+ JSON.stringify(payload));
                        throw Error('no tracker found with ID: '+ progressId + ' - '+ JSON.stringify(payload));
                    } else {
                         
                        var state = parseInt(pgr.getValue('state'), 10);
 
                        if (state == 4) // Cancelled
                            throw Error('Execution Tracker cancelled: '.concat(pgr.getLink()));
                         
                        if(state == 3) // Failed
                            throw Error(pgr.getValue('message').concat(pgr.getLink()));
 
                        if (parseInt(pgr.getValue('percent_complete'), 10) != 100) {
                            /*
                             job still in progress, return not modified 304 and url to this resource.
                             */
                            return self._sendLocation(304, payload);
                        } else {
                            if(state != 2){
                                throw Error('Execution Tracker Not Successful: '.concat(pgr.getLink()));
                            }
                            payload.trackerResult = pgr.getValue('result');
                        }
                    }
                }
 
                // here 'percent_complete' must be 100 (%) or no tracker in place
                switch (payload.step) {
 
                case 'aggregateUpdateSet':
                    return self._aggregateUpdateSet(payload);
 
                case 'loadUpdateSet':
                    return self._targetLoadUpdateSet(payload);
 
                case 'previewUpdateSet':
                    return self._targetPreviewUpdateSet(payload);
 
                case 'commitUpdateSet':
                    return self._targetCommitUpdateSet(payload);
 
                case 'deploymentComplete':
                    return self._targetDeploymentComplete(payload);
 
                default:
                    throw Error('Unknown Step: '.concat(payload.step));
 
                }
 
            } else {
                throw Error('TargetEnvironment not correct');
            }
 
        } catch (e) {
            gs.error(e.message);
            return new sn_ws_err.BadRequestError(e.message);
        }
    },
 
    /**
      * Count the UpdateSetXML records.
      * The number is used later to validate the retrieved update set.
      * 
      * @param {*} payload
      * @returns {any}
      */
    _aggregateUpdateSet: function (payload) {
        var self = this;
        var progressId = undefined;
 
        // only start the count if this is a git deployment
        if (payload.gitDeployment) {
 
            var worker = new GlideScriptedHierarchicalWorker();
            worker.setProgressName('CICD - Aggregate UpdateSet');
            worker.setScriptIncludeName('CiCdSource');
            worker.setScriptIncludeMethod('aggregateUpdateSetWorker');
            worker.putMethodArg('payload', payload);
            worker.setBackground(true);
            worker.start();
 
            progressId = worker.getProgressID();
            self.console.log('[AGGREGATE UPDATE SET] : GlideUpdateSetWorker progress_id: \'{0}\'', String(progressId));
 
        }
 
        self.assign(payload, {
            progressId: progressId,
            trackerResult: null,
            step: 'loadUpdateSet'
        });
 
        // job create, return 'accepted'
        return self._sendLocation(202, payload);
    },
 
    /**
      * Load update set to target environment
      * 
      * @param {any} payload
      * @returns {any}
      */
    _targetLoadUpdateSet: function (payload) {
        var self = this;
 
        if (payload.gitDeployment) {
            payload.expectedUpdateSetXmlNum = -1;
            if (payload.trackerResult) {
                try {
                    var count = JSON.parse(payload.trackerResult).count;
                    payload.expectedUpdateSetXmlNum = count;
                } catch (e){
                    self.console.error(e);
                    throw Error('UpdateSet Aggregation failed '+ JSON.parse(payload.trackerResult));
                }
            }
             
            if (payload.expectedUpdateSetXmlNum == -1)
                throw Error('UpdateSet Aggregation failed (-1)');
 
            self.console.log('[LOAD UPDATE SET] : ExpectedXml {0}', payload.expectedUpdateSetXmlNum);
        }
 
        var sourceSysId = payload.sourceSysId,
            limitSet = (payload.limitSet) ? Array.isArray(payload.limitSet) ? payload.limitSet : [payload.limitSet] : [];
 
        // unique list of any of the id's provided
        var cleanRemoteUpdateSets = [payload.updateSetSysId].concat(limitSet).filter(function (item, i, ar) { return ar.indexOf(item) === i; });
        /*
             if this update set was already loaded, delete it.
         */
        cleanRemoteUpdateSets.forEach(function (remoteSysId) {
            // in case of commitId ensure its short enough
            remoteSysId = remoteSysId.substr(0, 32);
 
            var lusSysId;
            var rus = new GlideRecord('sys_remote_update_set');
            rus.addQuery('remote_sys_id', 'STARTSWITH', remoteSysId).addOrCondition('origin_sys_id', 'STARTSWITH', remoteSysId);
            rus._query();
            if (rus._next()) {
                lusSysId = rus.getValue('update_set');
 
                self.console.log('[LOAD UPDATE SET] : deleting already loaded \'sys_remote_update_set\' \'{0}\'', remoteSysId);
                rus.deleteRecord();
            }
 
            var lus = new GlideRecord('sys_update_set');
            if (lusSysId) {
                lus.addQuery('sys_id', lusSysId).addOrCondition('origin_sys_id', 'STARTSWITH', remoteSysId);
            } else {
                lus.addQuery('origin_sys_id', 'STARTSWITH', remoteSysId);
            }
 
            /*
                 only delete if it was not changed (opened) on the target system since last deployment
             */
            lus.addQuery('sys_mod_count', '&lt;=', 2);
            lus.addQuery('state', 'complete');
            lus._query();
            if (lus._next()) {
                self.console.log('[LOAD UPDATE SET] : deleting local update-set \'{0}\'', lus.getValue('sys_id'));
                lus.deleteRecord();
            } else if (lusSysId) {
                self.console.log('[LOAD UPDATE SET] : local update-set \'{0}\' was modified since deployment and will not be deleted.', lusSysId);
            }
 
        });
 
        self.console.log('[LOAD UPDATE SET] : Source SYS_ID {0}', sourceSysId);
        self.console.log('[LOAD UPDATE SET] : load update set {0}', limitSet);
        /*
             run worker to load the update set from remote
         */
        var worker = new GlideUpdateSetWorker();
        worker.setUpdateSourceSysId(sourceSysId); // the sys_update_set_source sys_id
        worker.setLimitSet(limitSet); // the update-set sys_id's / the id to load the update set
        worker.setBackground(true);
        worker.start();
        var progressId = worker.getProgressID();
 
        self.console.log('[LOAD UPDATE SET] : GlideUpdateSetWorker progress_id: \'{0}\'', String(progressId));
 
        self.assign(payload, {
            progressId: progressId,
            trackerResult: null,
            step: 'previewUpdateSet'
        });
 
        // job create, return 'accepted'
        return self._sendLocation(202, payload);
    },
 
 
    /**
      * Preview update set on target environment
      * 
      * @param {any} payload
      * @returns {undefined}
      */
    _targetPreviewUpdateSet: function (payload) {
        var self = this;
 
        var updateSetSysId = payload.updateSetSysId;
 
        if (payload.gitDeployment) {
            // make sure its an int
            var expectedUpdateSetXmlNum = parseInt(payload.expectedUpdateSetXmlNum, 10);
            var loadedUpdateSetXmlNum = 0;
 
            if(isNaN(expectedUpdateSetXmlNum))
                throw Error('expectedUpdateSetXmlNum invalid (NaN) '+ payload.expectedUpdateSetXmlNum);
            if (expectedUpdateSetXmlNum == -1)
                throw Error('expectedUpdateSetXmlNum invalid (-1)');
             
            var agg = new GlideAggregate('sys_update_xml');
            agg.addQuery('remote_update_set.remote_sys_id', 'STARTSWITH', updateSetSysId);
            agg.addAggregate('COUNT');
            agg.query();
            if (agg.next()) {
                loadedUpdateSetXmlNum = parseInt(agg.getAggregate('COUNT'), 10);
            }
 
            self.console.log('[Preview Update Set] : LoadedXML {0}, ExpectedXml {1}', loadedUpdateSetXmlNum, expectedUpdateSetXmlNum);
 
            if (loadedUpdateSetXmlNum != expectedUpdateSetXmlNum) {
                self.console.error('[Preview Update Set] : Incorrect number of UpdateSetXML records. Expected Records: {0}; Loaded Records: {1}',expectedUpdateSetXmlNum, loadedUpdateSetXmlNum);
                var error = {
                    name: 'Incorrect number of UpdateSetXML records',
                    message: 'Incorrect number of UpdateSetXML records. Expected records: ' + expectedUpdateSetXmlNum + ' - lLoaded records: ' + loadedUpdateSetXmlNum,
                    issues: true,
                    updateSet: false, // essential! to be seen as error on the server side
                    previewProblems: [],
                    dataLossWarnings: [],
                    payload : payload
                };
                self.response.setStatus(409);
                // also send the payload back
                return self.response.setBody({
                    code: 409,
                    error: error,
                    status: 'failure'
                });
            }
        }
 
        /*
             in case the sys property 'glide.update_set.auto_preview' is not enabled, 
             manually run the preview.
         */
        var rus = new GlideRecord('sys_remote_update_set');
        rus.addQuery('remote_sys_id', 'STARTSWITH', updateSetSysId);
        rus.addQuery('state', '!=', 'committed');
        rus.orderByDesc('sys_created_on');
        rus.setLimit(1);
        rus._query();
        if (rus._next()) {
            var remoteUpdateSetSysId = rus.getValue('sys_id');
 
            if ('previewed' == rus.getValue('state')) {
 
                self.assign(payload, {
                    progressId: null,
                    state: rus.getValue('state'),
                    remoteUpdateSetSysId: remoteUpdateSetSysId,
                    step: 'commitUpdateSet'
                });
 
                // redirect to next step
                return self._sendLocation(303, payload); // see other
            }
 
            /*
                 run the preview 
                 code from /sys_script_include.do?sys_id=02ba7cd747103200a03a19fbac9a71bc
             */
            var progressId = (function () {
                if (rus.remote_base_update_set.nil()) {
                    self.console.log('[PREVIEW UPDATE SET] : Starting update set preview for: {0}', rus.name);
                    return new UpdateSetPreviewAjax().previewRemoteUpdateSetAgain(rus);
                } else {
 
                    //This is part of a batch, and it should run the batch previewer
                    var updateSet = new GlideRecord('sys_remote_update_set');
                    updateSet.get(rus.remote_base_update_set);
                    if (!updateSet.isValidRecord())
                        throw Error('Base UpdateSet not found for '.concat(rus.getLink(true)));
 
                    //Cancel any running trackers on the batch
                    var tracker = new GlideRecord('sys_execution_tracker');
                    tracker.addQuery('source', updateSet.sys_id);
                    tracker.addQuery('source_table', 'sys_remote_update_set');
                    tracker.addQuery('state', 'IN', 'pending,running');
                    tracker.orderByDesc('sys_created_on');
                    tracker.query();
                    while (tracker.next()) {
                        self.console.log('[PREVIEW UPDATE SET] : Cancelling existing execution tracker: {0}', updateSet.sys_id);
                        var previewer = new UpdateSetPreviewAjax();
                        previewer.sendCancelSignal(tracker.sys_id);
                    }
                    // END Cancel any running trackers on the batch
 
                    self.console.log('[PREVIEW UPDATE SET]: Starting update set batch preview for: {0}', updateSet.name);
 
                    return new HierarchyUpdateSetPreviewAjax().previewRemoteHierarchyUpdateSetAgain(updateSet);
                }
            })();
 
            self.console.log('[PREVIEW UPDATE SET] : UpdateSetPreviewer completed progress_id: {0}', progressId);
 
            self.assign(payload, {
                state: 'previewing',
                progressId: progressId,
                trackerResult: null,
                remoteUpdateSetSysId: remoteUpdateSetSysId,
                step: 'commitUpdateSet'
            });
 
            // job create, return 'accepted'
            return self._sendLocation(202, payload);
        }
 
        throw Error('[Preview Update Set] Remote update-set not found with "remote_sys_id" ' + updateSetSysId);
    },
 
 
    /**
      * Commit update set on target environment
      * 
      * @param {any} payload
      * @returns {undefined}
      */
    _targetCommitUpdateSet: function (payload) {
        var self = this;
        var missingRecordActions = ['19415110bf010100421cdc2ecf07393c', '55711150bf010100421cdc2ecf07398e', '48d1d910bf010100421cdc2ecf0739b1']; // 'Find missing record', 'Find missing update', 'Find missing update'
        try {
 
            // check for conflicts and always resolve issues (during conflict detection and during deployment)
            if (GlidePreviewProblemHandler.hasUnresolvedProblems(payload.remoteUpdateSetSysId) &amp;&amp; payload.conflicts &amp;&amp; payload.conflicts.defaults) {
 
                var skip = (payload.conflicts.defaults.skip || '').split(',').map(function (m) { return m.trim(); }).filter(function (f) { return (f.length); });
                var ignore = (payload.conflicts.defaults.ignore || '').split(',').map(function (m) { return m.trim(); }).filter(function (f) { return (f.length); });
                var availableActions,
                    hasMissingRecordAction;
 
                if (skip.length) {
                    var skipProb = new GlideRecord('sys_update_preview_problem');
                    skipProb.addQuery('remote_update_set', payload.remoteUpdateSetSysId);
                    skipProb.addQuery('status', '');
                    var lenQuery;
                    skip.forEach(function (updateName, index) {
                        if (index == 0) {
                            lenQuery = skipProb.addQuery('remote_update.name', 'STARTSWITH', updateName);
                        } else {
                            lenQuery.addOrCondition('remote_update.name', 'STARTSWITH', updateName);
                        }
                    });
 
                    self.console.log('[Conflict Default Resolution Skip] Auto SKIP all problems of type : "{0}"', skip.join(', '));
                    //self.console.log('[Conflict Default Resolution Skip] auto SKIP all problems matching this query: "{0}"', skipProb.getEncodedQuery());
                    skipProb.query();
                    while (skipProb._next()) {
                        availableActions = skipProb.getValue('available_actions').split(',');
                        hasMissingRecordAction = missingRecordActions.some(function (mAction) { return availableActions.indexOf(mAction) &gt;= 0; });
                        // don't auto skip if referenced record is not found. e.g. 'Could not find a record in ecc_agent for column mid_server referenced in this update'
                        if (hasMissingRecordAction)
                            continue;
 
                        self.console.log('[Conflict Default Resolution Skip] Setting {0} to status \'skipped\'', skipProb.remote_update.getDisplayValue());
 
                        //skipProb.setValue('status', 'skipped');
                        var ppa = new GlidePreviewProblemAction(new GlideAction(), skipProb);
                        ppa.skipUpdate(); // Problem has been skipped. The update that caused this problem will not be committed.
 
                        skipProb.setValue('description', '[CICD] - This issue was automatically SKIPPED by the CICD process (CICD_CD_DEPLOY_ALWAYS_SKIP_CONFLICTS)\n'.concat(skipProb.getValue('description')));
                        skipProb.update();
                    }
                }
 
                if (ignore.length) {
                    var ignProb = new GlideRecord('sys_update_preview_problem');
                    ignProb.addQuery('remote_update_set', payload.remoteUpdateSetSysId);
                    ignProb.addQuery('status', '');
                    var ignQuery;
                    ignore.forEach(function (updateName, index) {
                        if (index == 0) {
                            ignQuery = ignProb.addQuery('remote_update.name', 'STARTSWITH', updateName);
                        } else {
                            ignQuery.addOrCondition('remote_update.name', 'STARTSWITH', updateName);
                        }
                    });
                    self.console.log('[Conflict Default Resolution Ignore] Auto IGNORE all problems of type : "{0}"', ignore.join(', '));
                    //self.console.log('[Conflict Default Resolution Ignore] auto IGNORE all problems matching this query: "{0}"', ignProb.getEncodedQuery());
                    ignProb.query();
                    while (ignProb._next()) {
                        availableActions = ignProb.getValue('available_actions').split(',');
                        hasMissingRecordAction = missingRecordActions.some(function (mAction) { return availableActions.indexOf(mAction) &gt;= 0; });
                        // don't auto ignore if referenced record is not found. e.g. 'Could not find a record in ecc_agent for column mid_server referenced in this update'
                        if (hasMissingRecordAction)
                            continue;
 
                        self.console.log('[Conflict Default Resolution Ignore] Setting {0} to status \'ignored\'', ignProb.remote_update.getDisplayValue());
 
                        //ignProb.setValue('status', 'ignored');
                        var ppaIgn = new GlidePreviewProblemAction(new GlideAction(), ignProb);
                        ppaIgn.ignoreProblem(); // Problem has been ignored
 
                        ignProb.setValue('description', '[CICD] - This issue was automatically IGNORED by the CICD process (CICD_CD_DEPLOY_ALWAYS_IGNORE_CONFLICTS)\n'.concat(ignProb.getValue('description')));
                        ignProb.update();
                    }
                }
            }
 
            // check again for conflicts and auto resolve conflicts
            if (!payload.collisionDetect &amp;&amp; GlidePreviewProblemHandler.hasUnresolvedProblems(payload.remoteUpdateSetSysId) &amp;&amp; payload.conflicts &amp;&amp; payload.conflicts.resolutions) {
                // only resolve the problems with the provided resolutions if NOT in collisionDetect mode
 
                payload.missingRecords = {};
 
                var resolutions = payload.conflicts.resolutions;
                Object.keys(resolutions).forEach(function (updateName) {
                    /*
                     conflicts: {
                         resolutions: {
                             'sys_script_include_1b9ed113dbf32300fcf41780399619fc': {
                                 status: 'skipped',
                                 sysId: '1b9ed113dbf32300fcf41780399619fc',
                                 className: 'sys_script_include',
                                 updatedOn: 1567150552000
                             },
                         }
                         default: {
                             skip: 'sys_properties,sys_data_source,ldap_server_config,sys_rest_message_fn,sys_soap_message_function',
                             ignore: 'sys_bla'
                         }
 
                     }
                     */
                    var resolution = resolutions[updateName];
                    var status = resolution.status;
                    var sysId = resolution.sysId;
                    var updatedOn = resolution.updatedOn;
 
 
                    var problem = new GlideRecord('sys_update_preview_problem');
                    problem.addQuery('remote_update_set', payload.remoteUpdateSetSysId);
                    problem.addQuery('remote_update.name', updateName);
                    problem.addQuery('status', '');
                    problem.setLimit(1);
                    problem.query();
                    if (problem._next()) {
 
                        if (status == 'skipped') {// skipped = 'Skip remote update'
                            // this change can be ignored
                            self.console.log('[Auto Conflict resolution] set this record to "SKIPPED" : {0}', gs.getProperty('glide.servlet.uri').concat(problem.getLink(true)));
 
                            //problem.setValue('status', status);
                            var ppa = new GlidePreviewProblemAction(new GlideAction(), problem);
                            ppa.skipUpdate(); // Problem has been skipped. The update that caused this problem will not be committed.
 
                            problem.setValue('description', '[CICD] - This issue was automatically SKIPPED by the CICD process (based on preflight conflict resolution)\n'.concat(problem.getValue('description')));
                            problem.update();
 
                        } else if (status == 'ignored') { // ignored = 'Accept remote update'
                            // check if the local record is by any chance newer than the one we should accept
                            // this can be the case if there was another deployment to target from another dev environment
                            var newerLocalFile = (function () {
                                if (sysId &amp;&amp; updatedOn) {
                                    var file = new GlideRecord('sys_metadata');
                                    if (file.get(sysId)) {
                                        var localUpdatedOn = new GlideDateTime(file.getValue('sys_updated_on')).getNumericValue();
                                        if (localUpdatedOn &gt; updatedOn) {
                                            self.console.error('[Conflict Resolution - Accept incoming change] the local record {0} is newer than an incoming one {1}', gs.getProperty('glide.servlet.uri').concat(file.getLink(true)), gs.getProperty('glide.servlet.uri').concat(problem.getLink(true)));
                                            return true;
                                        }
                                    }
                                }
                                return false;
                            })();
 
                            if (!newerLocalFile) {
 
                                var availableActions = problem.getValue('available_actions');
                                var isMissingRecord = missingRecordActions.some(function (action) {
                                    return availableActions.includes(action);
                                });
                                if (isMissingRecord) {
                                    resolution.link = gs.getProperty('glide.servlet.uri').concat(problem.getLink(true));
                                    resolution.description = problem.getValue('description');
                                    payload.missingRecords[updateName] = resolution;
                                }
 
                                // this change can be accepted
                                self.console.log('[Auto Conflict resolution] set this record to "IGNORED" : {0}', gs.getProperty('glide.servlet.uri').concat(problem.getLink(true)));
 
                                //problem.setValue('status', status);
                                var ppaIgn = new GlidePreviewProblemAction(new GlideAction(), problem);
                                ppaIgn.ignoreProblem(); // Problem has been ignored
 
                                problem.setValue('description', '[CICD] - This issue was automatically IGNORED by the CICD process (based on preflight conflict resolution)\n'.concat(problem.getValue('description')));
                                problem.update();
                            }
                        }
                    }
                });
            }
 
            var error = {
                name: 'Preview Review Problem',
                message: '',
                updateSet: gs.getProperty('glide.servlet.uri').concat('sys_remote_update_set.do?sys_id=', payload.remoteUpdateSetSysId),
                issues: false,
                previewProblems: [],
                dataLossWarnings: []
            };
 
 
            // check again for conflicts
            if (!GlidePreviewProblemHandler.hasUnresolvedProblems(payload.remoteUpdateSetSysId)) {
                // if no collisions detected and in detection mode, remove the preview update set
                if (payload.collisionDetect) {
                    var delRus = new GlideRecord('sys_remote_update_set');
                    if (delRus.get(payload.remoteUpdateSetSysId)) {
                        delRus.deleteRecord();
                    }
                }
            } else {
                // there are unresolved problems
                if (payload.collisionDetect) {
                    // change the name of the remote update set to indicate this is only a dry run to find the conflicts
                    var updRus = new GlideRecord('sys_remote_update_set');
                    if (updRus.get(payload.remoteUpdateSetSysId)) {
                        updRus.setValue('state', self.REQUIRES_REVIEW);
                        updRus.setValue('name', '[CICD PREFLIGHT] - '.concat(updRus.getValue('name')));
                        updRus.update();
                    }
                }
 
                var problem = new GlideRecord('sys_update_preview_problem');
                problem.addQuery('type=error^status=^'.concat('remote_update_set=', payload.remoteUpdateSetSysId, '^ORremote_update_set.remote_base_update_set=', payload.remoteUpdateSetSysId));
                problem._query();
                while (problem._next()) {
                    error.previewProblems.push({
                        type: problem.getValue('type'),
                        name: problem.getValue('description'),
                        link: gs.getProperty('glide.servlet.uri').concat(problem.getLink(true))
                    });
                }
                if (error.previewProblems.length) {
                    error.issues = true;
                    error.message += '- Update conflicts must be resolved manually. ';
                }
 
            }
 
            // check for data loss warnings
            var ignoreDataLoss = (payload.conflicts.defaults.ignoreDataLoss || false);
 
            if (!ignoreDataLoss) {
                var del = new GlideRecord('sys_update_xml');
                del.addQuery('action=DELETE^'.concat('remote_update_set=', payload.remoteUpdateSetSysId, '^ORremote_update_set.remote_base_update_set=', payload.remoteUpdateSetSysId, '^nameDOES NOT CONTAINsys_dictionary_override^nameSTARTSWITHsys_dictionary^ORnameSTARTSWITHsys_db_object^ORnameSTARTSWITHvar_dictionary^ORnameSTARTSWITHsvc_extension_variable^ORnameSTARTSWITHwf_activity_variable^ORnameSTARTSWITHatf_input_variable^ORnameSTARTSWITHatf_output_variable^ORnameSTARTSWITHsys_atf_variable^ORnameSTARTSWITHsys_atf_remembered_values^ORDERBYtype^ORDERBYname'));
                del._query();
                self.console.warn('DATALOSS QUERY sys_update_xml : {0}', del.getEncodedQuery());
                while (del._next()) {
                    error.dataLossWarnings.push({
                        type: del.getValue('name'),
                        name: 'Data Loss Warning',
                        link: gs.getProperty('glide.servlet.uri').concat(del.getLink(true))
                    });
                }
                if (error.dataLossWarnings.length) {
                    error.issues = true;
                    error.message += '- Data Loss Warnings';
                }
            }
 
 
            var ignoreDeliveryConflicts = ('true' == gs.getProperty('cicd-integration.ignore-delivery-conflicts', 'false'));
 
            // in case of some issues exit here
            if (error.issues) {
                // incase of delivery AND ignore-delivery-conflicts, only log a warning, but pass
                if (ignoreDeliveryConflicts &amp;&amp; !payload.collisionDetect &amp;&amp; !payload.deploy) {
                    self.console.warn('[COMMIT UPDATE SET] conflicts detected but ignored during delivery of /sys_remote_update_set.do?sys_id={0} ', payload.remoteUpdateSetSysId);
                    // just incase: return the related errors
                    payload.deliveryConflicts = error;
 
                } else {
                    self.response.setStatus(409);
                    // also send the payload back
                    error.payload = payload;
                    return self.response.setBody({
                        code: 409,
                        error: error,
                        status: 'failure'
                    });
                }
            }
 
            // only commit if 'deploy' is set
            var progressId = null;
            if (!payload.collisionDetect &amp;&amp; payload.deploy) {
                if (GlidePreviewProblemHandler.hasUnresolvedProblems(payload.remoteUpdateSetSysId))
                    throw Error('UpdateSet still has unresolved problems and can not be deployed: ' + payload.remoteUpdateSetSysId);
 
                var rus = new GlideRecord('sys_remote_update_set');
                if (rus.get(payload.remoteUpdateSetSysId)) {
                    if (rus.remote_base_update_set.nil()) {
                        /*
                             Commit the update set.
                             code from /sys_ui_action.do?sys_id=c38b2cab0a0a0b5000470398d9e60c36 
                             calling /sys_script_include.do?sys_id=d14a6c27eff22000c6845a3615c0fb5d
                         */
                        var commitResult = new UpdateSetCommitAjax((function () {
                            var params = {
                                sysparm_type: 'commitRemoteUpdateSet',
                                sysparm_remote_updateset_sys_id: payload.remoteUpdateSetSysId
                            };
                            return {
                                /**
                                  * Description
                                  * 
                                  * @param {any} paramName
                                  * @returns {MemberExpression}
                                  */
                                getParameter: function (paramName) {
                                    return params[paramName];
                                }
                            };
                        })(), new GlideXMLDocument(), '').process();
                        progressId = commitResult.split(',')[0];
                    } else {
                        /*
                             HierarchyUpdateSetCommitAjax
                             code from /sys_ui_action.do?sys_id=addc9e275bb01200abe48d5511f91a78
                             calling /sys_script_include.do?sys_id=fcfc9e275bb01200abe48d5511f91aea
                         */
                        var updateSet = new GlideRecord('sys_remote_update_set');
                        if (updateSet.get(rus.remote_base_update_set)) {
                            var worker = new SNC.HierarchyUpdateSetScriptable();
                            progressId = worker.commitHierarchy(updateSet.sys_id);
                        } else {
                            throw Error('Batch-UpdateSet not found for update-set with id' + payload.remoteUpdateSetSysId);
                        }
                    }
                } else {
                    throw Error('UpdateSet not found with id' + payload.remoteUpdateSetSysId);
                }
            }
 
            self.assign(payload, {
                state: 'committing',
                progressId: progressId,
                trackerResult: null,
                step: 'deploymentComplete'
            });
 
            return self._sendLocation(202, payload); // job create, return 'accepted'
 
        } catch (e) {
            gs.error(e.message);
            return new sn_ws_err.BadRequestError(e.message);
 
        }
    },
 
    /**
      * Return complete message
      * 
      * @param {any} payload
      * @returns {any} payload
      */
    _targetDeploymentComplete: function (payload) {
        if (payload.collisionDetect)
            return payload;
 
        payload.state = (payload.deploy) ? 'committed' : 'delivered';
        if (payload.deploy) {
            var us = new GlideRecord('sys_update_set');
            if (us.get('remote_sys_id', payload.remoteUpdateSetSysId)) {
                payload.targetUpdateSetSysId = us.getValue('sys_id');
            }
        }
        return payload;
    },
 
 
    /**
      * Send redirect location (long polling)
      * 
      * @param {any} status
      * @param {any} payload
      * @param {any} host
      * @returns {any}
      */
    _sendLocation: function (status, payload, host) {
        var self = this;
        /*
         var queryParams = Object.keys(payload).map(function (key) {
             return key.concat('=', encodeURIComponent(payload[key]));
         });
         */
        var uri = (host || gs.getProperty('glide.servlet.uri')).toLowerCase().replace(/\/$/, '');
 
        self.response.setStatus(202);
        payload._status = status;
        self.response.setHeader('Location',
            uri.concat(self.getBaseURI(), '/deploy_step?__step=', payload.step, '&amp;__status=', status)
        );
        return self.response.setBody(payload);
    },
 
    /**
      * Target API. This API is called from the source env see {@link global.module:sys_script_include.CiCdDeploy#deployUpdateSet}.&lt;br&gt;
      * If required, it creates and configures a local update-set-source, pulls the Update-Set from the source env and returns preview status.&lt;br&gt;
      * 
      * This is mapped to POST: /api/devops/v1/cicd/pull
      * @returns {undefined}
      */
    pullUpdateSet: function () {
        var self = this,
            sourceSysId;//sourceEnvironment, sourceUrl, updateSetSysId, limitSet, deploy, collisionDetect;
 
        try {
 
            if (!self.body) {
                self.console.error('no request payload found');
                throw Error('pullUpdateSet: no request payload found');
            }
            [self.body.sourceEnvironment].forEach(function (param) {
                if (gs.nil(param))
                    throw Error('sourceEnvironment are mandatory');
            });
 
            if (!gs.getUser().getRoles().contains('admin'))
                throw Error('CD User must have admin grants. User: '.concat(gs.getUserName(), ' Roles', gs.getUser().getRoles().toString()));
            /*
                 create a dynamic source definition
             */
            try {
 
                var sourceEnvironment = self.body.sourceEnvironment.toLowerCase();
                var sourceUrl = (self.body.sourceUrl || sourceEnvironment).trim();
                var gitDeployment = self.body.gitDeployment || false;
                var credentials;
 
                //updateSetSysId = self.body.updateSetSysId;
                //limitSet = self.body.limitSet;
                //deploy = self.body.deploy || false;
                //collisionDetect = self.body.collisionDetect || false;
 
                var source = new GlideRecord('sys_update_set_source'),
                    name = new GlideChecksum(sourceUrl).getMD5().substr(0, 40),
                    desc = 'CICD deployment source for '.concat(sourceUrl, '. DO NOT DELETE OR CHANGE!');
 
                var noSlashUrl = sourceUrl.replace(/\/$/, '');
                if (source.get('url', noSlashUrl) || source.get('url', noSlashUrl + '/')) {
                    sourceSysId = source.getValue('sys_id');
                    // in case the credentials changed, update
                    credentials = self.body.credentials || {};
                    if (credentials.password &amp;&amp; credentials.user) {
                        source.setValue('username', credentials.user);
                        source.setValue('password', new GlideEncrypter().decrypt(credentials.password));
                        source.setWorkflow(false);
                        source.update();
                    }
                } else {
                    credentials = self.body.credentials || {};
 
                    if (!credentials.password)
                        throw Error('credentials.password is mandatory');
 
                    if (!credentials.user)
                        throw Error('credentials.user is mandatory');
 
                    source.initialize();
 
                    source.setValue('url', sourceUrl);
                    source.setValue('username', credentials.user);
                    source.setValue('password', new GlideEncrypter().decrypt(credentials.password));
                    source.setValue('name', name);
                    source.setValue('short_description', desc);
                    source.setValue('type', (gitDeployment) ? 'GIT' : 'dev');
                    source.setValue('active', true);
                    source.setWorkflow(false);
                    sourceSysId = source.insert();
                }
                if (gs.nil(sourceSysId))
                    throw Error('Somethings wrong with the creation of sys_update_set_source. CD User must have admin grants. '.concat(gs.getUserName(), ' Roles', gs.getUser().getRoles().toString()));
 
                gs.info('[CICD] : pullUpdateSet() sys_update_set_source {0}', sourceSysId);
 
            } catch (e) {
                gs.error('[CICD] : Source creation failed {0}', e.message || e);
                // remove the record completely 
                self.teardownTarget(sourceSysId);
 
                // tell request to also remove the user
                var error = new sn_ws_err.ServiceError();
                error.setStatus(666);
                error.setMessage('Source Creation Failed');
                error.setDetail(e.message);
                return error;
            }
 
            var payload = {
                sourceSysId: sourceSysId,
                targetEnvironment: gs.getProperty('glide.servlet.uri').toLowerCase(),
            };
 
            return payload;
 
        } catch (e) {
            self.console.error(e.message);
            return new sn_ws_err.BadRequestError(e.message);
        }
 
    },
 
 
    /**
      * Remove user and role on source environment
      * 
      * @param {any} roleSysId
      * @param {any} userSysId
      * @returns {undefined}
      */
    teardownSource: function (roleSysId, userSysId) {
 
        var role = new GlideRecord('sys_user_has_role');
        if (!gs.nil(roleSysId) &amp;&amp; role.get(roleSysId)) {
            role.deleteRecord();
        }
        var user = new GlideRecord('sys_user');
        if (!gs.nil(userSysId) &amp;&amp; user.get(userSysId)) {
            user.deleteRecord();
        }
    },
 
    type: 'CiCdDeploy'
};
 ]]&gt;&lt;/script&gt;&lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;&lt;sys_created_by&gt;b.moers&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2018-08-13 12:12:30&lt;/sys_created_on&gt;&lt;sys_id&gt;79e4545fdbbb134076d6b94ffe9619bf&lt;/sys_id&gt;&lt;sys_mod_count&gt;90&lt;/sys_mod_count&gt;&lt;sys_name&gt;CiCdDeploy&lt;/sys_name&gt;&lt;sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e"&gt;19190fabdbebd300dfa9b94ffe96193e&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="CICD Integration"&gt;19190fabdbebd300dfa9b94ffe96193e&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_script_include_79e4545fdbbb134076d6b94ffe9619bf&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-07-19 09:46:22&lt;/sys_updated_on&gt;&lt;/sys_script_include&gt;&lt;/record_update&gt;</payload>
<payload_hash>-1717815953</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:51</sys_created_on>
<sys_id>805357b32f15b850d8455aab2799b6ad</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2ca3e90000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:51</sys_updated_on>
<table/>
<target_name>CiCdDeploy</target_name>
<type>Script Include</type>
<update_domain>global</update_domain>
<update_guid>924293736515b85053b01c0b907d9e89</update_guid>
<update_guid_history>924293736515b85053b01c0b907d9e89:-1717815953,1157b348b53a2c10975ac7a3ea37c4dc:-802281182,fa46278470f62c10627de470c0bdfed9:-391126772,01d5663e478d20901fe4e153587f04ca:743846987,64e3aabaa08d2090757e3bfa60466ee0:-763019050,dadc96761b8d209081ab396dbaace425:-554411892,2f2c5e36308d20900d470c8a64b4659a:1994426940,bfba9a72a78d2090ac4ea5a40f7b0c13:362878664,a70a9a725e8d2090ce8ab261f5913a1e:1553196035,d649dafe4b4d20901da43fb117a230a6:-431206953,4695de7e0b4d2090bd1f760434e01ab7:696280920,af65de7e5c4d20902d0d70552fc1b3ce:-1831643498,19c452fe664d209042dea7c5ed71ae3c:1039488596,cd33127ecd4d209034c9ca5aee77e5fd:1059453078,81e0defa634d20907eab785fa62af925:1177904720,978f02fa284d20900a42b71ef1fc7c3d:-25185388,45ad8a7aa14d2090003d739e4e3293b8:-1522850091,e07c2d33449ca010e26b07bcb47c5755:2089408039,3abfab9bb31c6010685925c14035cff3:1917668984,d4f984e8380ca45053e617e899f1ff17:-778001209,a02089d508cf9410f6c3efe2c2a9267e:-1767403843,deaf9ddc90cf14102b56acbb52a9b0f9:-1121154279,c69e534e46c084142cc729aafb8a22c8:-325593523,fbdaf9e4454c8cd062463decc0c889a9:2104713118,6cbe694c7dc80cd0b843e795fa1847f4:-735190644,83a2c106f13f73c008238609096fbed9:1196223305,89cc680aedbb73c09bac315e6f747426:-1858616690,e6db9cce6f7b73c0eae8f3fd0dc82edf:-965330420,364cf77dfbf773c027ee151d6803a2ba:-1687557629,4f8598a87537fb80e2bf6a18343a77de:1315321837,aa0dc2cf79673780d92607c28438fc39:115008024,f27abbd0de777300f05a827f48a85cb5:-1504117232,aa0dc2cf79673780d92607c28438fc39:115008024,f5e3449eb6a3338026c90f8a96ce7551:1428071816,d843089e33a3ff04e87619dd73ea4254:-1702447744,3ea208523de3ff04e496640978d5e983:491616830,c272ef8ab863ff04ac7b06f5f172e8af:2026170937,957edf868463ff04b73f6c296e6aed88:-1015286160,41fbdf864f63ff0400175310d1896c80:311480330,c9c883422b23ff040d4868446ab9eae2:-86882823,e9784bc2b923ff04a43c95c7a2f5db5e:388870032,adf74786f123ff0457663da2d5bee370:-804502275,d9374786c723ff043ac14a58d3eafc6c:-288893042,5cc34bc24e23ff04ad38bfc74eec1d56:1884568887,fc42430ad8efbf04a59abe25d2317eaf:-124608277,beff3a427723ff047c3445ffff5a93ca:-736827678,416ff2424723ff040fa7b730dfaec88d:114677174,981f7eceedefbf04f3b8c6b1e26a443f:324552584,196ef6ce51efbf04c4e35e59498ac406:1981435108,c4c67ec288efbf040672aef3660c7a22:2018272289,34263e8a84efbf04f1e57fd259d2c40f:1866317507,ed312eb583e3bf04da73386b5397c40f:922033774,1a00a2b174e3bf0499dde9a71203fe40:-1219685172,52dede358ee3bf043900b3ad7380a01a:518795883,44ab5ab1b82bb78053af13a2b0742cbd:743227475,512f2d29986377803d9fcdc6552e7f8b:-1247823009,43429dad8627ff40013a45999fff2338:344834134,f37fa409c1eb3f40d6bd5786bab5aecb:-1919226690,1523337853e73f401b7f31acbb5c7fc6:2042816970,ad8ac3b4c6673f404766c605f4ca6900:-794128968,d2180334c3673f401f17c21149904836:2130536791,d81607b0db673f4021a74d539ae56a2f:434210000,796580c0e3277f4057b6224c646adb00:1608057800,4dcc6e5e060277c08009c8212030726e:-1351644015,fa18d530a30efb8042eb721b5ab36b54:577169901,ce4511784acafb80a8bba2643ae28920:974960596,f5c8c4b465c6fb80a88cb294133fb9ad:37507909,b9c80434c2c6fb8047e0ff01471eca01:-1364057997,4263a24b47f9f300622c570fcab72a27:1180066256,f642eac7a2f9f3005f9a1823572f6822:398633333,044819f29e7db30072194fae608656ed:621314620,4f36418c07247300f5ee76f6530f5414:-1364057997,8392458cf0247300d0b4f4fc84582a7d:741169977,1e4f9b5ad898b3c07ca8772e56fe19a5:664102281,46b99b8bff447b80fafa149a5f064a99:-982115308,1f206d2115c8b38080038926c7ec4db1:-1652306971,60c69d210dc8b380f5ef110ba5747a1e:-681582436,51432eaf977beb40fb737fd22615eafe:-1737818120,51d2466b13b7eb40b633f97c097256ea:1274958312,a5f9296b15b7eb4019afeca81c223c4e:-2123543869,dc76ad970673ab4098919ce8c776b6ad:-791876817,21f09b62e8bbe7400c94b62f145d2528:1170349406,f2c15bf77917a78033b838e3bdafa979:257475108,674a9572281aa7c037b2eadf5d665fb7:-873855672,d6165367eaceab80437aa0a5ee8e39eb:1304607313,8b680b6f3b8eab800f5562a8c4ee7d93:-274595438,5ba696e357a56b006b9c1d6117dcc71e:-1511136867,cdd596e34ea56b003f115f0bfecba60a:370325064,f58592e348a56b00d651d8de6b7ef03f:865718148,9f55162309a56b00a7ca44fd66484b58:1397756642,9e51526fbf656b00f812fcf56f14f0d2:-1192048639,17011aaf5c656b00707a2996a202ce7d:-432356656,81cf0a2fc9656b00a02dec1d7be98303:1362902044,ee5f0a6bbe656b00ef56bf25153c9780:-1942925772,805e822b2c656b00e2a525934c34b003:1240342708,3cacc6abb7656b003f6819ee5b240796:-1573152155,de5b462b90656b00f02c8014c078fa58:272705120,af8982e7e1656b00af94727b2fd65875:530048634,b269c22b68656b000f26e65c5cdc9340:-1085793843,9059422bb4656b00b66fdc350d48f7e4:-256208285,ed9886aff5e16b004daf607e5fcf0745:-1773938760,2188862f5de16b00213e8ea25ec689fc:-948784744,226882e771656b00b50ba84f4d9ac605:-857890152,e020a12323e16b00f04949160e3be070:931530262,20bf11a7c5e16b008c2fe72dcc318c0d:194276812,556f51231ee16b0018d9dfb98fe0e1c6:-1297737562,7109196f7ea16b007acf0d72ef8251f8:1139340402,070891231fe16b00bd48cf90db436f6b:1481776090,014c49274ba16b0059fe2422e698ce3f:-1785093446,2fdbc1277fa16b0040282fba354325fc:179919980,b1ab852729a16b0005e40cb0dde7c4f3:447849784,d00bc92752a16b0085ab1e8b390ff8e3:-455987671,d8ca412763a16b005d235a51bc8fa546:1855950757,37b5e4571afb1340c2b7b197e25f4fac:-2054973275,d995a85bc0fb1340dc41c314e29ca5e6:2143772730,ddaa1893d1fb134046abd4de7c3437e9:-344837889,c905905f4fbb1340a13836f60653196d:-1277193999</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_ui_action_148a8389dba77f409775f6700f961907</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update sys_domain="global" table="sys_ui_action"&gt;&lt;sys_ui_action action="INSERT_OR_UPDATE"&gt;&lt;action_name&gt;cicd_run_cancel&lt;/action_name&gt;&lt;active&gt;true&lt;/active&gt;&lt;client&gt;false&lt;/client&gt;&lt;client_script_v2/&gt;&lt;comments&gt;Cancel the pipeline if the update set contains undesired records.&lt;/comments&gt;&lt;condition&gt;new global.CiCdRun().sys_remote_updateDisplayCancelUiAction(current)&lt;/condition&gt;&lt;form_action&gt;true&lt;/form_action&gt;&lt;form_button&gt;true&lt;/form_button&gt;&lt;form_button_v2&gt;false&lt;/form_button_v2&gt;&lt;form_context_menu&gt;false&lt;/form_context_menu&gt;&lt;form_link&gt;false&lt;/form_link&gt;&lt;form_menu_button_v2&gt;false&lt;/form_menu_button_v2&gt;&lt;form_style/&gt;&lt;hint/&gt;&lt;isolate_script&gt;false&lt;/isolate_script&gt;&lt;list_action&gt;false&lt;/list_action&gt;&lt;list_banner_button&gt;false&lt;/list_banner_button&gt;&lt;list_button&gt;false&lt;/list_button&gt;&lt;list_choice&gt;false&lt;/list_choice&gt;&lt;list_context_menu&gt;false&lt;/list_context_menu&gt;&lt;list_link&gt;false&lt;/list_link&gt;&lt;list_save_with_form_button&gt;false&lt;/list_save_with_form_button&gt;&lt;list_style/&gt;&lt;name&gt;Cancel Run [CICD]&lt;/name&gt;&lt;onclick/&gt;&lt;order&gt;0&lt;/order&gt;&lt;script&gt;&lt;![CDATA[new global.CiCdRun().sys_remote_updateCancelUiAction(current, action);
]]&gt;&lt;/script&gt;&lt;show_insert&gt;false&lt;/show_insert&gt;&lt;show_multiple_update&gt;false&lt;/show_multiple_update&gt;&lt;show_query&gt;false&lt;/show_query&gt;&lt;show_update&gt;true&lt;/show_update&gt;&lt;sys_class_name&gt;sys_ui_action&lt;/sys_class_name&gt;&lt;sys_created_by&gt;b.moers&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2019-08-27 07:45:44&lt;/sys_created_on&gt;&lt;sys_domain&gt;global&lt;/sys_domain&gt;&lt;sys_domain_path&gt;/&lt;/sys_domain_path&gt;&lt;sys_id&gt;148a8389dba77f409775f6700f961907&lt;/sys_id&gt;&lt;sys_mod_count&gt;1&lt;/sys_mod_count&gt;&lt;sys_name&gt;Cancel Run [CICD]&lt;/sys_name&gt;&lt;sys_overrides/&gt;&lt;sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e"&gt;19190fabdbebd300dfa9b94ffe96193e&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="CICD Integration"&gt;19190fabdbebd300dfa9b94ffe96193e&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_ui_action_148a8389dba77f409775f6700f961907&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;b.moers&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2019-08-27 08:55:06&lt;/sys_updated_on&gt;&lt;table&gt;sys_remote_update_set&lt;/table&gt;&lt;ui11_compatible&gt;true&lt;/ui11_compatible&gt;&lt;ui16_compatible&gt;false&lt;/ui16_compatible&gt;&lt;/sys_ui_action&gt;&lt;/record_update&gt;</payload>
<payload_hash>1006404811</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:51</sys_created_on>
<sys_id>805357b32f15b850d8455aab2799b6b0</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c9d1f0000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:51</sys_updated_on>
<table>sys_remote_update_set</table>
<target_name>Cancel Run [CICD]</target_name>
<type>UI Action</type>
<update_domain>global</update_domain>
<update_guid>1c6ad3c953e77f40850b077704e916b4</update_guid>
<update_guid_history>1c6ad3c953e77f40850b077704e916b4:244319469,1c6ad3c953e77f40850b077704e916b4:244319469,327abbd0767773008d1e0962e0cc57aa:1006404811,1c6ad3c953e77f40850b077704e916b4:244319469,108a83897ba77f40106af3972483b909:-1024615469</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_ui_script_696cfd3937035a0044d3f25b34990e30</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_ui_script"&gt;&lt;sys_ui_script action="INSERT_OR_UPDATE"&gt;&lt;active&gt;true&lt;/active&gt;&lt;description&gt;Automatically comment source code&lt;/description&gt;&lt;global&gt;true&lt;/global&gt;&lt;name&gt;SnSmartComments&lt;/name&gt;&lt;script&gt;&lt;![CDATA[/**
 * Automatically comment JS code
 * 	Based on 
 * 	http://smartcomments.github.io/
 * 
 * @class 
 * @param {string} fieldName the name of the script field
 * @author Boris Moers
 */
function SnSmartComments(author, applicationScope, objectType) {
	author = author || '&lt;me&gt;';
	applicationScope = applicationScope || 'global';
	objectType = objectType || 'undefined';

	var smartcomments =  (function (){
		
		var esprima = (function () {
			var exports = {};
			(function (root, factory) {
				'use strict';

				// Universal Module Definition (UMD) to support AMD, CommonJS/Node.js,
				// Rhino, and plain browser loading.
				if (typeof define === 'function' &amp;&amp; define.amd) {
					define(['exports'], factory);
				} else if (typeof exports !== 'undefined') {
					factory(exports);
				} else {
					factory((root.esprima = {}));
				}
			}(this, function (exports) {
				'use strict';

				var Token,
					TokenName,
					FnExprTokens,
					Syntax,
					PropertyKind,
					Messages,
					Regex,
					SyntaxTreeDelegate,
					source,
					strict,
					index,
					lineNumber,
					lineStart,
					length,
					delegate,
					lookahead,
					state,
					extra;

				Token = {
					BooleanLiteral: 1,
					EOF: 2,
					Identifier: 3,
					Keyword: 4,
					NullLiteral: 5,
					NumericLiteral: 6,
					Punctuator: 7,
					StringLiteral: 8,
					RegularExpression: 9
				};

				TokenName = {};
				TokenName[Token.BooleanLiteral] = 'Boolean';
				TokenName[Token.EOF] = '&lt;end&gt;';
				TokenName[Token.Identifier] = 'Identifier';
				TokenName[Token.Keyword] = 'Keyword';
				TokenName[Token.NullLiteral] = 'Null';
				TokenName[Token.NumericLiteral] = 'Numeric';
				TokenName[Token.Punctuator] = 'Punctuator';
				TokenName[Token.StringLiteral] = 'String';
				TokenName[Token.RegularExpression] = 'RegularExpression';

				// A function following one of those tokens is an expression.
				FnExprTokens = ['(', '{', '[', 'in', 'typeof', 'instanceof', 'new',
					'return', 'case', 'delete', 'throw', 'void',
					// assignment operators
					'=', '+=', '-=', '*=', '/=', '%=', '&lt;&lt;=', '&gt;&gt;=', '&gt;&gt;&gt;=',
					'&amp;=', '|=', '^=', ',',
					// binary/unary operators
					'+', '-', '*', '/', '%', '++', '--', '&lt;&lt;', '&gt;&gt;', '&gt;&gt;&gt;', '&amp;',
					'|', '^', '!', '~', '&amp;&amp;', '||', '?', ':', '===', '==', '&gt;=',
					'&lt;=', '&lt;', '&gt;', '!=', '!=='];

				Syntax = {
					AssignmentExpression: 'AssignmentExpression',
					ArrayExpression: 'ArrayExpression',
					BlockStatement: 'BlockStatement',
					BinaryExpression: 'BinaryExpression',
					BreakStatement: 'BreakStatement',
					CallExpression: 'CallExpression',
					CatchClause: 'CatchClause',
					ConditionalExpression: 'ConditionalExpression',
					ContinueStatement: 'ContinueStatement',
					DoWhileStatement: 'DoWhileStatement',
					DebuggerStatement: 'DebuggerStatement',
					EmptyStatement: 'EmptyStatement',
					ExpressionStatement: 'ExpressionStatement',
					ForStatement: 'ForStatement',
					ForInStatement: 'ForInStatement',
					FunctionDeclaration: 'FunctionDeclaration',
					FunctionExpression: 'FunctionExpression',
					Identifier: 'Identifier',
					IfStatement: 'IfStatement',
					Literal: 'Literal',
					LabeledStatement: 'LabeledStatement',
					LogicalExpression: 'LogicalExpression',
					MemberExpression: 'MemberExpression',
					NewExpression: 'NewExpression',
					ObjectExpression: 'ObjectExpression',
					Program: 'Program',
					Property: 'Property',
					ReturnStatement: 'ReturnStatement',
					SequenceExpression: 'SequenceExpression',
					SwitchStatement: 'SwitchStatement',
					SwitchCase: 'SwitchCase',
					ThisExpression: 'ThisExpression',
					ThrowStatement: 'ThrowStatement',
					TryStatement: 'TryStatement',
					UnaryExpression: 'UnaryExpression',
					UpdateExpression: 'UpdateExpression',
					VariableDeclaration: 'VariableDeclaration',
					VariableDeclarator: 'VariableDeclarator',
					WhileStatement: 'WhileStatement',
					WithStatement: 'WithStatement'
				};

				PropertyKind = {
					Data: 1,
					Get: 2,
					Set: 4
				};

				// Error messages should be identical to V8.
				Messages = {
					UnexpectedToken: 'Unexpected token %0',
					UnexpectedNumber: 'Unexpected number',
					UnexpectedString: 'Unexpected string',
					UnexpectedIdentifier: 'Unexpected identifier',
					UnexpectedReserved: 'Unexpected reserved word',
					UnexpectedEOS: 'Unexpected end of input',
					NewlineAfterThrow: 'Illegal newline after throw',
					InvalidRegExp: 'Invalid regular expression',
					UnterminatedRegExp: 'Invalid regular expression: missing /',
					InvalidLHSInAssignment: 'Invalid left-hand side in assignment',
					InvalidLHSInForIn: 'Invalid left-hand side in for-in',
					MultipleDefaultsInSwitch: 'More than one default clause in switch statement',
					NoCatchOrFinally: 'Missing catch or finally after try',
					UnknownLabel: 'Undefined label \'%0\'',
					Redeclaration: '%0 \'%1\' has already been declared',
					IllegalContinue: 'Illegal continue statement',
					IllegalBreak: 'Illegal break statement',
					IllegalReturn: 'Illegal return statement',
					StrictModeWith: 'Strict mode code may not include a with statement',
					StrictCatchVariable: 'Catch variable may not be eval or arguments in strict mode',
					StrictVarName: 'Variable name may not be eval or arguments in strict mode',
					StrictParamName: 'Parameter name eval or arguments is not allowed in strict mode',
					StrictParamDupe: 'Strict mode function may not have duplicate parameter names',
					StrictFunctionName: 'Function name may not be eval or arguments in strict mode',
					StrictOctalLiteral: 'Octal literals are not allowed in strict mode.',
					StrictDelete: 'Delete of an unqualified identifier in strict mode.',
					StrictDuplicateProperty: 'Duplicate data property in object literal not allowed in strict mode',
					AccessorDataProperty: 'Object literal may not have data and accessor property with the same name',
					AccessorGetSet: 'Object literal may not have multiple get/set accessors with the same name',
					StrictLHSAssignment: 'Assignment to eval or arguments is not allowed in strict mode',
					StrictLHSPostfix: 'Postfix increment/decrement may not have eval or arguments operand in strict mode',
					StrictLHSPrefix: 'Prefix increment/decrement may not have eval or arguments operand in strict mode',
					StrictReservedWord: 'Use of future reserved word in strict mode'
				};

				// See also tools/generate-unicode-regex.py.
				Regex = {
					NonAsciiIdentifierStart: new RegExp('[\xaa\xb5\xba\xc0-\xd6\xd8-\xf6\xf8-\u02c1\u02c6-\u02d1\u02e0-\u02e4\u02ec\u02ee\u0370-\u0374\u0376\u0377\u037a-\u037d\u0386\u0388-\u038a\u038c\u038e-\u03a1\u03a3-\u03f5\u03f7-\u0481\u048a-\u0527\u0531-\u0556\u0559\u0561-\u0587\u05d0-\u05ea\u05f0-\u05f2\u0620-\u064a\u066e\u066f\u0671-\u06d3\u06d5\u06e5\u06e6\u06ee\u06ef\u06fa-\u06fc\u06ff\u0710\u0712-\u072f\u074d-\u07a5\u07b1\u07ca-\u07ea\u07f4\u07f5\u07fa\u0800-\u0815\u081a\u0824\u0828\u0840-\u0858\u08a0\u08a2-\u08ac\u0904-\u0939\u093d\u0950\u0958-\u0961\u0971-\u0977\u0979-\u097f\u0985-\u098c\u098f\u0990\u0993-\u09a8\u09aa-\u09b0\u09b2\u09b6-\u09b9\u09bd\u09ce\u09dc\u09dd\u09df-\u09e1\u09f0\u09f1\u0a05-\u0a0a\u0a0f\u0a10\u0a13-\u0a28\u0a2a-\u0a30\u0a32\u0a33\u0a35\u0a36\u0a38\u0a39\u0a59-\u0a5c\u0a5e\u0a72-\u0a74\u0a85-\u0a8d\u0a8f-\u0a91\u0a93-\u0aa8\u0aaa-\u0ab0\u0ab2\u0ab3\u0ab5-\u0ab9\u0abd\u0ad0\u0ae0\u0ae1\u0b05-\u0b0c\u0b0f\u0b10\u0b13-\u0b28\u0b2a-\u0b30\u0b32\u0b33\u0b35-\u0b39\u0b3d\u0b5c\u0b5d\u0b5f-\u0b61\u0b71\u0b83\u0b85-\u0b8a\u0b8e-\u0b90\u0b92-\u0b95\u0b99\u0b9a\u0b9c\u0b9e\u0b9f\u0ba3\u0ba4\u0ba8-\u0baa\u0bae-\u0bb9\u0bd0\u0c05-\u0c0c\u0c0e-\u0c10\u0c12-\u0c28\u0c2a-\u0c33\u0c35-\u0c39\u0c3d\u0c58\u0c59\u0c60\u0c61\u0c85-\u0c8c\u0c8e-\u0c90\u0c92-\u0ca8\u0caa-\u0cb3\u0cb5-\u0cb9\u0cbd\u0cde\u0ce0\u0ce1\u0cf1\u0cf2\u0d05-\u0d0c\u0d0e-\u0d10\u0d12-\u0d3a\u0d3d\u0d4e\u0d60\u0d61\u0d7a-\u0d7f\u0d85-\u0d96\u0d9a-\u0db1\u0db3-\u0dbb\u0dbd\u0dc0-\u0dc6\u0e01-\u0e30\u0e32\u0e33\u0e40-\u0e46\u0e81\u0e82\u0e84\u0e87\u0e88\u0e8a\u0e8d\u0e94-\u0e97\u0e99-\u0e9f\u0ea1-\u0ea3\u0ea5\u0ea7\u0eaa\u0eab\u0ead-\u0eb0\u0eb2\u0eb3\u0ebd\u0ec0-\u0ec4\u0ec6\u0edc-\u0edf\u0f00\u0f40-\u0f47\u0f49-\u0f6c\u0f88-\u0f8c\u1000-\u102a\u103f\u1050-\u1055\u105a-\u105d\u1061\u1065\u1066\u106e-\u1070\u1075-\u1081\u108e\u10a0-\u10c5\u10c7\u10cd\u10d0-\u10fa\u10fc-\u1248\u124a-\u124d\u1250-\u1256\u1258\u125a-\u125d\u1260-\u1288\u128a-\u128d\u1290-\u12b0\u12b2-\u12b5\u12b8-\u12be\u12c0\u12c2-\u12c5\u12c8-\u12d6\u12d8-\u1310\u1312-\u1315\u1318-\u135a\u1380-\u138f\u13a0-\u13f4\u1401-\u166c\u166f-\u167f\u1681-\u169a\u16a0-\u16ea\u16ee-\u16f0\u1700-\u170c\u170e-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176c\u176e-\u1770\u1780-\u17b3\u17d7\u17dc\u1820-\u1877\u1880-\u18a8\u18aa\u18b0-\u18f5\u1900-\u191c\u1950-\u196d\u1970-\u1974\u1980-\u19ab\u19c1-\u19c7\u1a00-\u1a16\u1a20-\u1a54\u1aa7\u1b05-\u1b33\u1b45-\u1b4b\u1b83-\u1ba0\u1bae\u1baf\u1bba-\u1be5\u1c00-\u1c23\u1c4d-\u1c4f\u1c5a-\u1c7d\u1ce9-\u1cec\u1cee-\u1cf1\u1cf5\u1cf6\u1d00-\u1dbf\u1e00-\u1f15\u1f18-\u1f1d\u1f20-\u1f45\u1f48-\u1f4d\u1f50-\u1f57\u1f59\u1f5b\u1f5d\u1f5f-\u1f7d\u1f80-\u1fb4\u1fb6-\u1fbc\u1fbe\u1fc2-\u1fc4\u1fc6-\u1fcc\u1fd0-\u1fd3\u1fd6-\u1fdb\u1fe0-\u1fec\u1ff2-\u1ff4\u1ff6-\u1ffc\u2071\u207f\u2090-\u209c\u2102\u2107\u210a-\u2113\u2115\u2119-\u211d\u2124\u2126\u2128\u212a-\u212d\u212f-\u2139\u213c-\u213f\u2145-\u2149\u214e\u2160-\u2188\u2c00-\u2c2e\u2c30-\u2c5e\u2c60-\u2ce4\u2ceb-\u2cee\u2cf2\u2cf3\u2d00-\u2d25\u2d27\u2d2d\u2d30-\u2d67\u2d6f\u2d80-\u2d96\u2da0-\u2da6\u2da8-\u2dae\u2db0-\u2db6\u2db8-\u2dbe\u2dc0-\u2dc6\u2dc8-\u2dce\u2dd0-\u2dd6\u2dd8-\u2dde\u2e2f\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303c\u3041-\u3096\u309d-\u309f\u30a1-\u30fa\u30fc-\u30ff\u3105-\u312d\u3131-\u318e\u31a0-\u31ba\u31f0-\u31ff\u3400-\u4db5\u4e00-\u9fcc\ua000-\ua48c\ua4d0-\ua4fd\ua500-\ua60c\ua610-\ua61f\ua62a\ua62b\ua640-\ua66e\ua67f-\ua697\ua6a0-\ua6ef\ua717-\ua71f\ua722-\ua788\ua78b-\ua78e\ua790-\ua793\ua7a0-\ua7aa\ua7f8-\ua801\ua803-\ua805\ua807-\ua80a\ua80c-\ua822\ua840-\ua873\ua882-\ua8b3\ua8f2-\ua8f7\ua8fb\ua90a-\ua925\ua930-\ua946\ua960-\ua97c\ua984-\ua9b2\ua9cf\uaa00-\uaa28\uaa40-\uaa42\uaa44-\uaa4b\uaa60-\uaa76\uaa7a\uaa80-\uaaaf\uaab1\uaab5\uaab6\uaab9-\uaabd\uaac0\uaac2\uaadb-\uaadd\uaae0-\uaaea\uaaf2-\uaaf4\uab01-\uab06\uab09-\uab0e\uab11-\uab16\uab20-\uab26\uab28-\uab2e\uabc0-\uabe2\uac00-\ud7a3\ud7b0-\ud7c6\ud7cb-\ud7fb\uf900-\ufa6d\ufa70-\ufad9\ufb00-\ufb06\ufb13-\ufb17\ufb1d\ufb1f-\ufb28\ufb2a-\ufb36\ufb38-\ufb3c\ufb3e\ufb40\ufb41\ufb43\ufb44\ufb46-\ufbb1\ufbd3-\ufd3d\ufd50-\ufd8f\ufd92-\ufdc7\ufdf0-\ufdfb\ufe70-\ufe74\ufe76-\ufefc\uff21-\uff3a\uff41-\uff5a\uff66-\uffbe\uffc2-\uffc7\uffca-\uffcf\uffd2-\uffd7\uffda-\uffdc]'),
					NonAsciiIdentifierPart: new RegExp('[\xaa\xb5\xba\xc0-\xd6\xd8-\xf6\xf8-\u02c1\u02c6-\u02d1\u02e0-\u02e4\u02ec\u02ee\u0300-\u0374\u0376\u0377\u037a-\u037d\u0386\u0388-\u038a\u038c\u038e-\u03a1\u03a3-\u03f5\u03f7-\u0481\u0483-\u0487\u048a-\u0527\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05bd\u05bf\u05c1\u05c2\u05c4\u05c5\u05c7\u05d0-\u05ea\u05f0-\u05f2\u0610-\u061a\u0620-\u0669\u066e-\u06d3\u06d5-\u06dc\u06df-\u06e8\u06ea-\u06fc\u06ff\u0710-\u074a\u074d-\u07b1\u07c0-\u07f5\u07fa\u0800-\u082d\u0840-\u085b\u08a0\u08a2-\u08ac\u08e4-\u08fe\u0900-\u0963\u0966-\u096f\u0971-\u0977\u0979-\u097f\u0981-\u0983\u0985-\u098c\u098f\u0990\u0993-\u09a8\u09aa-\u09b0\u09b2\u09b6-\u09b9\u09bc-\u09c4\u09c7\u09c8\u09cb-\u09ce\u09d7\u09dc\u09dd\u09df-\u09e3\u09e6-\u09f1\u0a01-\u0a03\u0a05-\u0a0a\u0a0f\u0a10\u0a13-\u0a28\u0a2a-\u0a30\u0a32\u0a33\u0a35\u0a36\u0a38\u0a39\u0a3c\u0a3e-\u0a42\u0a47\u0a48\u0a4b-\u0a4d\u0a51\u0a59-\u0a5c\u0a5e\u0a66-\u0a75\u0a81-\u0a83\u0a85-\u0a8d\u0a8f-\u0a91\u0a93-\u0aa8\u0aaa-\u0ab0\u0ab2\u0ab3\u0ab5-\u0ab9\u0abc-\u0ac5\u0ac7-\u0ac9\u0acb-\u0acd\u0ad0\u0ae0-\u0ae3\u0ae6-\u0aef\u0b01-\u0b03\u0b05-\u0b0c\u0b0f\u0b10\u0b13-\u0b28\u0b2a-\u0b30\u0b32\u0b33\u0b35-\u0b39\u0b3c-\u0b44\u0b47\u0b48\u0b4b-\u0b4d\u0b56\u0b57\u0b5c\u0b5d\u0b5f-\u0b63\u0b66-\u0b6f\u0b71\u0b82\u0b83\u0b85-\u0b8a\u0b8e-\u0b90\u0b92-\u0b95\u0b99\u0b9a\u0b9c\u0b9e\u0b9f\u0ba3\u0ba4\u0ba8-\u0baa\u0bae-\u0bb9\u0bbe-\u0bc2\u0bc6-\u0bc8\u0bca-\u0bcd\u0bd0\u0bd7\u0be6-\u0bef\u0c01-\u0c03\u0c05-\u0c0c\u0c0e-\u0c10\u0c12-\u0c28\u0c2a-\u0c33\u0c35-\u0c39\u0c3d-\u0c44\u0c46-\u0c48\u0c4a-\u0c4d\u0c55\u0c56\u0c58\u0c59\u0c60-\u0c63\u0c66-\u0c6f\u0c82\u0c83\u0c85-\u0c8c\u0c8e-\u0c90\u0c92-\u0ca8\u0caa-\u0cb3\u0cb5-\u0cb9\u0cbc-\u0cc4\u0cc6-\u0cc8\u0cca-\u0ccd\u0cd5\u0cd6\u0cde\u0ce0-\u0ce3\u0ce6-\u0cef\u0cf1\u0cf2\u0d02\u0d03\u0d05-\u0d0c\u0d0e-\u0d10\u0d12-\u0d3a\u0d3d-\u0d44\u0d46-\u0d48\u0d4a-\u0d4e\u0d57\u0d60-\u0d63\u0d66-\u0d6f\u0d7a-\u0d7f\u0d82\u0d83\u0d85-\u0d96\u0d9a-\u0db1\u0db3-\u0dbb\u0dbd\u0dc0-\u0dc6\u0dca\u0dcf-\u0dd4\u0dd6\u0dd8-\u0ddf\u0df2\u0df3\u0e01-\u0e3a\u0e40-\u0e4e\u0e50-\u0e59\u0e81\u0e82\u0e84\u0e87\u0e88\u0e8a\u0e8d\u0e94-\u0e97\u0e99-\u0e9f\u0ea1-\u0ea3\u0ea5\u0ea7\u0eaa\u0eab\u0ead-\u0eb9\u0ebb-\u0ebd\u0ec0-\u0ec4\u0ec6\u0ec8-\u0ecd\u0ed0-\u0ed9\u0edc-\u0edf\u0f00\u0f18\u0f19\u0f20-\u0f29\u0f35\u0f37\u0f39\u0f3e-\u0f47\u0f49-\u0f6c\u0f71-\u0f84\u0f86-\u0f97\u0f99-\u0fbc\u0fc6\u1000-\u1049\u1050-\u109d\u10a0-\u10c5\u10c7\u10cd\u10d0-\u10fa\u10fc-\u1248\u124a-\u124d\u1250-\u1256\u1258\u125a-\u125d\u1260-\u1288\u128a-\u128d\u1290-\u12b0\u12b2-\u12b5\u12b8-\u12be\u12c0\u12c2-\u12c5\u12c8-\u12d6\u12d8-\u1310\u1312-\u1315\u1318-\u135a\u135d-\u135f\u1380-\u138f\u13a0-\u13f4\u1401-\u166c\u166f-\u167f\u1681-\u169a\u16a0-\u16ea\u16ee-\u16f0\u1700-\u170c\u170e-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176c\u176e-\u1770\u1772\u1773\u1780-\u17d3\u17d7\u17dc\u17dd\u17e0-\u17e9\u180b-\u180d\u1810-\u1819\u1820-\u1877\u1880-\u18aa\u18b0-\u18f5\u1900-\u191c\u1920-\u192b\u1930-\u193b\u1946-\u196d\u1970-\u1974\u1980-\u19ab\u19b0-\u19c9\u19d0-\u19d9\u1a00-\u1a1b\u1a20-\u1a5e\u1a60-\u1a7c\u1a7f-\u1a89\u1a90-\u1a99\u1aa7\u1b00-\u1b4b\u1b50-\u1b59\u1b6b-\u1b73\u1b80-\u1bf3\u1c00-\u1c37\u1c40-\u1c49\u1c4d-\u1c7d\u1cd0-\u1cd2\u1cd4-\u1cf6\u1d00-\u1de6\u1dfc-\u1f15\u1f18-\u1f1d\u1f20-\u1f45\u1f48-\u1f4d\u1f50-\u1f57\u1f59\u1f5b\u1f5d\u1f5f-\u1f7d\u1f80-\u1fb4\u1fb6-\u1fbc\u1fbe\u1fc2-\u1fc4\u1fc6-\u1fcc\u1fd0-\u1fd3\u1fd6-\u1fdb\u1fe0-\u1fec\u1ff2-\u1ff4\u1ff6-\u1ffc\u200c\u200d\u203f\u2040\u2054\u2071\u207f\u2090-\u209c\u20d0-\u20dc\u20e1\u20e5-\u20f0\u2102\u2107\u210a-\u2113\u2115\u2119-\u211d\u2124\u2126\u2128\u212a-\u212d\u212f-\u2139\u213c-\u213f\u2145-\u2149\u214e\u2160-\u2188\u2c00-\u2c2e\u2c30-\u2c5e\u2c60-\u2ce4\u2ceb-\u2cf3\u2d00-\u2d25\u2d27\u2d2d\u2d30-\u2d67\u2d6f\u2d7f-\u2d96\u2da0-\u2da6\u2da8-\u2dae\u2db0-\u2db6\u2db8-\u2dbe\u2dc0-\u2dc6\u2dc8-\u2dce\u2dd0-\u2dd6\u2dd8-\u2dde\u2de0-\u2dff\u2e2f\u3005-\u3007\u3021-\u302f\u3031-\u3035\u3038-\u303c\u3041-\u3096\u3099\u309a\u309d-\u309f\u30a1-\u30fa\u30fc-\u30ff\u3105-\u312d\u3131-\u318e\u31a0-\u31ba\u31f0-\u31ff\u3400-\u4db5\u4e00-\u9fcc\ua000-\ua48c\ua4d0-\ua4fd\ua500-\ua60c\ua610-\ua62b\ua640-\ua66f\ua674-\ua67d\ua67f-\ua697\ua69f-\ua6f1\ua717-\ua71f\ua722-\ua788\ua78b-\ua78e\ua790-\ua793\ua7a0-\ua7aa\ua7f8-\ua827\ua840-\ua873\ua880-\ua8c4\ua8d0-\ua8d9\ua8e0-\ua8f7\ua8fb\ua900-\ua92d\ua930-\ua953\ua960-\ua97c\ua980-\ua9c0\ua9cf-\ua9d9\uaa00-\uaa36\uaa40-\uaa4d\uaa50-\uaa59\uaa60-\uaa76\uaa7a\uaa7b\uaa80-\uaac2\uaadb-\uaadd\uaae0-\uaaef\uaaf2-\uaaf6\uab01-\uab06\uab09-\uab0e\uab11-\uab16\uab20-\uab26\uab28-\uab2e\uabc0-\uabea\uabec\uabed\uabf0-\uabf9\uac00-\ud7a3\ud7b0-\ud7c6\ud7cb-\ud7fb\uf900-\ufa6d\ufa70-\ufad9\ufb00-\ufb06\ufb13-\ufb17\ufb1d-\ufb28\ufb2a-\ufb36\ufb38-\ufb3c\ufb3e\ufb40\ufb41\ufb43\ufb44\ufb46-\ufbb1\ufbd3-\ufd3d\ufd50-\ufd8f\ufd92-\ufdc7\ufdf0-\ufdfb\ufe00-\ufe0f\ufe20-\ufe26\ufe33\ufe34\ufe4d-\ufe4f\ufe70-\ufe74\ufe76-\ufefc\uff10-\uff19\uff21-\uff3a\uff3f\uff41-\uff5a\uff66-\uffbe\uffc2-\uffc7\uffca-\uffcf\uffd2-\uffd7\uffda-\uffdc]')
				};

				// Ensure the condition is true, otherwise throw an error.
				// This is only to have a better contract semantic, i.e. another safety net
				// to catch a logic error. The condition shall be fulfilled in normal case.
				// Do NOT use this to enforce a certain condition on any user input.

				function assert(condition, message) {
					if (!condition) {
						throw new Error('ASSERT: ' + message);
					}
				}

				function isDecimalDigit(ch) {
					return (ch &gt;= 48 &amp;&amp; ch &lt;= 57);   // 0..9
				}

				function isHexDigit(ch) {
					return '0123456789abcdefABCDEF'.indexOf(ch) &gt;= 0;
				}

				function isOctalDigit(ch) {
					return '01234567'.indexOf(ch) &gt;= 0;
				}


				// 7.2 White Space

				function isWhiteSpace(ch) {
					return (ch === 32) ||  // space
						(ch === 9) ||      // tab
						(ch === 0xB) ||
						(ch === 0xC) ||
						(ch === 0xA0) ||
						(ch &gt;= 0x1680 &amp;&amp; '\u1680\u180E\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\uFEFF'.indexOf(String.fromCharCode(ch)) &gt; 0);
				}

				// 7.3 Line Terminators

				function isLineTerminator(ch) {
					return (ch === 10) || (ch === 13) || (ch === 0x2028) || (ch === 0x2029);
				}

				// 7.6 Identifier Names and Identifiers

				function isIdentifierStart(ch) {
					return (ch === 36) || (ch === 95) ||  // $ (dollar) and _ (underscore)
						(ch &gt;= 65 &amp;&amp; ch &lt;= 90) ||         // A..Z
						(ch &gt;= 97 &amp;&amp; ch &lt;= 122) ||        // a..z
						(ch === 92) ||                    // \ (backslash)
						((ch &gt;= 0x80) &amp;&amp; Regex.NonAsciiIdentifierStart.test(String.fromCharCode(ch)));
				}

				function isIdentifierPart(ch) {
					return (ch === 36) || (ch === 95) ||  // $ (dollar) and _ (underscore)
						(ch &gt;= 65 &amp;&amp; ch &lt;= 90) ||         // A..Z
						(ch &gt;= 97 &amp;&amp; ch &lt;= 122) ||        // a..z
						(ch &gt;= 48 &amp;&amp; ch &lt;= 57) ||         // 0..9
						(ch === 92) ||                    // \ (backslash)
						((ch &gt;= 0x80) &amp;&amp; Regex.NonAsciiIdentifierPart.test(String.fromCharCode(ch)));
				}

				// 7.6.1.2 Future Reserved Words

				function isFutureReservedWord(id) {
					switch (id) {
						case 'class':
						case 'enum':
						case 'export':
						case 'extends':
						case 'import':
						case 'super':
							return true;
						default:
							return false;
					}
				}

				function isStrictModeReservedWord(id) {
					switch (id) {
						case 'implements':
						case 'interface':
						case 'package':
						case 'private':
						case 'protected':
						case 'public':
						case 'static':
						case 'yield':
						case 'let':
							return true;
						default:
							return false;
					}
				}

				function isRestrictedWord(id) {
					return id === 'eval' || id === 'arguments';
				}

				// 7.6.1.1 Keywords

				function isKeyword(id) {
					if (strict &amp;&amp; isStrictModeReservedWord(id)) {
						return true;
					}

					// 'const' is specialized as Keyword in V8.
					// 'yield' and 'let' are for compatiblity with SpiderMonkey and ES.next.
					// Some others are from future reserved words.

					switch (id.length) {
						case 2:
							return (id === 'if') || (id === 'in') || (id === 'do');
						case 3:
							return (id === 'var') || (id === 'for') || (id === 'new') ||
								(id === 'try') || (id === 'let');
						case 4:
							return (id === 'this') || (id === 'else') || (id === 'case') ||
								(id === 'void') || (id === 'with') || (id === 'enum');
						case 5:
							return (id === 'while') || (id === 'break') || (id === 'catch') ||
								(id === 'throw') || (id === 'const') || (id === 'yield') ||
								(id === 'class') || (id === 'super');
						case 6:
							return (id === 'return') || (id === 'typeof') || (id === 'delete') ||
								(id === 'switch') || (id === 'export') || (id === 'import');
						case 7:
							return (id === 'default') || (id === 'finally') || (id === 'extends');
						case 8:
							return (id === 'function') || (id === 'continue') || (id === 'debugger');
						case 10:
							return (id === 'instanceof');
						default:
							return false;
					}
				}

				// 7.4 Comments

				function addComment(type, value, start, end, loc) {
					var comment;

					assert(typeof start === 'number', 'Comment must have valid position');

					// Because the way the actual token is scanned, often the comments
					// (if any) are skipped twice during the lexical analysis.
					// Thus, we need to skip adding a comment if the comment array already
					// handled it.
					if (state.lastCommentStart &gt;= start) {
						return;
					}
					state.lastCommentStart = start;

					comment = {
						type: type,
						value: value
					};
					if (extra.range) {
						comment.range = [start, end];
					}
					if (extra.loc) {
						comment.loc = loc;
					}
					extra.comments.push(comment);
				}

				function skipSingleLineComment() {
					var start, loc, ch, comment;

					start = index - 2;
					loc = {
						start: {
							line: lineNumber,
							column: index - lineStart - 2
						}
					};

					while (index &lt; length) {
						ch = source.charCodeAt(index);
						++index;
						if (isLineTerminator(ch)) {
							if (extra.comments) {
								comment = source.slice(start + 2, index - 1);
								loc.end = {
									line: lineNumber,
									column: index - lineStart - 1
								};
								addComment('Line', comment, start, index - 1, loc);
							}
							if (ch === 13 &amp;&amp; source.charCodeAt(index) === 10) {
								++index;
							}
							++lineNumber;
							lineStart = index;
							return;
						}
					}

					if (extra.comments) {
						comment = source.slice(start + 2, index);
						loc.end = {
							line: lineNumber,
							column: index - lineStart
						};
						addComment('Line', comment, start, index, loc);
					}
				}

				function skipMultiLineComment() {
					var start, loc, ch, comment;

					if (extra.comments) {
						start = index - 2;
						loc = {
							start: {
								line: lineNumber,
								column: index - lineStart - 2
							}
						};
					}

					while (index &lt; length) {
						ch = source.charCodeAt(index);
						if (isLineTerminator(ch)) {
							if (ch === 13 &amp;&amp; source.charCodeAt(index + 1) === 10) {
								++index;
							}
							++lineNumber;
							++index;
							lineStart = index;
							if (index &gt;= length) {
								throwError({}, Messages.UnexpectedToken, 'ILLEGAL');
							}
						} else if (ch === 42) {
							// Block comment ends with '*/' (char #42, char #47).
							if (source.charCodeAt(index + 1) === 47) {
								++index;
								++index;
								if (extra.comments) {
									comment = source.slice(start + 2, index - 2);
									loc.end = {
										line: lineNumber,
										column: index - lineStart
									};
									addComment('Block', comment, start, index, loc);
								}
								return;
							}
							++index;
						} else {
							++index;
						}
					}

					throwError({}, Messages.UnexpectedToken, 'ILLEGAL');
				}

				function skipComment() {
					var ch;

					while (index &lt; length) {
						ch = source.charCodeAt(index);

						if (isWhiteSpace(ch)) {
							++index;
						} else if (isLineTerminator(ch)) {
							++index;
							if (ch === 13 &amp;&amp; source.charCodeAt(index) === 10) {
								++index;
							}
							++lineNumber;
							lineStart = index;
						} else if (ch === 47) { // 47 is '/'
							ch = source.charCodeAt(index + 1);
							if (ch === 47) {
								++index;
								++index;
								skipSingleLineComment();
							} else if (ch === 42) {  // 42 is '*'
								++index;
								++index;
								skipMultiLineComment();
							} else {
								break;
							}
						} else if (ch === 60) { // 60 is '&lt;'
							if (source.slice(index + 1, index + 4) === '!--') {
								++index; // `&lt;`
								++index; // `!`
								++index; // `-`
								++index; // `-`
								skipSingleLineComment();
							} else {
								break;
							}
						} else {
							break;
						}
					}
				}

				function scanHexEscape(prefix) {
					var i, len, ch, code = 0;

					len = (prefix === 'u') ? 4 : 2;
					for (i = 0; i &lt; len; ++i) {
						if (index &lt; length &amp;&amp; isHexDigit(source[index])) {
							ch = source[index++];
							code = code * 16 + '0123456789abcdef'.indexOf(ch.toLowerCase());
						} else {
							return '';
						}
					}
					return String.fromCharCode(code);
				}

				function getEscapedIdentifier() {
					var ch, id;

					ch = source.charCodeAt(index++);
					id = String.fromCharCode(ch);

					// '\u' (char #92, char #117) denotes an escaped character.
					if (ch === 92) {
						if (source.charCodeAt(index) !== 117) {
							throwError({}, Messages.UnexpectedToken, 'ILLEGAL');
						}
						++index;
						ch = scanHexEscape('u');
						if (!ch || ch === '\\' || !isIdentifierStart(ch.charCodeAt(0))) {
							throwError({}, Messages.UnexpectedToken, 'ILLEGAL');
						}
						id = ch;
					}

					while (index &lt; length) {
						ch = source.charCodeAt(index);
						if (!isIdentifierPart(ch)) {
							break;
						}
						++index;
						id += String.fromCharCode(ch);

						// '\u' (char #92, char #117) denotes an escaped character.
						if (ch === 92) {
							id = id.substr(0, id.length - 1);
							if (source.charCodeAt(index) !== 117) {
								throwError({}, Messages.UnexpectedToken, 'ILLEGAL');
							}
							++index;
							ch = scanHexEscape('u');
							if (!ch || ch === '\\' || !isIdentifierPart(ch.charCodeAt(0))) {
								throwError({}, Messages.UnexpectedToken, 'ILLEGAL');
							}
							id += ch;
						}
					}

					return id;
				}

				function getIdentifier() {
					var start, ch;

					start = index++;
					while (index &lt; length) {
						ch = source.charCodeAt(index);
						if (ch === 92) {
							// Blackslash (char #92) marks Unicode escape sequence.
							index = start;
							return getEscapedIdentifier();
						}
						if (isIdentifierPart(ch)) {
							++index;
						} else {
							break;
						}
					}

					return source.slice(start, index);
				}

				function scanIdentifier() {
					var start, id, type;

					start = index;

					// Backslash (char #92) starts an escaped character.
					id = (source.charCodeAt(index) === 92) ? getEscapedIdentifier() : getIdentifier();

					// There is no keyword or literal with only one character.
					// Thus, it must be an identifier.
					if (id.length === 1) {
						type = Token.Identifier;
					} else if (isKeyword(id)) {
						type = Token.Keyword;
					} else if (id === 'null') {
						type = Token.NullLiteral;
					} else if (id === 'true' || id === 'false') {
						type = Token.BooleanLiteral;
					} else {
						type = Token.Identifier;
					}

					return {
						type: type,
						value: id,
						lineNumber: lineNumber,
						lineStart: lineStart,
						range: [start, index]
					};
				}


				// 7.7 Punctuators

				function scanPunctuator() {
					var start = index,
						code = source.charCodeAt(index),
						code2,
						ch1 = source[index],
						ch2,
						ch3,
						ch4;

					switch (code) {

						// Check for most common single-character punctuators.
						case 46:   // . dot
						case 40:   // ( open bracket
						case 41:   // ) close bracket
						case 59:   // ; semicolon
						case 44:   // , comma
						case 123:  // { open curly brace
						case 125:  // } close curly brace
						case 91:   // [
						case 93:   // ]
						case 58:   // :
						case 63:   // ?
						case 126:  // ~
							++index;
							if (extra.tokenize) {
								if (code === 40) {
									extra.openParenToken = extra.tokens.length;
								} else if (code === 123) {
									extra.openCurlyToken = extra.tokens.length;
								}
							}
							return {
								type: Token.Punctuator,
								value: String.fromCharCode(code),
								lineNumber: lineNumber,
								lineStart: lineStart,
								range: [start, index]
							};

						default:
							code2 = source.charCodeAt(index + 1);

							// '=' (char #61) marks an assignment or comparison operator.
							if (code2 === 61) {
								switch (code) {
									case 37:  // %
									case 38:  // &amp;
									case 42:  // *:
									case 43:  // +
									case 45:  // -
									case 47:  // /
									case 60:  // &lt;
									case 62:  // &gt;
									case 94:  // ^
									case 124: // |
										index += 2;
										return {
											type: Token.Punctuator,
											value: String.fromCharCode(code) + String.fromCharCode(code2),
											lineNumber: lineNumber,
											lineStart: lineStart,
											range: [start, index]
										};

									case 33: // !
									case 61: // =
										index += 2;

										// !== and ===
										if (source.charCodeAt(index) === 61) {
											++index;
										}
										return {
											type: Token.Punctuator,
											value: source.slice(start, index),
											lineNumber: lineNumber,
											lineStart: lineStart,
											range: [start, index]
										};
									default:
										break;
								}
							}
							break;
					}

					// Peek more characters.

					ch2 = source[index + 1];
					ch3 = source[index + 2];
					ch4 = source[index + 3];

					// 4-character punctuator: &gt;&gt;&gt;=

					if (ch1 === '&gt;' &amp;&amp; ch2 === '&gt;' &amp;&amp; ch3 === '&gt;') {
						if (ch4 === '=') {
							index += 4;
							return {
								type: Token.Punctuator,
								value: '&gt;&gt;&gt;=',
								lineNumber: lineNumber,
								lineStart: lineStart,
								range: [start, index]
							};
						}
					}

					// 3-character punctuators: === !== &gt;&gt;&gt; &lt;&lt;= &gt;&gt;=

					if (ch1 === '&gt;' &amp;&amp; ch2 === '&gt;' &amp;&amp; ch3 === '&gt;') {
						index += 3;
						return {
							type: Token.Punctuator,
							value: '&gt;&gt;&gt;',
							lineNumber: lineNumber,
							lineStart: lineStart,
							range: [start, index]
						};
					}

					if (ch1 === '&lt;' &amp;&amp; ch2 === '&lt;' &amp;&amp; ch3 === '=') {
						index += 3;
						return {
							type: Token.Punctuator,
							value: '&lt;&lt;=',
							lineNumber: lineNumber,
							lineStart: lineStart,
							range: [start, index]
						};
					}

					if (ch1 === '&gt;' &amp;&amp; ch2 === '&gt;' &amp;&amp; ch3 === '=') {
						index += 3;
						return {
							type: Token.Punctuator,
							value: '&gt;&gt;=',
							lineNumber: lineNumber,
							lineStart: lineStart,
							range: [start, index]
						};
					}

					// Other 2-character punctuators: ++ -- &lt;&lt; &gt;&gt; &amp;&amp; ||

					if (ch1 === ch2 &amp;&amp; ('+-&lt;&gt;&amp;|'.indexOf(ch1) &gt;= 0)) {
						index += 2;
						return {
							type: Token.Punctuator,
							value: ch1 + ch2,
							lineNumber: lineNumber,
							lineStart: lineStart,
							range: [start, index]
						};
					}

					if ('&lt;&gt;=!+-*%&amp;|^/'.indexOf(ch1) &gt;= 0) {
						++index;
						return {
							type: Token.Punctuator,
							value: ch1,
							lineNumber: lineNumber,
							lineStart: lineStart,
							range: [start, index]
						};
					}

					throwError({}, Messages.UnexpectedToken, 'ILLEGAL');
				}

				// 7.8.3 Numeric Literals

				function scanHexLiteral(start) {
					var number = '';

					while (index &lt; length) {
						if (!isHexDigit(source[index])) {
							break;
						}
						number += source[index++];
					}

					if (number.length === 0) {
						throwError({}, Messages.UnexpectedToken, 'ILLEGAL');
					}

					if (isIdentifierStart(source.charCodeAt(index))) {
						throwError({}, Messages.UnexpectedToken, 'ILLEGAL');
					}

					return {
						type: Token.NumericLiteral,
						value: parseInt('0x' + number, 16),
						lineNumber: lineNumber,
						lineStart: lineStart,
						range: [start, index]
					};
				}

				function scanOctalLiteral(start) {
					var number = '0' + source[index++];
					while (index &lt; length) {
						if (!isOctalDigit(source[index])) {
							break;
						}
						number += source[index++];
					}

					if (isIdentifierStart(source.charCodeAt(index)) || isDecimalDigit(source.charCodeAt(index))) {
						throwError({}, Messages.UnexpectedToken, 'ILLEGAL');
					}

					return {
						type: Token.NumericLiteral,
						value: parseInt(number, 8),
						octal: true,
						lineNumber: lineNumber,
						lineStart: lineStart,
						range: [start, index]
					};
				}

				function scanNumericLiteral() {
					var number, start, ch;

					ch = source[index];
					assert(isDecimalDigit(ch.charCodeAt(0)) || (ch === '.'),
						'Numeric literal must start with a decimal digit or a decimal point');

					start = index;
					number = '';
					if (ch !== '.') {
						number = source[index++];
						ch = source[index];

						// Hex number starts with '0x'.
						// Octal number starts with '0'.
						if (number === '0') {
							if (ch === 'x' || ch === 'X') {
								++index;
								return scanHexLiteral(start);
							}
							if (isOctalDigit(ch)) {
								return scanOctalLiteral(start);
							}

							// decimal number starts with '0' such as '09' is illegal.
							if (ch &amp;&amp; isDecimalDigit(ch.charCodeAt(0))) {
								throwError({}, Messages.UnexpectedToken, 'ILLEGAL');
							}
						}

						while (isDecimalDigit(source.charCodeAt(index))) {
							number += source[index++];
						}
						ch = source[index];
					}

					if (ch === '.') {
						number += source[index++];
						while (isDecimalDigit(source.charCodeAt(index))) {
							number += source[index++];
						}
						ch = source[index];
					}

					if (ch === 'e' || ch === 'E') {
						number += source[index++];

						ch = source[index];
						if (ch === '+' || ch === '-') {
							number += source[index++];
						}
						if (isDecimalDigit(source.charCodeAt(index))) {
							while (isDecimalDigit(source.charCodeAt(index))) {
								number += source[index++];
							}
						} else {
							throwError({}, Messages.UnexpectedToken, 'ILLEGAL');
						}
					}

					if (isIdentifierStart(source.charCodeAt(index))) {
						throwError({}, Messages.UnexpectedToken, 'ILLEGAL');
					}

					return {
						type: Token.NumericLiteral,
						value: parseFloat(number),
						lineNumber: lineNumber,
						lineStart: lineStart,
						range: [start, index]
					};
				}

				// 7.8.4 String Literals

				function scanStringLiteral() {
					var str = '', quote, start, ch, code, unescaped, restore, octal = false;

					quote = source[index];
					assert((quote === '\'' || quote === '"'),
						'String literal must starts with a quote');

					start = index;
					++index;

					while (index &lt; length) {
						ch = source[index++];

						if (ch === quote) {
							quote = '';
							break;
						} else if (ch === '\\') {
							ch = source[index++];
							if (!ch || !isLineTerminator(ch.charCodeAt(0))) {
								switch (ch) {
									case 'n':
										str += '\n';
										break;
									case 'r':
										str += '\r';
										break;
									case 't':
										str += '\t';
										break;
									case 'u':
									case 'x':
										restore = index;
										unescaped = scanHexEscape(ch);
										if (unescaped) {
											str += unescaped;
										} else {
											index = restore;
											str += ch;
										}
										break;
									case 'b':
										str += '\b';
										break;
									case 'f':
										str += '\f';
										break;
									case 'v':
										str += '\x0B';
										break;

									default:
										if (isOctalDigit(ch)) {
											code = '01234567'.indexOf(ch);

											// \0 is not octal escape sequence
											if (code !== 0) {
												octal = true;
											}

											if (index &lt; length &amp;&amp; isOctalDigit(source[index])) {
												octal = true;
												code = code * 8 + '01234567'.indexOf(source[index++]);

												// 3 digits are only allowed when string starts
												// with 0, 1, 2, 3
												if ('0123'.indexOf(ch) &gt;= 0 &amp;&amp;
													index &lt; length &amp;&amp;
													isOctalDigit(source[index])) {
													code = code * 8 + '01234567'.indexOf(source[index++]);
												}
											}
											str += String.fromCharCode(code);
										} else {
											str += ch;
										}
										break;
								}
							} else {
								++lineNumber;
								if (ch === '\r' &amp;&amp; source[index] === '\n') {
									++index;
								}
							}
						} else if (isLineTerminator(ch.charCodeAt(0))) {
							break;
						} else {
							str += ch;
						}
					}

					if (quote !== '') {
						throwError({}, Messages.UnexpectedToken, 'ILLEGAL');
					}

					return {
						type: Token.StringLiteral,
						value: str,
						octal: octal,
						lineNumber: lineNumber,
						lineStart: lineStart,
						range: [start, index]
					};
				}

				function scanRegExp() {
					var str, ch, start, pattern, flags, value, classMarker = false, restore, terminated = false;

					lookahead = null;
					skipComment();

					start = index;
					ch = source[index];
					assert(ch === '/', 'Regular expression literal must start with a slash');
					str = source[index++];

					while (index &lt; length) {
						ch = source[index++];
						str += ch;
						if (ch === '\\') {
							ch = source[index++];
							// ECMA-262 7.8.5
							if (isLineTerminator(ch.charCodeAt(0))) {
								throwError({}, Messages.UnterminatedRegExp);
							}
							str += ch;
						} else if (classMarker) {
							if (ch === ']') {
								classMarker = false;
							}
						} else {
							if (ch === '/') {
								terminated = true;
								break;
							} else if (ch === '[') {
								classMarker = true;
							} else if (isLineTerminator(ch.charCodeAt(0))) {
								throwError({}, Messages.UnterminatedRegExp);
							}
						}
					}

					if (!terminated) {
						throwError({}, Messages.UnterminatedRegExp);
					}

					// Exclude leading and trailing slash.
					pattern = str.substr(1, str.length - 2);

					flags = '';
					while (index &lt; length) {
						ch = source[index];
						if (!isIdentifierPart(ch.charCodeAt(0))) {
							break;
						}

						++index;
						if (ch === '\\' &amp;&amp; index &lt; length) {
							ch = source[index];
							if (ch === 'u') {
								++index;
								restore = index;
								ch = scanHexEscape('u');
								if (ch) {
									flags += ch;
									for (str += '\\u'; restore &lt; index; ++restore) {
										str += source[restore];
									}
								} else {
									index = restore;
									flags += 'u';
									str += '\\u';
								}
							} else {
								str += '\\';
							}
						} else {
							flags += ch;
							str += ch;
						}
					}

					try {
						value = new RegExp(pattern, flags);
					} catch (e) {
						throwError({}, Messages.InvalidRegExp);
					}

					peek();


					if (extra.tokenize) {
						return {
							type: Token.RegularExpression,
							value: value,
							lineNumber: lineNumber,
							lineStart: lineStart,
							range: [start, index]
						};
					}
					return {
						literal: str,
						value: value,
						range: [start, index]
					};
				}

				function collectRegex() {
					var pos, loc, regex, token;

					skipComment();

					pos = index;
					loc = {
						start: {
							line: lineNumber,
							column: index - lineStart
						}
					};

					regex = scanRegExp();
					loc.end = {
						line: lineNumber,
						column: index - lineStart
					};

					if (!extra.tokenize) {
						// Pop the previous token, which is likely '/' or '/='
						if (extra.tokens.length &gt; 0) {
							token = extra.tokens[extra.tokens.length - 1];
							if (token.range[0] === pos &amp;&amp; token.type === 'Punctuator') {
								if (token.value === '/' || token.value === '/=') {
									extra.tokens.pop();
								}
							}
						}

						extra.tokens.push({
							type: 'RegularExpression',
							value: regex.literal,
							range: [pos, index],
							loc: loc
						});
					}

					return regex;
				}

				function isIdentifierName(token) {
					return token.type === Token.Identifier ||
						token.type === Token.Keyword ||
						token.type === Token.BooleanLiteral ||
						token.type === Token.NullLiteral;
				}

				function advanceSlash() {
					var prevToken,
						checkToken;
					// Using the following algorithm:
					// https://github.com/mozilla/sweet.js/wiki/design
					prevToken = extra.tokens[extra.tokens.length - 1];
					if (!prevToken) {
						// Nothing before that: it cannot be a division.
						return collectRegex();
					}
					if (prevToken.type === 'Punctuator') {
						if (prevToken.value === ')') {
							checkToken = extra.tokens[extra.openParenToken - 1];
							if (checkToken &amp;&amp;
								checkToken.type === 'Keyword' &amp;&amp;
								(checkToken.value === 'if' ||
									checkToken.value === 'while' ||
									checkToken.value === 'for' ||
									checkToken.value === 'with')) {
								return collectRegex();
							}
							return scanPunctuator();
						}
						if (prevToken.value === '}') {
							// Dividing a function by anything makes little sense,
							// but we have to check for that.
							if (extra.tokens[extra.openCurlyToken - 3] &amp;&amp;
								extra.tokens[extra.openCurlyToken - 3].type === 'Keyword') {
								// Anonymous function.
								checkToken = extra.tokens[extra.openCurlyToken - 4];
								if (!checkToken) {
									return scanPunctuator();
								}
							} else if (extra.tokens[extra.openCurlyToken - 4] &amp;&amp;
								extra.tokens[extra.openCurlyToken - 4].type === 'Keyword') {
								// Named function.
								checkToken = extra.tokens[extra.openCurlyToken - 5];
								if (!checkToken) {
									return collectRegex();
								}
							} else {
								return scanPunctuator();
							}
							// checkToken determines whether the function is
							// a declaration or an expression.
							if (FnExprTokens.indexOf(checkToken.value) &gt;= 0) {
								// It is an expression.
								return scanPunctuator();
							}
							// It is a declaration.
							return collectRegex();
						}
						return collectRegex();
					}
					if (prevToken.type === 'Keyword') {
						return collectRegex();
					}
					return scanPunctuator();
				}

				function advance() {
					var ch;

					skipComment();

					if (index &gt;= length) {
						return {
							type: Token.EOF,
							lineNumber: lineNumber,
							lineStart: lineStart,
							range: [index, index]
						};
					}

					ch = source.charCodeAt(index);

					// Very common: ( and ) and ;
					if (ch === 40 || ch === 41 || ch === 58) {
						return scanPunctuator();
					}

					// String literal starts with single quote (#39) or double quote (#34).
					if (ch === 39 || ch === 34) {
						return scanStringLiteral();
					}

					if (isIdentifierStart(ch)) {
						return scanIdentifier();
					}

					// Dot (.) char #46 can also start a floating-point number, hence the need
					// to check the next character.
					if (ch === 46) {
						if (isDecimalDigit(source.charCodeAt(index + 1))) {
							return scanNumericLiteral();
						}
						return scanPunctuator();
					}

					if (isDecimalDigit(ch)) {
						return scanNumericLiteral();
					}

					// Slash (/) char #47 can also start a regex.
					if (extra.tokenize &amp;&amp; ch === 47) {
						return advanceSlash();
					}

					return scanPunctuator();
				}

				function collectToken() {
					var start, loc, token, range, value;

					skipComment();
					start = index;
					loc = {
						start: {
							line: lineNumber,
							column: index - lineStart
						}
					};

					token = advance();
					loc.end = {
						line: lineNumber,
						column: index - lineStart
					};

					if (token.type !== Token.EOF) {
						range = [token.range[0], token.range[1]];
						value = source.slice(token.range[0], token.range[1]);
						extra.tokens.push({
							type: TokenName[token.type],
							value: value,
							range: range,
							loc: loc
						});
					}

					return token;
				}

				function lex() {
					var token;

					token = lookahead;
					index = token.range[1];
					lineNumber = token.lineNumber;
					lineStart = token.lineStart;

					lookahead = (typeof extra.tokens !== 'undefined') ? collectToken() : advance();

					index = token.range[1];
					lineNumber = token.lineNumber;
					lineStart = token.lineStart;

					return token;
				}

				function peek() {
					var pos, line, start;

					pos = index;
					line = lineNumber;
					start = lineStart;
					lookahead = (typeof extra.tokens !== 'undefined') ? collectToken() : advance();
					index = pos;
					lineNumber = line;
					lineStart = start;
				}

				SyntaxTreeDelegate = {

					name: 'SyntaxTree',

					markStart: function () {
						if (extra.loc) {
							state.markerStack.push(index - lineStart);
							state.markerStack.push(lineNumber);
						}
						if (extra.range) {
							state.markerStack.push(index);
						}
					},

					markEnd: function (node) {
						if (extra.range) {
							node.range = [state.markerStack.pop(), index];
						}
						if (extra.loc) {
							node.loc = {
								start: {
									line: state.markerStack.pop(),
									column: state.markerStack.pop()
								},
								end: {
									line: lineNumber,
									column: index - lineStart
								}
							};
							this.postProcess(node);
						}
						return node;
					},

					markEndIf: function (node) {
						if (node.range || node.loc) {
							if (extra.loc) {
								state.markerStack.pop();
								state.markerStack.pop();
							}
							if (extra.range) {
								state.markerStack.pop();
							}
						} else {
							this.markEnd(node);
						}
						return node;
					},

					postProcess: function (node) {
						if (extra.source) {
							node.loc.source = extra.source;
						}
						return node;
					},

					createArrayExpression: function (elements) {
						return {
							type: Syntax.ArrayExpression,
							elements: elements
						};
					},

					createAssignmentExpression: function (operator, left, right) {
						return {
							type: Syntax.AssignmentExpression,
							operator: operator,
							left: left,
							right: right
						};
					},

					createBinaryExpression: function (operator, left, right) {
						var type = (operator === '||' || operator === '&amp;&amp;') ? Syntax.LogicalExpression :
							Syntax.BinaryExpression;
						return {
							type: type,
							operator: operator,
							left: left,
							right: right
						};
					},

					createBlockStatement: function (body) {
						return {
							type: Syntax.BlockStatement,
							body: body
						};
					},

					createBreakStatement: function (label) {
						return {
							type: Syntax.BreakStatement,
							label: label
						};
					},

					createCallExpression: function (callee, args) {
						return {
							type: Syntax.CallExpression,
							callee: callee,
							'arguments': args
						};
					},

					createCatchClause: function (param, body) {
						return {
							type: Syntax.CatchClause,
							param: param,
							body: body
						};
					},

					createConditionalExpression: function (test, consequent, alternate) {
						return {
							type: Syntax.ConditionalExpression,
							test: test,
							consequent: consequent,
							alternate: alternate
						};
					},

					createContinueStatement: function (label) {
						return {
							type: Syntax.ContinueStatement,
							label: label
						};
					},

					createDebuggerStatement: function () {
						return {
							type: Syntax.DebuggerStatement
						};
					},

					createDoWhileStatement: function (body, test) {
						return {
							type: Syntax.DoWhileStatement,
							body: body,
							test: test
						};
					},

					createEmptyStatement: function () {
						return {
							type: Syntax.EmptyStatement
						};
					},

					createExpressionStatement: function (expression) {
						return {
							type: Syntax.ExpressionStatement,
							expression: expression
						};
					},

					createForStatement: function (init, test, update, body) {
						return {
							type: Syntax.ForStatement,
							init: init,
							test: test,
							update: update,
							body: body
						};
					},

					createForInStatement: function (left, right, body) {
						return {
							type: Syntax.ForInStatement,
							left: left,
							right: right,
							body: body,
							each: false
						};
					},

					createFunctionDeclaration: function (id, params, defaults, body) {
						return {
							type: Syntax.FunctionDeclaration,
							id: id,
							params: params,
							defaults: defaults,
							body: body,
							rest: null,
							generator: false,
							expression: false
						};
					},

					createFunctionExpression: function (id, params, defaults, body) {
						return {
							type: Syntax.FunctionExpression,
							id: id,
							params: params,
							defaults: defaults,
							body: body,
							rest: null,
							generator: false,
							expression: false
						};
					},

					createIdentifier: function (name) {
						return {
							type: Syntax.Identifier,
							name: name
						};
					},

					createIfStatement: function (test, consequent, alternate) {
						return {
							type: Syntax.IfStatement,
							test: test,
							consequent: consequent,
							alternate: alternate
						};
					},

					createLabeledStatement: function (label, body) {
						return {
							type: Syntax.LabeledStatement,
							label: label,
							body: body
						};
					},

					createLiteral: function (token) {
						return {
							type: Syntax.Literal,
							value: token.value,
							raw: source.slice(token.range[0], token.range[1])
						};
					},

					createMemberExpression: function (accessor, object, property) {
						return {
							type: Syntax.MemberExpression,
							computed: accessor === '[',
							object: object,
							property: property
						};
					},

					createNewExpression: function (callee, args) {
						return {
							type: Syntax.NewExpression,
							callee: callee,
							'arguments': args
						};
					},

					createObjectExpression: function (properties) {
						return {
							type: Syntax.ObjectExpression,
							properties: properties
						};
					},

					createPostfixExpression: function (operator, argument) {
						return {
							type: Syntax.UpdateExpression,
							operator: operator,
							argument: argument,
							prefix: false
						};
					},

					createProgram: function (body) {
						return {
							type: Syntax.Program,
							body: body
						};
					},

					createProperty: function (kind, key, value) {
						return {
							type: Syntax.Property,
							key: key,
							value: value,
							kind: kind
						};
					},

					createReturnStatement: function (argument) {
						return {
							type: Syntax.ReturnStatement,
							argument: argument
						};
					},

					createSequenceExpression: function (expressions) {
						return {
							type: Syntax.SequenceExpression,
							expressions: expressions
						};
					},

					createSwitchCase: function (test, consequent) {
						return {
							type: Syntax.SwitchCase,
							test: test,
							consequent: consequent
						};
					},

					createSwitchStatement: function (discriminant, cases) {
						return {
							type: Syntax.SwitchStatement,
							discriminant: discriminant,
							cases: cases
						};
					},

					createThisExpression: function () {
						return {
							type: Syntax.ThisExpression
						};
					},

					createThrowStatement: function (argument) {
						return {
							type: Syntax.ThrowStatement,
							argument: argument
						};
					},

					createTryStatement: function (block, guardedHandlers, handlers, finalizer) {
						return {
							type: Syntax.TryStatement,
							block: block,
							guardedHandlers: guardedHandlers,
							handlers: handlers,
							finalizer: finalizer
						};
					},

					createUnaryExpression: function (operator, argument) {
						if (operator === '++' || operator === '--') {
							return {
								type: Syntax.UpdateExpression,
								operator: operator,
								argument: argument,
								prefix: true
							};
						}
						return {
							type: Syntax.UnaryExpression,
							operator: operator,
							argument: argument,
							prefix: true
						};
					},

					createVariableDeclaration: function (declarations, kind) {
						return {
							type: Syntax.VariableDeclaration,
							declarations: declarations,
							kind: kind
						};
					},

					createVariableDeclarator: function (id, init) {
						return {
							type: Syntax.VariableDeclarator,
							id: id,
							init: init
						};
					},

					createWhileStatement: function (test, body) {
						return {
							type: Syntax.WhileStatement,
							test: test,
							body: body
						};
					},

					createWithStatement: function (object, body) {
						return {
							type: Syntax.WithStatement,
							object: object,
							body: body
						};
					}
				};

				// Return true if there is a line terminator before the next token.

				function peekLineTerminator() {
					var pos, line, start, found;

					pos = index;
					line = lineNumber;
					start = lineStart;
					skipComment();
					found = lineNumber !== line;
					index = pos;
					lineNumber = line;
					lineStart = start;

					return found;
				}

				// Throw an exception

				function throwError(token, messageFormat) {
					var error,
						args = Array.prototype.slice.call(arguments, 2),
						msg = messageFormat.replace(
							/%(\d)/g,
							function (whole, index) {
								assert(index &lt; args.length, 'Message reference must be in range');
								return args[index];
							}
						);

					if (typeof token.lineNumber === 'number') {
						error = new Error('Line ' + token.lineNumber + ': ' + msg);
						error.index = token.range[0];
						error.lineNumber = token.lineNumber;
						error.column = token.range[0] - lineStart + 1;
					} else {
						error = new Error('Line ' + lineNumber + ': ' + msg);
						error.index = index;
						error.lineNumber = lineNumber;
						error.column = index - lineStart + 1;
					}

					error.description = msg;
					throw error;
				}

				function throwErrorTolerant() {
					try {
						throwError.apply(null, arguments);
					} catch (e) {
						if (extra.errors) {
							extra.errors.push(e);
						} else {
							throw e;
						}
					}
				}


				// Throw an exception because of the token.

				function throwUnexpected(token) {
					if (token.type === Token.EOF) {
						throwError(token, Messages.UnexpectedEOS);
					}

					if (token.type === Token.NumericLiteral) {
						throwError(token, Messages.UnexpectedNumber);
					}

					if (token.type === Token.StringLiteral) {
						throwError(token, Messages.UnexpectedString);
					}

					if (token.type === Token.Identifier) {
						throwError(token, Messages.UnexpectedIdentifier);
					}

					if (token.type === Token.Keyword) {
						if (isFutureReservedWord(token.value)) {
							throwError(token, Messages.UnexpectedReserved);
						} else if (strict &amp;&amp; isStrictModeReservedWord(token.value)) {
							throwErrorTolerant(token, Messages.StrictReservedWord);
							return;
						}
						throwError(token, Messages.UnexpectedToken, token.value);
					}

					// BooleanLiteral, NullLiteral, or Punctuator.
					throwError(token, Messages.UnexpectedToken, token.value);
				}

				// Expect the next token to match the specified punctuator.
				// If not, an exception will be thrown.

				function expect(value) {
					var token = lex();
					if (token.type !== Token.Punctuator || token.value !== value) {
						throwUnexpected(token);
					}
				}

				// Expect the next token to match the specified keyword.
				// If not, an exception will be thrown.

				function expectKeyword(keyword) {
					var token = lex();
					if (token.type !== Token.Keyword || token.value !== keyword) {
						throwUnexpected(token);
					}
				}

				// Return true if the next token matches the specified punctuator.

				function match(value) {
					return lookahead.type === Token.Punctuator &amp;&amp; lookahead.value === value;
				}

				// Return true if the next token matches the specified keyword

				function matchKeyword(keyword) {
					return lookahead.type === Token.Keyword &amp;&amp; lookahead.value === keyword;
				}

				// Return true if the next token is an assignment operator

				function matchAssign() {
					var op;

					if (lookahead.type !== Token.Punctuator) {
						return false;
					}
					op = lookahead.value;
					return op === '=' ||
						op === '*=' ||
						op === '/=' ||
						op === '%=' ||
						op === '+=' ||
						op === '-=' ||
						op === '&lt;&lt;=' ||
						op === '&gt;&gt;=' ||
						op === '&gt;&gt;&gt;=' ||
						op === '&amp;=' ||
						op === '^=' ||
						op === '|=';
				}

				function consumeSemicolon() {
					var line;

					// Catch the very common case first: immediately a semicolon (char #59).
					if (source.charCodeAt(index) === 59) {
						lex();
						return;
					}

					line = lineNumber;
					skipComment();
					if (lineNumber !== line) {
						return;
					}

					if (match(';')) {
						lex();
						return;
					}

					if (lookahead.type !== Token.EOF &amp;&amp; !match('}')) {
						throwUnexpected(lookahead);
					}
				}

				// Return true if provided expression is LeftHandSideExpression

				function isLeftHandSide(expr) {
					return expr.type === Syntax.Identifier || expr.type === Syntax.MemberExpression;
				}

				// 11.1.4 Array Initialiser

				function parseArrayInitialiser() {
					var elements = [];

					expect('[');

					while (!match(']')) {
						if (match(',')) {
							lex();
							elements.push(null);
						} else {
							elements.push(parseAssignmentExpression());

							if (!match(']')) {
								expect(',');
							}
						}
					}

					expect(']');

					return delegate.createArrayExpression(elements);
				}

				// 11.1.5 Object Initialiser

				function parsePropertyFunction(param, first) {
					var previousStrict, body;

					previousStrict = strict;
					skipComment();
					delegate.markStart();
					body = parseFunctionSourceElements();
					if (first &amp;&amp; strict &amp;&amp; isRestrictedWord(param[0].name)) {
						throwErrorTolerant(first, Messages.StrictParamName);
					}
					strict = previousStrict;
					return delegate.markEnd(delegate.createFunctionExpression(null, param, [], body));
				}

				function parseObjectPropertyKey() {
					var token;

					skipComment();
					delegate.markStart();
					token = lex();

					// Note: This function is called only from parseObjectProperty(), where
					// EOF and Punctuator tokens are already filtered out.

					if (token.type === Token.StringLiteral || token.type === Token.NumericLiteral) {
						if (strict &amp;&amp; token.octal) {
							throwErrorTolerant(token, Messages.StrictOctalLiteral);
						}
						return delegate.markEnd(delegate.createLiteral(token));
					}

					return delegate.markEnd(delegate.createIdentifier(token.value));
				}

				function parseObjectProperty() {
					var token, key, id, value, param;

					token = lookahead;
					skipComment();
					delegate.markStart();

					if (token.type === Token.Identifier) {

						id = parseObjectPropertyKey();

						// Property Assignment: Getter and Setter.

						if (token.value === 'get' &amp;&amp; !match(':')) {
							key = parseObjectPropertyKey();
							expect('(');
							expect(')');
							value = parsePropertyFunction([]);
							return delegate.markEnd(delegate.createProperty('get', key, value));
						}
						if (token.value === 'set' &amp;&amp; !match(':')) {
							key = parseObjectPropertyKey();
							expect('(');
							token = lookahead;
							if (token.type !== Token.Identifier) {
								expect(')');
								throwErrorTolerant(token, Messages.UnexpectedToken, token.value);
								value = parsePropertyFunction([]);
							} else {
								param = [parseVariableIdentifier()];
								expect(')');
								value = parsePropertyFunction(param, token);
							}
							return delegate.markEnd(delegate.createProperty('set', key, value));
						}
						expect(':');
						value = parseAssignmentExpression();
						return delegate.markEnd(delegate.createProperty('init', id, value));
					}
					if (token.type === Token.EOF || token.type === Token.Punctuator) {
						throwUnexpected(token);
					} else {
						key = parseObjectPropertyKey();
						expect(':');
						value = parseAssignmentExpression();
						return delegate.markEnd(delegate.createProperty('init', key, value));
					}
				}

				function parseObjectInitialiser() {
					var properties = [], property, name, key, kind, map = {}, toString = String;

					expect('{');

					while (!match('}')) {
						property = parseObjectProperty();

						if (property.key.type === Syntax.Identifier) {
							name = property.key.name;
						} else {
							name = toString(property.key.value);
						}
						kind = (property.kind === 'init') ? PropertyKind.Data : (property.kind === 'get') ? PropertyKind.Get : PropertyKind.Set;

						key = '$' + name;
						if (Object.prototype.hasOwnProperty.call(map, key)) {
							if (map[key] === PropertyKind.Data) {
								if (strict &amp;&amp; kind === PropertyKind.Data) {
									throwErrorTolerant({}, Messages.StrictDuplicateProperty);
								} else if (kind !== PropertyKind.Data) {
									throwErrorTolerant({}, Messages.AccessorDataProperty);
								}
							} else {
								if (kind === PropertyKind.Data) {
									throwErrorTolerant({}, Messages.AccessorDataProperty);
								} else if (map[key] &amp; kind) {
									throwErrorTolerant({}, Messages.AccessorGetSet);
								}
							}
							map[key] |= kind;
						} else {
							map[key] = kind;
						}

						properties.push(property);

						if (!match('}')) {
							expect(',');
						}
					}

					expect('}');

					return delegate.createObjectExpression(properties);
				}

				// 11.1.6 The Grouping Operator

				function parseGroupExpression() {
					var expr;

					expect('(');

					expr = parseExpression();

					expect(')');

					return expr;
				}


				// 11.1 Primary Expressions

				function parsePrimaryExpression() {
					var type, token, expr;

					if (match('(')) {
						return parseGroupExpression();
					}

					type = lookahead.type;
					delegate.markStart();

					if (type === Token.Identifier) {
						expr = delegate.createIdentifier(lex().value);
					} else if (type === Token.StringLiteral || type === Token.NumericLiteral) {
						if (strict &amp;&amp; lookahead.octal) {
							throwErrorTolerant(lookahead, Messages.StrictOctalLiteral);
						}
						expr = delegate.createLiteral(lex());
					} else if (type === Token.Keyword) {
						if (matchKeyword('this')) {
							lex();
							expr = delegate.createThisExpression();
						} else if (matchKeyword('function')) {
							expr = parseFunctionExpression();
						}
					} else if (type === Token.BooleanLiteral) {
						token = lex();
						token.value = (token.value === 'true');
						expr = delegate.createLiteral(token);
					} else if (type === Token.NullLiteral) {
						token = lex();
						token.value = null;
						expr = delegate.createLiteral(token);
					} else if (match('[')) {
						expr = parseArrayInitialiser();
					} else if (match('{')) {
						expr = parseObjectInitialiser();
					} else if (match('/') || match('/=')) {
						if (typeof extra.tokens !== 'undefined') {
							expr = delegate.createLiteral(collectRegex());
						} else {
							expr = delegate.createLiteral(scanRegExp());
						}
					}

					if (expr) {
						return delegate.markEnd(expr);
					}

					throwUnexpected(lex());
				}

				// 11.2 Left-Hand-Side Expressions

				function parseArguments() {
					var args = [];

					expect('(');

					if (!match(')')) {
						while (index &lt; length) {
							args.push(parseAssignmentExpression());
							if (match(')')) {
								break;
							}
							expect(',');
						}
					}

					expect(')');

					return args;
				}

				function parseNonComputedProperty() {
					var token;

					delegate.markStart();
					token = lex();

					if (!isIdentifierName(token)) {
						throwUnexpected(token);
					}

					return delegate.markEnd(delegate.createIdentifier(token.value));
				}

				function parseNonComputedMember() {
					expect('.');

					return parseNonComputedProperty();
				}

				function parseComputedMember() {
					var expr;

					expect('[');

					expr = parseExpression();

					expect(']');

					return expr;
				}

				function parseNewExpression() {
					var callee, args;

					delegate.markStart();
					expectKeyword('new');
					callee = parseLeftHandSideExpression();
					args = match('(') ? parseArguments() : [];

					return delegate.markEnd(delegate.createNewExpression(callee, args));
				}

				function parseLeftHandSideExpressionAllowCall() {
					var marker, previousAllowIn, expr, args, property;

					marker = createLocationMarker();

					previousAllowIn = state.allowIn;
					state.allowIn = true;
					expr = matchKeyword('new') ? parseNewExpression() : parsePrimaryExpression();
					state.allowIn = previousAllowIn;

					while (match('.') || match('[') || match('(')) {
						if (match('(')) {
							args = parseArguments();
							expr = delegate.createCallExpression(expr, args);
						} else if (match('[')) {
							property = parseComputedMember();
							expr = delegate.createMemberExpression('[', expr, property);
						} else {
							property = parseNonComputedMember();
							expr = delegate.createMemberExpression('.', expr, property);
						}
						if (marker) {
							marker.end();
							marker.apply(expr);
						}
					}

					return expr;
				}

				function parseLeftHandSideExpression() {
					var marker, previousAllowIn, expr, property;

					marker = createLocationMarker();

					previousAllowIn = state.allowIn;
					expr = matchKeyword('new') ? parseNewExpression() : parsePrimaryExpression();
					state.allowIn = previousAllowIn;

					while (match('.') || match('[')) {
						if (match('[')) {
							property = parseComputedMember();
							expr = delegate.createMemberExpression('[', expr, property);
						} else {
							property = parseNonComputedMember();
							expr = delegate.createMemberExpression('.', expr, property);
						}
						if (marker) {
							marker.end();
							marker.apply(expr);
						}
					}

					return expr;
				}

				// 11.3 Postfix Expressions

				function parsePostfixExpression() {
					var expr, token;

					delegate.markStart();
					expr = parseLeftHandSideExpressionAllowCall();

					if (lookahead.type === Token.Punctuator) {
						if ((match('++') || match('--')) &amp;&amp; !peekLineTerminator()) {
							// 11.3.1, 11.3.2
							if (strict &amp;&amp; expr.type === Syntax.Identifier &amp;&amp; isRestrictedWord(expr.name)) {
								throwErrorTolerant({}, Messages.StrictLHSPostfix);
							}

							if (!isLeftHandSide(expr)) {
								throwErrorTolerant({}, Messages.InvalidLHSInAssignment);
							}

							token = lex();
							expr = delegate.createPostfixExpression(token.value, expr);
						}
					}

					return delegate.markEndIf(expr);
				}

				// 11.4 Unary Operators

				function parseUnaryExpression() {
					var token, expr;

					delegate.markStart();

					if (lookahead.type !== Token.Punctuator &amp;&amp; lookahead.type !== Token.Keyword) {
						expr = parsePostfixExpression();
					} else if (match('++') || match('--')) {
						token = lex();
						expr = parseUnaryExpression();
						// 11.4.4, 11.4.5
						if (strict &amp;&amp; expr.type === Syntax.Identifier &amp;&amp; isRestrictedWord(expr.name)) {
							throwErrorTolerant({}, Messages.StrictLHSPrefix);
						}

						if (!isLeftHandSide(expr)) {
							throwErrorTolerant({}, Messages.InvalidLHSInAssignment);
						}

						expr = delegate.createUnaryExpression(token.value, expr);
					} else if (match('+') || match('-') || match('~') || match('!')) {
						token = lex();
						expr = parseUnaryExpression();
						expr = delegate.createUnaryExpression(token.value, expr);
					} else if (matchKeyword('delete') || matchKeyword('void') || matchKeyword('typeof')) {
						token = lex();
						expr = parseUnaryExpression();
						expr = delegate.createUnaryExpression(token.value, expr);
						if (strict &amp;&amp; expr.operator === 'delete' &amp;&amp; expr.argument.type === Syntax.Identifier) {
							throwErrorTolerant({}, Messages.StrictDelete);
						}
					} else {
						expr = parsePostfixExpression();
					}

					return delegate.markEndIf(expr);
				}

				function binaryPrecedence(token, allowIn) {
					var prec = 0;

					if (token.type !== Token.Punctuator &amp;&amp; token.type !== Token.Keyword) {
						return 0;
					}

					switch (token.value) {
						case '||':
							prec = 1;
							break;

						case '&amp;&amp;':
							prec = 2;
							break;

						case '|':
							prec = 3;
							break;

						case '^':
							prec = 4;
							break;

						case '&amp;':
							prec = 5;
							break;

						case '==':
						case '!=':
						case '===':
						case '!==':
							prec = 6;
							break;

						case '&lt;':
						case '&gt;':
						case '&lt;=':
						case '&gt;=':
						case 'instanceof':
							prec = 7;
							break;

						case 'in':
							prec = allowIn ? 7 : 0;
							break;

						case '&lt;&lt;':
						case '&gt;&gt;':
						case '&gt;&gt;&gt;':
							prec = 8;
							break;

						case '+':
						case '-':
							prec = 9;
							break;

						case '*':
						case '/':
						case '%':
							prec = 11;
							break;

						default:
							break;
					}

					return prec;
				}

				// 11.5 Multiplicative Operators
				// 11.6 Additive Operators
				// 11.7 Bitwise Shift Operators
				// 11.8 Relational Operators
				// 11.9 Equality Operators
				// 11.10 Binary Bitwise Operators
				// 11.11 Binary Logical Operators

				function parseBinaryExpression() {
					var marker, markers, expr, token, prec, stack, right, operator, left, i;

					marker = createLocationMarker();
					left = parseUnaryExpression();

					token = lookahead;
					prec = binaryPrecedence(token, state.allowIn);
					if (prec === 0) {
						return left;
					}
					token.prec = prec;
					lex();

					markers = [marker, createLocationMarker()];
					right = parseUnaryExpression();

					stack = [left, token, right];

					while ((prec = binaryPrecedence(lookahead, state.allowIn)) &gt; 0) {

						// Reduce: make a binary expression from the three topmost entries.
						while ((stack.length &gt; 2) &amp;&amp; (prec &lt;= stack[stack.length - 2].prec)) {
							right = stack.pop();
							operator = stack.pop().value;
							left = stack.pop();
							expr = delegate.createBinaryExpression(operator, left, right);
							markers.pop();
							marker = markers.pop();
							if (marker) {
								marker.end();
								marker.apply(expr);
							}
							stack.push(expr);
							markers.push(marker);
						}

						// Shift.
						token = lex();
						token.prec = prec;
						stack.push(token);
						markers.push(createLocationMarker());
						expr = parseUnaryExpression();
						stack.push(expr);
					}

					// Final reduce to clean-up the stack.
					i = stack.length - 1;
					expr = stack[i];
					markers.pop();
					while (i &gt; 1) {
						expr = delegate.createBinaryExpression(stack[i - 1].value, stack[i - 2], expr);
						i -= 2;
						marker = markers.pop();
						if (marker) {
							marker.end();
							marker.apply(expr);
						}
					}

					return expr;
				}


				// 11.12 Conditional Operator

				function parseConditionalExpression() {
					var expr, previousAllowIn, consequent, alternate;

					delegate.markStart();
					expr = parseBinaryExpression();

					if (match('?')) {
						lex();
						previousAllowIn = state.allowIn;
						state.allowIn = true;
						consequent = parseAssignmentExpression();
						state.allowIn = previousAllowIn;
						expect(':');
						alternate = parseAssignmentExpression();

						expr = delegate.markEnd(delegate.createConditionalExpression(expr, consequent, alternate));
					} else {
						delegate.markEnd({});
					}

					return expr;
				}

				// 11.13 Assignment Operators

				function parseAssignmentExpression() {
					var token, left, right, node;

					token = lookahead;
					delegate.markStart();
					node = left = parseConditionalExpression();

					if (matchAssign()) {
						// LeftHandSideExpression
						if (!isLeftHandSide(left)) {
							throwErrorTolerant({}, Messages.InvalidLHSInAssignment);
						}

						// 11.13.1
						if (strict &amp;&amp; left.type === Syntax.Identifier &amp;&amp; isRestrictedWord(left.name)) {
							throwErrorTolerant(token, Messages.StrictLHSAssignment);
						}

						token = lex();
						right = parseAssignmentExpression();
						node = delegate.createAssignmentExpression(token.value, left, right);
					}

					return delegate.markEndIf(node);
				}

				// 11.14 Comma Operator

				function parseExpression() {
					var expr;

					delegate.markStart();
					expr = parseAssignmentExpression();

					if (match(',')) {
						expr = delegate.createSequenceExpression([expr]);

						while (index &lt; length) {
							if (!match(',')) {
								break;
							}
							lex();
							expr.expressions.push(parseAssignmentExpression());
						}
					}

					return delegate.markEndIf(expr);
				}

				// 12.1 Block

				function parseStatementList() {
					var list = [],
						statement;

					while (index &lt; length) {
						if (match('}')) {
							break;
						}
						statement = parseSourceElement();
						if (typeof statement === 'undefined') {
							break;
						}
						list.push(statement);
					}

					return list;
				}

				function parseBlock() {
					var block;

					skipComment();
					delegate.markStart();
					expect('{');

					block = parseStatementList();

					expect('}');

					return delegate.markEnd(delegate.createBlockStatement(block));
				}

				// 12.2 Variable Statement

				function parseVariableIdentifier() {
					var token;

					skipComment();
					delegate.markStart();
					token = lex();

					if (token.type !== Token.Identifier) {
						throwUnexpected(token);
					}

					return delegate.markEnd(delegate.createIdentifier(token.value));
				}

				function parseVariableDeclaration(kind) {
					var init = null, id;

					skipComment();
					delegate.markStart();
					id = parseVariableIdentifier();

					// 12.2.1
					if (strict &amp;&amp; isRestrictedWord(id.name)) {
						throwErrorTolerant({}, Messages.StrictVarName);
					}

					if (kind === 'const') {
						expect('=');
						init = parseAssignmentExpression();
					} else if (match('=')) {
						lex();
						init = parseAssignmentExpression();
					}

					return delegate.markEnd(delegate.createVariableDeclarator(id, init));
				}

				function parseVariableDeclarationList(kind) {
					var list = [];

					do {
						list.push(parseVariableDeclaration(kind));
						if (!match(',')) {
							break;
						}
						lex();
					} while (index &lt; length);

					return list;
				}

				function parseVariableStatement() {
					var declarations;

					expectKeyword('var');

					declarations = parseVariableDeclarationList();

					consumeSemicolon();

					return delegate.createVariableDeclaration(declarations, 'var');
				}

				// kind may be `const` or `let`
				// Both are experimental and not in the specification yet.
				// see http://wiki.ecmascript.org/doku.php?id=harmony:const
				// and http://wiki.ecmascript.org/doku.php?id=harmony:let
				function parseConstLetDeclaration(kind) {
					var declarations;

					skipComment();
					delegate.markStart();

					expectKeyword(kind);

					declarations = parseVariableDeclarationList(kind);

					consumeSemicolon();

					return delegate.markEnd(delegate.createVariableDeclaration(declarations, kind));
				}

				// 12.3 Empty Statement

				function parseEmptyStatement() {
					expect(';');
					return delegate.createEmptyStatement();
				}

				// 12.4 Expression Statement

				function parseExpressionStatement() {
					var expr = parseExpression();
					consumeSemicolon();
					return delegate.createExpressionStatement(expr);
				}

				// 12.5 If statement

				function parseIfStatement() {
					var test, consequent, alternate;

					expectKeyword('if');

					expect('(');

					test = parseExpression();

					expect(')');

					consequent = parseStatement();

					if (matchKeyword('else')) {
						lex();
						alternate = parseStatement();
					} else {
						alternate = null;
					}

					return delegate.createIfStatement(test, consequent, alternate);
				}

				// 12.6 Iteration Statements

				function parseDoWhileStatement() {
					var body, test, oldInIteration;

					expectKeyword('do');

					oldInIteration = state.inIteration;
					state.inIteration = true;

					body = parseStatement();

					state.inIteration = oldInIteration;

					expectKeyword('while');

					expect('(');

					test = parseExpression();

					expect(')');

					if (match(';')) {
						lex();
					}

					return delegate.createDoWhileStatement(body, test);
				}

				function parseWhileStatement() {
					var test, body, oldInIteration;

					expectKeyword('while');

					expect('(');

					test = parseExpression();

					expect(')');

					oldInIteration = state.inIteration;
					state.inIteration = true;

					body = parseStatement();

					state.inIteration = oldInIteration;

					return delegate.createWhileStatement(test, body);
				}

				function parseForVariableDeclaration() {
					var token, declarations;

					delegate.markStart();
					token = lex();
					declarations = parseVariableDeclarationList();

					return delegate.markEnd(delegate.createVariableDeclaration(declarations, token.value));
				}

				function parseForStatement() {
					var init, test, update, left, right, body, oldInIteration;

					init = test = update = null;

					expectKeyword('for');

					expect('(');

					if (match(';')) {
						lex();
					} else {
						if (matchKeyword('var') || matchKeyword('let')) {
							state.allowIn = false;
							init = parseForVariableDeclaration();
							state.allowIn = true;

							if (init.declarations.length === 1 &amp;&amp; matchKeyword('in')) {
								lex();
								left = init;
								right = parseExpression();
								init = null;
							}
						} else {
							state.allowIn = false;
							init = parseExpression();
							state.allowIn = true;

							if (matchKeyword('in')) {
								// LeftHandSideExpression
								if (!isLeftHandSide(init)) {
									throwErrorTolerant({}, Messages.InvalidLHSInForIn);
								}

								lex();
								left = init;
								right = parseExpression();
								init = null;
							}
						}

						if (typeof left === 'undefined') {
							expect(';');
						}
					}

					if (typeof left === 'undefined') {

						if (!match(';')) {
							test = parseExpression();
						}
						expect(';');

						if (!match(')')) {
							update = parseExpression();
						}
					}

					expect(')');

					oldInIteration = state.inIteration;
					state.inIteration = true;

					body = parseStatement();

					state.inIteration = oldInIteration;

					return (typeof left === 'undefined') ?
						delegate.createForStatement(init, test, update, body) :
						delegate.createForInStatement(left, right, body);
				}

				// 12.7 The continue statement

				function parseContinueStatement() {
					var label = null, key;

					expectKeyword('continue');

					// Optimize the most common form: 'continue;'.
					if (source.charCodeAt(index) === 59) {
						lex();

						if (!state.inIteration) {
							throwError({}, Messages.IllegalContinue);
						}

						return delegate.createContinueStatement(null);
					}

					if (peekLineTerminator()) {
						if (!state.inIteration) {
							throwError({}, Messages.IllegalContinue);
						}

						return delegate.createContinueStatement(null);
					}

					if (lookahead.type === Token.Identifier) {
						label = parseVariableIdentifier();

						key = '$' + label.name;
						if (!Object.prototype.hasOwnProperty.call(state.labelSet, key)) {
							throwError({}, Messages.UnknownLabel, label.name);
						}
					}

					consumeSemicolon();

					if (label === null &amp;&amp; !state.inIteration) {
						throwError({}, Messages.IllegalContinue);
					}

					return delegate.createContinueStatement(label);
				}

				// 12.8 The break statement

				function parseBreakStatement() {
					var label = null, key;

					expectKeyword('break');

					// Catch the very common case first: immediately a semicolon (char #59).
					if (source.charCodeAt(index) === 59) {
						lex();

						if (!(state.inIteration || state.inSwitch)) {
							throwError({}, Messages.IllegalBreak);
						}

						return delegate.createBreakStatement(null);
					}

					if (peekLineTerminator()) {
						if (!(state.inIteration || state.inSwitch)) {
							throwError({}, Messages.IllegalBreak);
						}

						return delegate.createBreakStatement(null);
					}

					if (lookahead.type === Token.Identifier) {
						label = parseVariableIdentifier();

						key = '$' + label.name;
						if (!Object.prototype.hasOwnProperty.call(state.labelSet, key)) {
							throwError({}, Messages.UnknownLabel, label.name);
						}
					}

					consumeSemicolon();

					if (label === null &amp;&amp; !(state.inIteration || state.inSwitch)) {
						throwError({}, Messages.IllegalBreak);
					}

					return delegate.createBreakStatement(label);
				}

				// 12.9 The return statement

				function parseReturnStatement() {
					var argument = null;

					expectKeyword('return');

					if (!state.inFunctionBody) {
						throwErrorTolerant({}, Messages.IllegalReturn);
					}

					// 'return' followed by a space and an identifier is very common.
					if (source.charCodeAt(index) === 32) {
						if (isIdentifierStart(source.charCodeAt(index + 1))) {
							argument = parseExpression();
							consumeSemicolon();
							return delegate.createReturnStatement(argument);
						}
					}

					if (peekLineTerminator()) {
						return delegate.createReturnStatement(null);
					}

					if (!match(';')) {
						if (!match('}') &amp;&amp; lookahead.type !== Token.EOF) {
							argument = parseExpression();
						}
					}

					consumeSemicolon();

					return delegate.createReturnStatement(argument);
				}

				// 12.10 The with statement

				function parseWithStatement() {
					var object, body;

					if (strict) {
						throwErrorTolerant({}, Messages.StrictModeWith);
					}

					expectKeyword('with');

					expect('(');

					object = parseExpression();

					expect(')');

					body = parseStatement();

					return delegate.createWithStatement(object, body);
				}

				// 12.10 The swith statement

				function parseSwitchCase() {
					var test,
						consequent = [],
						statement;

					skipComment();
					delegate.markStart();
					if (matchKeyword('default')) {
						lex();
						test = null;
					} else {
						expectKeyword('case');
						test = parseExpression();
					}
					expect(':');

					while (index &lt; length) {
						if (match('}') || matchKeyword('default') || matchKeyword('case')) {
							break;
						}
						statement = parseStatement();
						consequent.push(statement);
					}

					return delegate.markEnd(delegate.createSwitchCase(test, consequent));
				}

				function parseSwitchStatement() {
					var discriminant, cases, clause, oldInSwitch, defaultFound;

					expectKeyword('switch');

					expect('(');

					discriminant = parseExpression();

					expect(')');

					expect('{');

					cases = [];

					if (match('}')) {
						lex();
						return delegate.createSwitchStatement(discriminant, cases);
					}

					oldInSwitch = state.inSwitch;
					state.inSwitch = true;
					defaultFound = false;

					while (index &lt; length) {
						if (match('}')) {
							break;
						}
						clause = parseSwitchCase();
						if (clause.test === null) {
							if (defaultFound) {
								throwError({}, Messages.MultipleDefaultsInSwitch);
							}
							defaultFound = true;
						}
						cases.push(clause);
					}

					state.inSwitch = oldInSwitch;

					expect('}');

					return delegate.createSwitchStatement(discriminant, cases);
				}

				// 12.13 The throw statement

				function parseThrowStatement() {
					var argument;

					expectKeyword('throw');

					if (peekLineTerminator()) {
						throwError({}, Messages.NewlineAfterThrow);
					}

					argument = parseExpression();

					consumeSemicolon();

					return delegate.createThrowStatement(argument);
				}

				// 12.14 The try statement

				function parseCatchClause() {
					var param, body;

					skipComment();
					delegate.markStart();
					expectKeyword('catch');

					expect('(');
					if (match(')')) {
						throwUnexpected(lookahead);
					}

					param = parseVariableIdentifier();
					// 12.14.1
					if (strict &amp;&amp; isRestrictedWord(param.name)) {
						throwErrorTolerant({}, Messages.StrictCatchVariable);
					}

					expect(')');
					body = parseBlock();
					return delegate.markEnd(delegate.createCatchClause(param, body));
				}

				function parseTryStatement() {
					var block, handlers = [], finalizer = null;

					expectKeyword('try');

					block = parseBlock();

					if (matchKeyword('catch')) {
						handlers.push(parseCatchClause());
					}

					if (matchKeyword('finally')) {
						lex();
						finalizer = parseBlock();
					}

					if (handlers.length === 0 &amp;&amp; !finalizer) {
						throwError({}, Messages.NoCatchOrFinally);
					}

					return delegate.createTryStatement(block, [], handlers, finalizer);
				}

				// 12.15 The debugger statement

				function parseDebuggerStatement() {
					expectKeyword('debugger');

					consumeSemicolon();

					return delegate.createDebuggerStatement();
				}

				// 12 Statements

				function parseStatement() {
					var type = lookahead.type,
						expr,
						labeledBody,
						key;

					if (type === Token.EOF) {
						throwUnexpected(lookahead);
					}

					skipComment();
					delegate.markStart();

					if (type === Token.Punctuator) {
						switch (lookahead.value) {
							case ';':
								return delegate.markEnd(parseEmptyStatement());
							case '{':
								return delegate.markEnd(parseBlock());
							case '(':
								return delegate.markEnd(parseExpressionStatement());
							default:
								break;
						}
					}

					if (type === Token.Keyword) {
						switch (lookahead.value) {
							case 'break':
								return delegate.markEnd(parseBreakStatement());
							case 'continue':
								return delegate.markEnd(parseContinueStatement());
							case 'debugger':
								return delegate.markEnd(parseDebuggerStatement());
							case 'do':
								return delegate.markEnd(parseDoWhileStatement());
							case 'for':
								return delegate.markEnd(parseForStatement());
							case 'function':
								return delegate.markEnd(parseFunctionDeclaration());
							case 'if':
								return delegate.markEnd(parseIfStatement());
							case 'return':
								return delegate.markEnd(parseReturnStatement());
							case 'switch':
								return delegate.markEnd(parseSwitchStatement());
							case 'throw':
								return delegate.markEnd(parseThrowStatement());
							case 'try':
								return delegate.markEnd(parseTryStatement());
							case 'var':
								return delegate.markEnd(parseVariableStatement());
							case 'while':
								return delegate.markEnd(parseWhileStatement());
							case 'with':
								return delegate.markEnd(parseWithStatement());
							default:
								break;
						}
					}

					expr = parseExpression();

					// 12.12 Labelled Statements
					if ((expr.type === Syntax.Identifier) &amp;&amp; match(':')) {
						lex();

						key = '$' + expr.name;
						if (Object.prototype.hasOwnProperty.call(state.labelSet, key)) {
							throwError({}, Messages.Redeclaration, 'Label', expr.name);
						}

						state.labelSet[key] = true;
						labeledBody = parseStatement();
						delete state.labelSet[key];
						return delegate.markEnd(delegate.createLabeledStatement(expr, labeledBody));
					}

					consumeSemicolon();

					return delegate.markEnd(delegate.createExpressionStatement(expr));
				}

				// 13 Function Definition

				function parseFunctionSourceElements() {
					var sourceElement, sourceElements = [], token, directive, firstRestricted,
						oldLabelSet, oldInIteration, oldInSwitch, oldInFunctionBody;

					skipComment();
					delegate.markStart();
					expect('{');

					while (index &lt; length) {
						if (lookahead.type !== Token.StringLiteral) {
							break;
						}
						token = lookahead;

						sourceElement = parseSourceElement();
						sourceElements.push(sourceElement);
						if (sourceElement.expression.type !== Syntax.Literal) {
							// this is not directive
							break;
						}
						directive = source.slice(token.range[0] + 1, token.range[1] - 1);
						if (directive === 'use strict') {
							strict = true;
							if (firstRestricted) {
								throwErrorTolerant(firstRestricted, Messages.StrictOctalLiteral);
							}
						} else {
							if (!firstRestricted &amp;&amp; token.octal) {
								firstRestricted = token;
							}
						}
					}

					oldLabelSet = state.labelSet;
					oldInIteration = state.inIteration;
					oldInSwitch = state.inSwitch;
					oldInFunctionBody = state.inFunctionBody;

					state.labelSet = {};
					state.inIteration = false;
					state.inSwitch = false;
					state.inFunctionBody = true;

					while (index &lt; length) {
						if (match('}')) {
							break;
						}
						sourceElement = parseSourceElement();
						if (typeof sourceElement === 'undefined') {
							break;
						}
						sourceElements.push(sourceElement);
					}

					expect('}');

					state.labelSet = oldLabelSet;
					state.inIteration = oldInIteration;
					state.inSwitch = oldInSwitch;
					state.inFunctionBody = oldInFunctionBody;

					return delegate.markEnd(delegate.createBlockStatement(sourceElements));
				}

				function parseParams(firstRestricted) {
					var param, params = [], token, stricted, paramSet, key, message;
					expect('(');

					if (!match(')')) {
						paramSet = {};
						while (index &lt; length) {
							token = lookahead;
							param = parseVariableIdentifier();
							key = '$' + token.value;
							if (strict) {
								if (isRestrictedWord(token.value)) {
									stricted = token;
									message = Messages.StrictParamName;
								}
								if (Object.prototype.hasOwnProperty.call(paramSet, key)) {
									stricted = token;
									message = Messages.StrictParamDupe;
								}
							} else if (!firstRestricted) {
								if (isRestrictedWord(token.value)) {
									firstRestricted = token;
									message = Messages.StrictParamName;
								} else if (isStrictModeReservedWord(token.value)) {
									firstRestricted = token;
									message = Messages.StrictReservedWord;
								} else if (Object.prototype.hasOwnProperty.call(paramSet, key)) {
									firstRestricted = token;
									message = Messages.StrictParamDupe;
								}
							}
							params.push(param);
							paramSet[key] = true;
							if (match(')')) {
								break;
							}
							expect(',');
						}
					}

					expect(')');

					return {
						params: params,
						stricted: stricted,
						firstRestricted: firstRestricted,
						message: message
					};
				}

				function parseFunctionDeclaration() {
					var id, params = [], body, token, stricted, tmp, firstRestricted, message, previousStrict;

					skipComment();
					delegate.markStart();

					expectKeyword('function');
					token = lookahead;
					id = parseVariableIdentifier();
					if (strict) {
						if (isRestrictedWord(token.value)) {
							throwErrorTolerant(token, Messages.StrictFunctionName);
						}
					} else {
						if (isRestrictedWord(token.value)) {
							firstRestricted = token;
							message = Messages.StrictFunctionName;
						} else if (isStrictModeReservedWord(token.value)) {
							firstRestricted = token;
							message = Messages.StrictReservedWord;
						}
					}

					tmp = parseParams(firstRestricted);
					params = tmp.params;
					stricted = tmp.stricted;
					firstRestricted = tmp.firstRestricted;
					if (tmp.message) {
						message = tmp.message;
					}

					previousStrict = strict;
					body = parseFunctionSourceElements();
					if (strict &amp;&amp; firstRestricted) {
						throwError(firstRestricted, message);
					}
					if (strict &amp;&amp; stricted) {
						throwErrorTolerant(stricted, message);
					}
					strict = previousStrict;

					return delegate.markEnd(delegate.createFunctionDeclaration(id, params, [], body));
				}

				function parseFunctionExpression() {
					var token, id = null, stricted, firstRestricted, message, tmp, params = [], body, previousStrict;

					delegate.markStart();
					expectKeyword('function');

					if (!match('(')) {
						token = lookahead;
						id = parseVariableIdentifier();
						if (strict) {
							if (isRestrictedWord(token.value)) {
								throwErrorTolerant(token, Messages.StrictFunctionName);
							}
						} else {
							if (isRestrictedWord(token.value)) {
								firstRestricted = token;
								message = Messages.StrictFunctionName;
							} else if (isStrictModeReservedWord(token.value)) {
								firstRestricted = token;
								message = Messages.StrictReservedWord;
							}
						}
					}

					tmp = parseParams(firstRestricted);
					params = tmp.params;
					stricted = tmp.stricted;
					firstRestricted = tmp.firstRestricted;
					if (tmp.message) {
						message = tmp.message;
					}

					previousStrict = strict;
					body = parseFunctionSourceElements();
					if (strict &amp;&amp; firstRestricted) {
						throwError(firstRestricted, message);
					}
					if (strict &amp;&amp; stricted) {
						throwErrorTolerant(stricted, message);
					}
					strict = previousStrict;

					return delegate.markEnd(delegate.createFunctionExpression(id, params, [], body));
				}

				// 14 Program

				function parseSourceElement() {
					if (lookahead.type === Token.Keyword) {
						switch (lookahead.value) {
							case 'const':
							case 'let':
								return parseConstLetDeclaration(lookahead.value);
							case 'function':
								return parseFunctionDeclaration();
							default:
								return parseStatement();
						}
					}

					if (lookahead.type !== Token.EOF) {
						return parseStatement();
					}
				}

				function parseSourceElements() {
					var sourceElement, sourceElements = [], token, directive, firstRestricted;

					while (index &lt; length) {
						token = lookahead;
						if (token.type !== Token.StringLiteral) {
							break;
						}

						sourceElement = parseSourceElement();
						sourceElements.push(sourceElement);
						if (sourceElement.expression.type !== Syntax.Literal) {
							// this is not directive
							break;
						}
						directive = source.slice(token.range[0] + 1, token.range[1] - 1);
						if (directive === 'use strict') {
							strict = true;
							if (firstRestricted) {
								throwErrorTolerant(firstRestricted, Messages.StrictOctalLiteral);
							}
						} else {
							if (!firstRestricted &amp;&amp; token.octal) {
								firstRestricted = token;
							}
						}
					}

					while (index &lt; length) {
						sourceElement = parseSourceElement();
						if (typeof sourceElement === 'undefined') {
							break;
						}
						sourceElements.push(sourceElement);
					}
					return sourceElements;
				}

				function parseProgram() {
					var body;

					skipComment();
					delegate.markStart();
					strict = false;
					peek();
					body = parseSourceElements();
					return delegate.markEnd(delegate.createProgram(body));
				}

				function filterTokenLocation() {
					var i, entry, token, tokens = [];

					for (i = 0; i &lt; extra.tokens.length; ++i) {
						entry = extra.tokens[i];
						token = {
							type: entry.type,
							value: entry.value
						};
						if (extra.range) {
							token.range = entry.range;
						}
						if (extra.loc) {
							token.loc = entry.loc;
						}
						tokens.push(token);
					}

					extra.tokens = tokens;
				}

				function LocationMarker() {
					this.marker = [index, lineNumber, index - lineStart, 0, 0, 0];
				}

				LocationMarker.prototype = {
					constructor: LocationMarker,

					end: function () {
						this.marker[3] = index;
						this.marker[4] = lineNumber;
						this.marker[5] = index - lineStart;
					},

					apply: function (node) {
						if (extra.range) {
							node.range = [this.marker[0], this.marker[3]];
						}
						if (extra.loc) {
							node.loc = {
								start: {
									line: this.marker[1],
									column: this.marker[2]
								},
								end: {
									line: this.marker[4],
									column: this.marker[5]
								}
							};
						}
						node = delegate.postProcess(node);
					}
				};

				function createLocationMarker() {
					if (!extra.loc &amp;&amp; !extra.range) {
						return null;
					}

					skipComment();

					return new LocationMarker();
				}

				function tokenize(code, options) {
					var toString,
						token,
						tokens;

					toString = String;
					if (typeof code !== 'string' &amp;&amp; !(code instanceof String)) {
						code = toString(code);
					}

					delegate = SyntaxTreeDelegate;
					source = code;
					index = 0;
					lineNumber = (source.length &gt; 0) ? 1 : 0;
					lineStart = 0;
					length = source.length;
					lookahead = null;
					state = {
						allowIn: true,
						labelSet: {},
						inFunctionBody: false,
						inIteration: false,
						inSwitch: false,
						lastCommentStart: -1,
					};

					extra = {};

					// Options matching.
					options = options || {};

					// Of course we collect tokens here.
					options.tokens = true;
					extra.tokens = [];
					extra.tokenize = true;
					// The following two fields are necessary to compute the Regex tokens.
					extra.openParenToken = -1;
					extra.openCurlyToken = -1;

					extra.range = (typeof options.range === 'boolean') &amp;&amp; options.range;
					extra.loc = (typeof options.loc === 'boolean') &amp;&amp; options.loc;

					if (typeof options.comment === 'boolean' &amp;&amp; options.comment) {
						extra.comments = [];
					}
					if (typeof options.tolerant === 'boolean' &amp;&amp; options.tolerant) {
						extra.errors = [];
					}

					if (length &gt; 0) {
						if (typeof source[0] === 'undefined') {
							// Try first to convert to a string. This is good as fast path
							// for old IE which understands string indexing for string
							// literals only and not for string object.
							if (code instanceof String) {
								source = code.valueOf();
							}
						}
					}

					try {
						peek();
						if (lookahead.type === Token.EOF) {
							return extra.tokens;
						}

						token = lex();
						while (lookahead.type !== Token.EOF) {
							try {
								token = lex();
							} catch (lexError) {
								token = lookahead;
								if (extra.errors) {
									extra.errors.push(lexError);
									// We have to break on the first error
									// to avoid infinite loops.
									break;
								} else {
									throw lexError;
								}
							}
						}

						filterTokenLocation();
						tokens = extra.tokens;
						if (typeof extra.comments !== 'undefined') {
							tokens.comments = extra.comments;
						}
						if (typeof extra.errors !== 'undefined') {
							tokens.errors = extra.errors;
						}
					} catch (e) {
						throw e;
					} finally {
						extra = {};
					}
					return tokens;
				}

				function parse(code, options) {
					var program, toString;

					toString = String;
					if (typeof code !== 'string' &amp;&amp; !(code instanceof String)) {
						code = toString(code);
					}

					delegate = SyntaxTreeDelegate;
					source = code;
					index = 0;
					lineNumber = (source.length &gt; 0) ? 1 : 0;
					lineStart = 0;
					length = source.length;
					lookahead = null;
					state = {
						allowIn: true,
						labelSet: {},
						inFunctionBody: false,
						inIteration: false,
						inSwitch: false,
						lastCommentStart: -1,
						markerStack: []
					};

					extra = {};
					if (typeof options !== 'undefined') {
						extra.range = (typeof options.range === 'boolean') &amp;&amp; options.range;
						extra.loc = (typeof options.loc === 'boolean') &amp;&amp; options.loc;

						if (extra.loc &amp;&amp; options.source !== null &amp;&amp; options.source !== undefined) {
							extra.source = toString(options.source);
						}

						if (typeof options.tokens === 'boolean' &amp;&amp; options.tokens) {
							extra.tokens = [];
						}
						if (typeof options.comment === 'boolean' &amp;&amp; options.comment) {
							extra.comments = [];
						}
						if (typeof options.tolerant === 'boolean' &amp;&amp; options.tolerant) {
							extra.errors = [];
						}
					}

					if (length &gt; 0) {
						if (typeof source[0] === 'undefined') {
							// Try first to convert to a string. This is good as fast path
							// for old IE which understands string indexing for string
							// literals only and not for string object.
							if (code instanceof String) {
								source = code.valueOf();
							}
						}
					}

					try {
						program = parseProgram();
						if (typeof extra.comments !== 'undefined') {
							program.comments = extra.comments;
						}
						if (typeof extra.tokens !== 'undefined') {
							filterTokenLocation();
							program.tokens = extra.tokens;
						}
						if (typeof extra.errors !== 'undefined') {
							program.errors = extra.errors;
						}
					} catch (e) {
						throw e;
					} finally {
						extra = {};
					}

					return program;
				}

				// Sync with package.json and component.json.
				exports.version = '1.1.0-dev';

				exports.tokenize = tokenize;

				exports.parse = parse;

				// Deep copy.
				exports.Syntax = (function () {
					var name, types = {};

					if (typeof Object.create === 'function') {
						types = Object.create(null);
					}

					for (name in Syntax) {
						if (Syntax.hasOwnProperty(name)) {
							types[name] = Syntax[name];
						}
					}

					if (typeof Object.freeze === 'function') {
						Object.freeze(types);
					}

					return types;
				}());

			}));
			return exports;
		})();

		var eswalker = (function (exports) {
			'use strict';

			var Syntax = {
				AssignmentExpression: 'AssignmentExpression',
				ArrayExpression: 'ArrayExpression',
				BlockStatement: 'BlockStatement',
				BinaryExpression: 'BinaryExpression',
				BreakStatement: 'BreakStatement',
				CallExpression: 'CallExpression',
				CatchClause: 'CatchClause',
				ConditionalExpression: 'ConditionalExpression',
				ContinueStatement: 'ContinueStatement',
				DoWhileStatement: 'DoWhileStatement',
				DebuggerStatement: 'DebuggerStatement',
				EmptyStatement: 'EmptyStatement',
				ExpressionStatement: 'ExpressionStatement',
				ForStatement: 'ForStatement',
				ForInStatement: 'ForInStatement',
				FunctionDeclaration: 'FunctionDeclaration',
				FunctionExpression: 'FunctionExpression',
				Identifier: 'Identifier',
				IfStatement: 'IfStatement',
				Literal: 'Literal',
				LabeledStatement: 'LabeledStatement',
				LogicalExpression: 'LogicalExpression',
				MemberExpression: 'MemberExpression',
				NewExpression: 'NewExpression',
				ObjectExpression: 'ObjectExpression',
				Program: 'Program',
				Property: 'Property',
				ReturnStatement: 'ReturnStatement',
				SequenceExpression: 'SequenceExpression',
				SwitchStatement: 'SwitchStatement',
				SwitchCase: 'SwitchCase',
				ThisExpression: 'ThisExpression',
				ThrowStatement: 'ThrowStatement',
				TryStatement: 'TryStatement',
				UnaryExpression: 'UnaryExpression',
				UpdateExpression: 'UpdateExpression',
				VariableDeclaration: 'VariableDeclaration',
				VariableDeclarator: 'VariableDeclarator',
				WhileStatement: 'WhileStatement',
				WithStatement: 'WithStatement'
			};

			var Walker = (function WalkerClosure() {

				function Walker() {
					this.walkBreakStatement = null;
					this.walkContinueStatement = null;
					this.walkDebuggerStatement = null;
					this.walkEmptyStatement = null;
					this.walkIdentifier = null;
					this.walkLiteral = null;
					this.walkThisExpression = null;

					this.enterAssignmentExpression = null;
					this.enterArrayExpression = null;
					this.enterBinaryExpression = null;
					this.enterBlockStatement = null;
					this.enterCallExpression = null;
					this.enterCatchClause = null;
					this.enterConditionalExpression = null;
					this.enterDoWhileStatement = null;
					this.enterExpressionStatement = null;
					this.enterForStatement = null;
					this.enterForInStatement = null;
					this.enterFunctionDeclaration = null;
					this.enterFunctionExpression = null;
					this.enterIfStatement = null;
					this.enterLabeledStatement = null;
					this.enterLogicalExpression = null;
					this.enterMemberExpression = null;
					this.enterNewExpression = null;
					this.enterObjectExpression = null;
					this.enterProgram = null;
					this.enterProperty = null;
					this.enterReturnStatement = null;
					this.enterSequenceExpression = null;
					this.enterSwitchStatement = null;
					this.enterSwitchCase = null;
					this.enterThrowStatement = null;
					this.enterTryStatement = null;
					this.enterUnaryExpression = null;
					this.enterUpdateExpression = null;
					this.enterVariableDeclaration = null;
					this.enterVariableDeclarator = null;
					this.enterWithStatement = null;
					this.enterWhileStatement = null;

					// Arrays
					this.enterCatchClauses = null;
					this.enterExpressions = null;
					this.enterParams = null;
					this.enterProperties = null;
					this.enterStatements = null;
					this.enterSwitchCases = null;
					this.enterVariables = null;

					this.exitAssignmentExpression = null;
					this.exitArrayExpression = null;
					this.exitBlockStatement = null;
					this.exitBinaryExpression = null;
					this.exitCallExpression = null;
					this.exitCatchClause = null;
					this.exitConditionalExpression = null;
					this.exitDoWhileStatement = null;
					this.exitExpressionStatement = null;
					this.exitForStatement = null;
					this.exitForInStatement = null;
					this.exitFunctionDeclaration = null;
					this.exitFunctionExpression = null;
					this.exitIfStatement = null;
					this.exitLabeledStatement = null;
					this.exitLogicalExpression = null;
					this.exitMemberExpression = null;
					this.exitNewExpression = null;
					this.exitObjectExpression = null;
					this.exitProgram = null;
					this.exitProperty = null;
					this.exitReturnStatement = null;
					this.exitSequenceExpression = null;
					this.exitSwitchStatement = null;
					this.exitSwitchCase = null;
					this.exitThrowStatement = null;
					this.exitTryStatement = null;
					this.exitUnaryExpression = null;
					this.exitUpdateExpression = null;
					this.exitVariableDeclaration = null;
					this.exitVariableDeclarator = null;
					this.exitWithStatement = null;
					this.exitWhileStatement = null;

					// Arrays
					this.exitCatchClauses = null;
					this.exitExpressions = null;
					this.exitParams = null;
					this.exitProperties = null;
					this.exitStatements = null;
					this.exitSwitchCases = null;
					this.exitVariables = null;
				}

				Walker.prototype = {

					walkStatementArray: function Walker_walkStatementArray(
						nodes, parent, fieldName) {
						var i;

						if (arguments.length &lt; 3) {
							throw "Invalid number of arguments.";
						}

						if (this.enterStatements) {
							this.enterStatements(nodes, parent, fieldName);
						}

						for (i = 0; i &lt; nodes.length; i++) {
							nodes[i] =
								this.walkElement(nodes[i], parent, fieldName, nodes,
									i);
						}

						return (this.exitStatements) ?
							this.exitStatements(nodes, parent, fieldName) : nodes;
					},

					walkExpressionArray: function Walker_walkExpressionArray(
						nodes, parent, fieldName) {
						var i;

						if (arguments.length &lt; 3) {
							throw "Invalid number of arguments.";
						}

						if (this.enterExpressions) {
							this.enterExpressions(nodes, parent,
								fieldName);
						}

						for (i = 0; i &lt; nodes.length; i++) {
							if (typeof nodes[i] !== 'undefined') {
								nodes[i] =
									this.walkElement(nodes[i], parent, fieldName,
										nodes, i);
							}
						}

						return (this.exitExpressions) ?
							this.exitExpressions(nodes, parent, fieldName) : nodes;
					},

					walkParamArray: function Walker_walkParamArray(
						nodes, parent, fieldName) {
						var i;

						if (arguments.length &lt; 3) {
							throw "Invalid number of arguments.";
						}

						if (this.enterParams) {
							this.enterParams(nodes, parent, fieldName);
						}

						for (i = 0; i &lt; nodes.length; i++) {
							nodes[i] =
								this.walkElement(nodes[i], parent, fieldName, nodes,
									i);
						}

						return (this.exitParams) ?
							this.exitParams(nodes, parent, fieldName) :
							nodes;
					},

					walkPropertyArray: function Walker_walkPropertyArray(
						nodes, parent, fieldName) {
						var i;

						if (arguments.length &lt; 3) {
							throw "Invalid number of arguments.";
						}

						if (this.enterProperties) {
							this.enterProperties(nodes, parent,
								fieldName);
						}

						for (i = 0; i &lt; nodes.length; i++) {
							nodes[i] =
								this.walkElement(nodes[i], parent, fieldName, nodes,
									i);
						}

						return (this.exitProperties) ?
							this.exitProperties(nodes, parent, fieldName) : nodes;
					},

					walkVariableArray: function Walker_walkVariableArray(
						nodes, parent, fieldName) {
						var i;

						if (arguments.length &lt; 3) {
							throw "Invalid number of arguments.";
						}

						if (this.enterVariables) {
							this.enterVariables(nodes, parent,
								fieldName);
						}

						for (i = 0; i &lt; nodes.length; i++) {
							nodes[i] =
								this.walkElement(nodes[i], parent, fieldName, nodes,
									i);
						}

						return (this.exitVariables) ?
							this.exitVariables(nodes, parent, fieldName) : nodes;
					},

					walkCatchArray: function Walker_walkCatchArray(
						nodes, parent, fieldName) {
						var i;

						if (arguments.length &lt; 3) {
							throw "Invalid number of arguments.";
						}

						if (this.enterCatchClauses) {
							this.enterCatchClauses(nodes,
								parent,
								fieldName);
						}

						for (i = 0; i &lt; nodes.length; i++) {
							nodes[i] =
								this.walkElement(nodes[i], parent, fieldName, nodes,
									i);
						}

						return (this.exitCatchClauses) ?
							this.exitCatchClauses(nodes, parent, fieldName) : nodes;
					},

					walkCaseArray: function Walker_walkCaseArray(
						nodes, parent, fieldName) {
						var i;

						if (arguments.length &lt; 3) {
							throw "Invalid number of arguments.";
						}

						if (this.enterSwitchCases) {
							this.enterSwitchCases(nodes, parent,
								fieldName);
						}

						for (i = 0; i &lt; nodes.length; i++) {
							nodes[i] =
								this.walkElement(nodes[i], parent, fieldName, nodes,
									i);
						}

						return (this.exitSwitchCases) ?
							this.exitSwitchCases(nodes, parent, fieldName) : nodes;
					},

					walkElement: function Walker_walkElement(
						node, parent, fieldName, siblings, index) {

						var implemented = false;

						if (arguments.length &lt; 3) {
							throw "Invalid number of arguments.";
						}

						switch (node.type) {
							case Syntax.AssignmentExpression:
								if (this.enterAssignmentExpression) {
									this.enterAssignmentExpression.apply(this,
										arguments);
								}
								node.left = this.walkElement(node.left, node, 'left');
								node.right =
									this.walkElement(node.right, node, 'right');
								node = (this.exitAssignmentExpression) ?
									this.exitAssignmentExpression.apply(this,
										arguments) : node;
								implemented = true;
								break;
							case Syntax.ArrayExpression:
								if (this.enterArrayExpression) {
									this.enterArrayExpression.apply(this,
										arguments);
								}
								node.elements =
									this.walkExpressionArray(node.elements, node,
										'elements');
								node = (this.exitArrayExpression) ?
									this.exitArrayExpression.apply(this,
										arguments) :
									node;
								implemented = true;
								break;
							case Syntax.BlockStatement:
								if (this.enterBlockStatement) {
									this.enterBlockStatement.apply(this,
										arguments);
								}
								node.body =
									this.walkStatementArray(node.body, node,
										'body');
								node = (this.exitBlockStatement) ?
									this.exitBlockStatement.apply(this, arguments) :
									node;
								implemented = true;
								break;
							case Syntax.BinaryExpression:
								if (this.enterBinaryExpression) {
									this.enterBinaryExpression.apply(this,
										arguments);
								}
								node.left = this.walkElement(node.left, node, 'left');
								node.right =
									this.walkElement(node.right, node, 'right');
								node = (this.exitBinaryExpression) ?
									this.exitBinaryExpression.apply(this,
										arguments) :
									node;
								implemented = true;
								break;
							case Syntax.BreakStatement:
								node = (this.walkBreakStatement) ?
									this.walkBreakStatement.apply(this, arguments) :
									node;
								implemented = true;
								break;
							case Syntax.CallExpression:
								if (this.enterCallExpression) {
									this.enterCallExpression.apply(this,
										arguments);
								}
								node.callee =
									this.walkElement(node.callee, node, 'callee');
								node['arguments'] =
									this.walkExpressionArray(node['arguments'], node,
										'arguments');
								node = (this.exitCallExpression) ?
									this.exitCallExpression.apply(this, arguments) :
									node;
								implemented = true;
								break;
							case Syntax.CatchClause:
								if (this.enterCatchClause) {
									this.enterCatchClause.apply(this,
										arguments);
								}
								node.param =
									this.walkElement(node.param, node, 'param');
								node.body = this.walkElement(node.body, node, 'body');
								node = (this.exitCatchClause) ?
									this.exitCatchClause.apply(this, arguments) :
									node;
								implemented = true;
								break;
							case Syntax.ConditionalExpression:
								if (this.enterConditionalExpression) {
									this.enterConditionalExpression.apply(this,
										arguments);
								}
								node.test = this.walkElement(node.test, node, 'test');
								node.consequent = this.walkElement(node.consequent, node, 'consequent');
								node.alternate = this.walkElement(node.alternate, node, 'alternate');
								node = (this.exitConditionalExpression) ?
									this.exitConditionalExpression.apply(this,
										arguments) : node;
								implemented = true;
								break;
							case Syntax.ContinueStatement:
								node = (this.walkContinueStatement) ?
									this.walkContinueStatement.apply(this,
										arguments) :
									node;
								implemented = true;
								break;
							case Syntax.DoWhileStatement:
								if (this.enterDoWhileStatement) {
									this.enterDoWhileStatement.apply(this, arguments);
								}
								node.body = this.walkElement(node.body, node, 'body');
								node.test = this.walkElement(node.test, node, 'test');
								node = (this.exitDoWhileStatement) ?
									this.exitDoWhileStatement.apply(this,
										arguments) :
									node;
								implemented = true;
								break;
							case Syntax.DebuggerStatement:
								node = (this.walkDebuggerStatement) ?
									this.walkDebuggerStatement.apply(this,
										arguments) :
									node;
								implemented = true;
								break;
							case Syntax.EmptyStatement:
								node = (this.walkEmptyStatement) ?
									this.walkEmptyStatement.apply(this, arguments) :
									node;
								implemented = true;
								break;
							case Syntax.ExpressionStatement:
								if (this.enterExpressionStatement) {
									this.enterExpressionStatement.apply(this,
										arguments);
								}
								node.expression =
									this.walkElement(node.expression, node,
										'expression');
								node = (this.exitExpressionStatement) ?
									this.exitExpressionStatement.apply(this,
										arguments) : node;
								implemented = true;
								break;
							case Syntax.ForStatement:
								if (this.enterForStatement) {
									this.enterForStatement.apply(this, arguments);
								}
								if (node.init) {
									node.init =
										this.walkElement(node.init, node, 'init');
								}
								if (node.test) {
									node.test =
										this.walkElement(node.test, node, 'test');
								}
								if (node.update) {
									node.update =
										this.walkElement(node.update, node, 'update');
								}
								node.body = this.walkElement(node.body, node, 'body');
								node = (this.exitForStatement) ?
									this.exitForStatement.apply(this, arguments) :
									node;
								implemented = true;
								break;
							case Syntax.ForInStatement:
								if (this.enterForInStatement) {
									this.enterForInStatement.apply(this, arguments);
								}
								node.left = this.walkElement(node.left, node, 'left');
								node.right =
									this.walkElement(node.right, node, 'right');
								node.body = this.walkElement(node.body, node, 'body');
								node = (this.exitForInStatement) ?
									this.exitForInStatement.apply(this, arguments) :
									node;
								implemented = true;
								break;
							case Syntax.FunctionDeclaration:
								if (this.enterFunctionDeclaration) {
									this.enterFunctionDeclaration.apply(this,
										arguments);
								}
								node.params =
									this.walkParamArray(node.params, node,
										'params');
								node.body = this.walkElement(node.body, node, 'body');
								node = (this.exitFunctionDeclaration) ?
									this.exitFunctionDeclaration.apply(this,
										arguments) : node;
								implemented = true;
								break;
							case Syntax.FunctionExpression:
								if (this.enterFunctionExpression) {
									this.enterFunctionExpression.apply(this, arguments);
								}
								node.params =
									this.walkParamArray(node.params, node,
										'params');
								node.body = this.walkElement(node.body, node, 'body');
								node = (this.exitFunctionExpression) ?
									this.exitFunctionExpression.apply(this,
										arguments) :
									node;
								implemented = true;
								break;
							case Syntax.Identifier:
								node =
									(this.walkIdentifier) ?
										this.walkIdentifier.apply(this,
											arguments) :
										node;
								implemented = true;
								break;
							case Syntax.IfStatement:
								if (this.enterIfStatement) {
									this.enterIfStatement.apply(this, arguments);
								}
								node.test = this.walkElement(node.test, node, 'test');
								node.consequent =
									this.walkElement(node.consequent, node,
										'consequent');
								if (node.alternate) {
									node.alternate =
										this.walkElement(node.alternate, node,
											'alternate');
								}
								node = (this.exitIfStatement) ?
									this.exitIfStatement.apply(this, arguments) :
									node;
								implemented = true;
								break;
							case Syntax.Literal:
								node =
									(this.walkLiteral) ?
										this.walkLiteral.apply(this,
											arguments) : node;
								implemented = true;
								break;
							case Syntax.LabeledStatement:
								if (this.enterLabeledStatement) {
									this.enterLabeledStatement.apply(this, arguments);
								}
								node.body = this.walkElement(node.body, node, 'body');
								node = (this.exitLabeledStatement) ?
									this.exitLabeledStatement.apply(this,
										arguments) :
									node;
								implemented = true;
								break;
							case Syntax.LogicalExpression:
								if (this.enterLogicalExpression) {
									this.enterLogicalExpression.apply(this, arguments);
								}
								node.left = this.walkElement(node.left, node, 'left');
								node.right =
									this.walkElement(node.right, node, 'right');
								node = (this.exitLogicalExpression) ?
									this.exitLogicalExpression.apply(this,
										arguments) :
									node;
								implemented = true;
								break;
							case Syntax.MemberExpression:
								if (this.enterMemberExpression) {
									this.enterMemberExpression.apply(this, arguments);
								}
								node.object =
									this.walkElement(node.object, node, 'object');
								node.property =
									this.walkElement(node.property, node,
										'property');
								node = (this.exitMemberExpression) ?
									this.exitMemberExpression.apply(this,
										arguments) :
									node;
								implemented = true;
								break;
							case Syntax.NewExpression:
								if (this.enterNewExpression) {
									this.enterNewExpression.apply(this,
										arguments);
								}
								node.callee =
									this.walkElement(node.callee, node, 'callee');
								node['arguments'] =
									this.walkExpressionArray(node['arguments'], node,
										'arguments');
								node = (this.exitNewExpression) ?
									this.exitNewExpression.apply(this, arguments) :
									node;
								implemented = true;
								break;
							case Syntax.ObjectExpression:
								if (this.enterObjectExpression) {
									this.enterObjectExpression.apply(this, arguments);
								}
								node.properties =
									this.walkPropertyArray(node.properties, node,
										'properties');
								node = (this.exitObjectExpression) ?
									this.exitObjectExpression.apply(this,
										arguments) :
									node;
								implemented = true;
								break;
							case Syntax.Program:
								if (this.enterProgram) {
									this.enterProgram.apply(this,
										arguments);
								}
								node.body =
									this.walkStatementArray(node.body, node,
										'body');
								node =
									(this.exitProgram) ?
										this.exitProgram.apply(this,
											arguments) : node;
								implemented = true;
								break;
							case Syntax.Property:
								if (this.enterProperty) {
									this.enterProperty.apply(this,
										arguments);
								}
								node.value =
									this.walkElement(node.value, node, 'value');
								node =
									(this.exitProperty) ?
										this.exitProperty.apply(this,
											arguments) :
										node;
								implemented = true;
								break;
							case Syntax.ReturnStatement:
								if (this.enterReturnStatement) {
									this.enterReturnStatement.apply(this,
										arguments);
								}
								if (node.argument) {
									node.argument =
										this.walkElement(node.argument, node,
											'argument');
								}

								node = (this.exitReturnStatement) ?
									this.exitReturnStatement.apply(this,
										arguments) :
									node;
								implemented = true;
								break;
							case Syntax.SequenceExpression:
								if (this.enterSequenceExpression) {
									this.enterSequenceExpression.apply(this,
										arguments);
								}
								node.expressions =
									this.walkExpressionArray(node.expressions, node,
										'expressions');
								node = (this.exitSequenceExpression) ?
									this.exitSequenceExpression.apply(this,
										arguments) :
									node;
								implemented = true;
								break;
							case Syntax.SwitchStatement:
								if (this.enterSwitchStatement) {
									this.enterSwitchStatement.apply(this,
										arguments);
								}
								node.discriminant =
									this.walkElement(node.discriminant, node,
										'discriminant');
								if (node.cases) {
									node.cases =
										this.walkCaseArray(node.cases, node,
											'cases');
								}
								node = (this.exitSwitchStatement) ?
									this.exitSwitchStatement.apply(this,
										arguments) :
									node;
								implemented = true;
								break;
							case Syntax.SwitchCase:
								if (this.enterSwitchCase) {
									this.enterSwitchCase.apply(this,
										arguments);
								}
								if (node.test) {
									node.test =
										this.walkElement(node.test, node, 'test');
								}
								node.consequent =
									this.walkStatementArray(node.consequent, node,
										'consequent');
								node =
									(this.exitSwitchCase) ?
										this.exitSwitchCase.apply(this,
											arguments) :
										node;
								implemented = true;
								break;
							case Syntax.ThisExpression:
								node = (this.walkThisExpression) ?
									this.walkThisExpression.apply(this, arguments) :
									node;
								implemented = true;
								break;
							case Syntax.ThrowStatement:
								if (this.enterThrowStatement) {
									this.enterThrowStatement.apply(this,
										arguments);
								}
								node.argument =
									this.walkElement(node.argument, node,
										'argument');
								node = (this.exitThrowStatement) ?
									this.exitThrowStatement.apply(this, arguments) :
									node;
								implemented = true;
								break;
							case Syntax.TryStatement:
								if (this.enterTryStatement) {
									this.enterTryStatement.apply(this,
										arguments);
								}
								node.block =
									this.walkElement(node.block, node, 'block');
								node.handlers =
									this.walkCatchArray(node.handlers, node,
										'handlers');
								if (node.finalizer) {
									node.finalizer =
										this.walkElement(node.finalizer, node,
											'finalizer');
								}
								node = (this.exitTryStatement) ?
									this.exitTryStatement.apply(this, arguments) :
									node;
								implemented = true;
								break;
							case Syntax.UnaryExpression:
								if (this.enterUnaryExpression) {
									this.enterUnaryExpression.apply(this,
										arguments);
								}
								node.argument =
									this.walkElement(node.argument, node,
										'argument');
								node = (this.exitUnaryExpression) ?
									this.exitUnaryExpression.apply(this,
										arguments) :
									node;
								implemented = true;
								break;
							case Syntax.UpdateExpression:
								if (this.enterUpdateExpression) {
									this.enterUpdateExpression.apply(this,
										arguments);
								}
								node.argument =
									this.walkElement(node.argument, node,
										'argument');
								node = (this.exitUpdateExpression) ?
									this.exitUpdateExpression.apply(this,
										arguments) :
									node;
								implemented = true;
								break;
							case Syntax.VariableDeclaration:
								if (this.enterVariableDeclaration) {
									this.enterVariableDeclaration.apply(this,
										arguments);
								}
								node.declarations =
									this.walkVariableArray(node.declarations, node,
										'declarations');
								node = (this.exitVariableDeclaration) ?
									this.exitVariableDeclaration.apply(this,
										arguments) : node;
								implemented = true;
								break;
							case Syntax.VariableDeclarator:
								if (this.enterVariableDeclarator) {
									this.enterVariableDeclarator.apply(this,
										arguments);
								}
								node.id = this.walkElement(node.id, node, 'id');
								if (node.init) {
									node.init =
										this.walkElement(node.init, node, 'init');
								}
								node = (this.exitVariableDeclarator) ?
									this.exitVariableDeclarator.apply(this,
										arguments) :
									node;
								implemented = true;
								break;
							case Syntax.WithStatement:
								if (this.enterWithStatement) {
									this.enterWithStatement.apply(this,
										arguments);
								}
								node.object =
									this.walkElement(node.object, node, 'object');
								node.body = this.walkElement(node.body, node, 'body');
								node = (this.exitWithStatement) ?
									this.exitWithStatement.apply(this, arguments) :
									node;
								implemented = true;
								break;
							case Syntax.WhileStatement:
								if (this.enterWhileStatement) {
									this.enterWhileStatement.apply(this,
										arguments);
								}
								node.test = this.walkElement(node.test, node, 'test');
								node.body = this.walkElement(node.body, node, 'body');
								node = (this.exitWhileStatement) ?
									this.exitWhileStatement.apply(this, arguments) :
									node;
								implemented = true;
								break;
						}

						if (!implemented) {
							process.stdout.write('Unimplemented: ' + node.type +
								'\nContents: ' +
								JSON.stringify(node) + '\n');
						}

						return node;
					},

					walk: function Walker_walk(root) {
						return this.walkElement(root, null, '');
					}

				};

				return Walker;
			})();

			function createWalker() {
				return new Walker();
			}

			// Sync with package.json.
			exports.version = '0.1.1';
			exports.createWalker = createWalker;

			return exports;
		}(typeof exports === 'undefined' ? (eswalker = {}) : exports));

		var custom_template = {

			/**
			 * Return a list with the name of node visitor functions that will be used in this template 
			 * @method walkFunctions
			 * @return [] walkFunctions
			 */
			walkFunctions: function () {

				var walkFunctions = [
					
					{ name: 'enterCallExpression' },
					{ name: 'enterFunctionExpression' },
					{ name: 'enterFunctionDeclaration' },
					{ name: 'enterVariableDeclaration' },
					{ name: 'enterAssignmentExpression' },
					{ name: 'enterExpressionStatement' },
					{ name: 'enterNewExpression' },
				];
				//#region 
				/*		            
				var walkFunctions = [
					{name: 'enterAssignmentExpression'},
					{name: 'enterArrayExpression'},
					{name: 'enterBlockStatement'},
					{name: 'enterBinaryExpression'},
					{name: 'enterBreakStatement'},
					{name: 'enterCallExpression'},
					{name: 'enterCatchClause'},
					{name: 'enterConditionalExpression'},
					{name: 'enterContinueStatement'},
					{name: 'enterDoWhileStatement'},
					{name: 'enterDebuggerStatement'},
					{name: 'enterEmptyStatement'},
					{name: 'enterExpressionStatement'},
					{name: 'enterForStatement'},
					{name: 'enterForInStatement'},
					{name: 'enterFunctionDeclaration'},
					{name: 'enterFunctionExpression'},
					{name: 'enterIdentifier'},
					{name: 'enterIfStatement'},
					{name: 'enterLiteral'},
					{name: 'enterLabeledStatement'},
					{name: 'enterLogicalExpression'},
					{name: 'enterMemberExpression'},
					{name: 'enterNewExpression'},
					{name: 'enterObjectExpression'},
					{name: 'enterProgram'},
					{name: 'enterProperty'},
					{name: 'enterReturnStatement'},
					{name: 'enterSequenceExpression'},
					{name: 'enterSwitchStatement'},
					{name: 'enterSwitchCase'},
					{name: 'enterThisExpression'},
					{name: 'enterThrowStatement'},
					{name: 'enterTryStatement'},
					{name: 'enterUnaryExpression'},
					{name: 'enterUpdateExpression'},
					{name: 'enterVariableDeclaration'},
					{name: 'enterVariableDeclarator'},
					{name: 'enterWhileStatement'},
					{name: 'enterWithStatement'}
				];
				*/
				//#endregion
				return walkFunctions;
			},

			/**
			 * Allow to write custom tags
			 * @method tags
			 * @param {} template_instance object through which we can access the attributes like config, comment_list, etc
			 * @return tags Object that contains the custom tags implementations
			 */
			tags: function (template_instance) {

				var tags = {

					'class': {
						/**
						 * Define the way to build comments for Class tag
						 * @method buildComment
						 * @param {} data
						 * @return {undefined}
						 */
						buildComment: function (data) {

							var instance = template_instance,                  //BaseTemplate instance
								config = instance.config,                      //User current config               
								available_options = config.tags['class'],      //Custom functions tags options
								pos,                                           // Empty comment obj
								comment = {
									pos: data.pos,
									end: data.end || null,
									tags: {
										'' : [],
										'class': [],
										'param': [],
										'author': [],
										'date': [],
										'extends': [],
										'requires': [],
										'memberof': []
									},
									data: data,
									//isClass: data.isClass,
									name: null
								},
								method_name = data.name,
								node = data.node,
								params = [],
								default_value = 'My function Description';

							if (data.lends) {
								comment.tags.lends = [data.lends];
								if (comment.pos &gt;= 0) {
									//Add comment to comment_list
									instance.comments_list.push(comment);
								}
								return;
							}

							if (available_options.desc) {
								if (available_options.desc.value) {
									default_value = available_options.desc.value;
								}
								comment.tags[''] = [default_value, ''];
							}

							//@class 
							if (data.className) {
								comment.name = data.className;
								comment.tags['class'] = [''];
							}

							/*
							//@author
							comment.tags.author = [author];

							//@date
							comment.tags.date = [new Date()];
		
							//@memberof
							comment.tags.memberof = [applicationScope.concat('.module:').concat(objectType)]; // global.module:sys_ui_script
							*/
							//@extends
							if (data.extendsClassName) {
								comment.tags.extends = [data.extendsClassName]; // 'module:'.concat(header.extendsClassName) // global.module:sys_ui_script.SrAJAXTableCompleter	
							}


							//@requires
							if (data.requires &amp;&amp; data.requires.length) {
								// make requires unique
								//console.log("data.requires ", data.requires)
								data.requires = data.requires.filter(function (inclusion, index, array) {
									return !array.some(function (compare, compareIndex) {
										if (compareIndex &gt; index) {
											return (inclusion == compare);
										}
									});
								}).sort(function (a, b) { return a.toLowerCase() &gt; b.toLowerCase(); });
								
								comment.tags.requires = [];

								data.requires.forEach(function (include) {
									comment.tags.requires.push(include);
								});
							}

							//@param statement
							if (node &amp;&amp; available_options.params &amp;&amp; node.params) {
								var array = node.params,
									size = array.length,
									i = 0,
									value;

								comment.tags.param = [];
								for (i; i &lt; size; i++) {
									comment.tags.param.push('{any} ' + array[i].name);
								}
							}

							//@return statement
							if (available_options.rtrn) {
								var value = '{any}';
								if (node &amp;&amp; node.body) {
									var body_elements = node.body.body;

									if (body_elements) {
										var size = body_elements.length;
										i = 0;
										for (var i = 0; i &lt; size; i++) {
											if (body_elements[i].type === 'ReturnStatement') {

												if (body_elements[i].argument) {
													if (body_elements[i].argument.name) {
														value = '{any} ' + body_elements[i].argument.name;
													} else {
														value = body_elements[i].argument.type;
														
														if ('ArrayExpression' === value) {
															value = '{Array&lt;any&gt;} ';//add_comment
														} else if ('ObjectExpression' === value || 'CallExpression' === value) {
															value = '{any} ';//add_comment
														} else if ('Literal' === value) {
															value = '{' + typeof (body_elements[i].argument.value) + '} '; //add_comment
														} else {
															value = '{' + value + '} '; //add_comment
														}
													}
												}
											}
										}
									}
								}
								comment.tags.returns = [value];
							}

							if (comment.pos &gt;= 0) {
								//Add comment to comment_list
								instance.comments_list.push(comment);
							}
						},

						/*
							search for class extensions 
								Class.create(AJAXTableCompleter,{})

							this will add the @lends tag
						*/
						enterVariableDeclaration: function (params) {
							var instance = this,
								node = params.node,
								declarations = node.declarations,
								size = declarations.length,
								i = 0,
								item,
								comment_data = {};

							for (i; i &lt; size; i++) {
								item = declarations[i];

								if (item.init &amp;&amp; item.init.type === 'CallExpression' &amp;&amp;
									item.init.callee &amp;&amp;
									item.init.callee.object &amp;&amp; item.init.callee.object.name == 'Class' &amp;&amp;
									item.init.callee.property &amp;&amp; item.init.callee.property.name == 'create') {

									//console.log('\t', item);
									
									instance.buildComment({
										className: item.id.name,
										pos: node.range[0], // the class name, position
										end: node.range[1]
									});

									item.init.arguments.some(function (argument) {
										if (argument.type == "ObjectExpression") {
											instance.buildComment({
												lends: [applicationScope, 'module:'.concat(objectType)].concat([item.id.name, 'prototype']).join('.'),
												pos: argument.range[0],
												end: argument.range[1]
											});
											return true;
										}
									});
								}
							}
						},

						/**
						 * Search for 'WsAbstractWatsonCore.prototype' = Object.extendsObject(...)
						 * 	also works with WsAbstractWatsonCore.prototype = {} (update the class end [range])
						 * 
						 * @method enterExpressionStatement
						 * @param {} params Object that contains properties like node, parent, fieldName, siblings, index
						 * @return
						 */
						enterExpressionStatement: function (params) {
							//console.log('class.enterExpressionStatement')
							var instance = this,
								leftNode = params.node.expression.left,
								rightNode = params.node.expression.right;

							
							if (!leftNode || !rightNode || leftNode.type != 'MemberExpression' || (rightNode.type != 'CallExpression' &amp;&amp; rightNode.type != 'ObjectExpression'))
								return;

							/*
								build the class name (left)
							*/
							var object = leftNode,
								pos = leftNode.range[0],
								end = rightNode.range[1],
								objects = [],
								index = 1;

							while (object) {
								index++;
								objects.push(object.property ? object.property.name : object.name);
								if (object.type == 'Identifier') {
									object = false;
								}
								object = object.object || false;

								if (index &gt; 10)
									object = false;
							}
							
							if (objects[0] != 'prototype')
								return;

							var classNameArray = objects.reverse();
							var className = objects[0];
							var classComment = template_instance.comments_list.find(function (comment, index) {
								return (comment.name == className);
							});

							if (!classComment)
								return;

							// set end position
							classComment.end = end;
							// in case of 'ObjectExpression' we can end here

							/*
								build the extends class name (right)
							*/
							if (rightNode.type == 'CallExpression' &amp;&amp; rightNode.callee.object &amp;&amp; rightNode.callee.property &amp;&amp; (
								(rightNode.callee.object.name == 'Class' &amp;&amp; rightNode.callee.property.name == 'create') ||
								(rightNode.callee.object.name == 'Object' &amp;&amp; rightNode.callee.property.name == 'extendsObject')
							)) {
								if (rightNode.arguments.length == 2) {
									object = rightNode.arguments[0];
									pos = rightNode.arguments[1].range[0];
									objects = [];
									index = 1;

									while (object) {
										index++;
										objects.push(object.property ? object.property.name : object.name);
										if (object.type == 'Identifier') {
											object = false;
										}
										object = object.object || false;

										if (index &gt; 10)
											object = false;
									}

									var extendsClassNameArray = objects.reverse();
									if (extendsClassNameArray.length == 1) {
										extendsClassNameArray = [applicationScope, 'module:'.concat(objectType)].concat(extendsClassNameArray);

									} else {
										var scopeName = extendsClassNameArray[0].toLowerCase();
										var containsScopeName = ['global', 'x_*'].some(function (exc) {
											return (/\*$/.test(exc)) ? (scopeName.indexOf(exc.replace(/\*$/, '')) === 0) : (scopeName == exc);
										});
										if (containsScopeName) {
											extendsClassNameArray = [extendsClassNameArray[0], 'module:'.concat(objectType)].concat(extendsClassNameArray.splice(1));
										} else {
											extendsClassNameArray = [applicationScope, 'module:'.concat(objectType)].concat(extendsClassNameArray);
										}
									}
									/*
										add the extends tag to the class definition
									*/
									classComment.tags.extends = [extendsClassNameArray.join('.')];
									
								}
							}
						},

						/**
						 * Search for Object.extendsObject(aaaa.bbbb.ClassName,{}) to embed the @ lends tag
						 * 
						 * @method enterAssignmentExpression
						 * @param {} params Object that contains properties like node, parent, fieldName, siblings, index
						 * @return {undefined}
						 */
						enterAssignmentExpression: function (params) {
							
							var instance = this,
								node = params.node,
								comment_data = null;
							
							if (node.left &amp;&amp; node.left.object) {

								/*
								root class pattern:

								var VirtualAppAbstract = Class.create();
								VirtualAppAbstract.prototype = {}
								*/

								if (node.right &amp;&amp; node.right.type == 'ObjectExpression' &amp;&amp; node.left.property &amp;&amp; node.left.property.name == 'prototype') {
									// ad the @lends tag
									
									var object = node.left,
										objects = [],
										index = 1;

									while (object) {
										index++;
										objects.push(object.property ? object.property.name : object.name);
										if (object.type == 'Identifier') {
											object = false;
										}
										object = object.object || false;

										if (index &gt; 10)
											object = false;
									}
									
									var startPos = node.right.range[0];
									instance.buildComment({
										lends: [applicationScope, 'module:'.concat(objectType)].concat(objects.reverse()).join('.'),
										pos: startPos,
										node: { params: null },
										name: null
									});
									
								} else
									
								/*
								extendsObject class pattern:
								
								var VirtualAppAbstract = Class.create();
								VirtualAppAbstract.prototype = Object.extends('className', {});
								*/
								
								if (node.right &amp;&amp;
									node.right.callee &amp;&amp;
									node.right.callee.object &amp;&amp;
									node.right.callee.object.name === 'Object' &amp;&amp;
									node.right.callee.property &amp;&amp;
									node.right.callee.property.name === 'extendsObject') {
									
									
									
									if ("MemberExpression" == node.left.type) {

										// ad the @lends tag
										if (node.right.arguments[1]) {
											var startPos = node.right.arguments[1].range[0];
											instance.buildComment({
												lends: [applicationScope, 'module:'.concat(objectType)].concat([node.left.object.name, node.left.property.name]).join('.'),
												pos: startPos,
												node: { params: null },
												name: null
											});	
										}
									}
								}
							}
						}
					},

					'function': {
						/**
						 * Define the way to build comments for functions tag
						 * @method buildComment
						 * @param {} data
						 * @return {undefined}
						 */
						buildComment: function (data) {

							var instance = template_instance,                  //BaseTemplate instance
								config = instance.config,                      //User current config               
								available_options = config.tags['function'],      //Custom functions tags options
								pos,                                           // Empty comment obj
								comment = {
									pos: data.pos,
									end: data.end || null,
									tags: {
										'': [],
										'method': [],
										'param': [],
										'author': [],
										'date': [],
										'requires': [],
										'memberof': [],
										'returns': [],
									},
								},
								method_name = data.methodName,
								node = data.node,
								params = [],
								default_value = 'My function Description';

							//Description statement
							if (available_options.desc) {
								if (available_options.desc.value) {
									default_value = available_options.desc.value;
								}
								comment.tags[''] = [default_value, ''];
							}
							
							//@method statement
							if (method_name) { // &amp;&amp; available_options.name
								comment.tags.method = [method_name];
							}

							//@param statement
							if (available_options.params &amp;&amp; node.params) {
								var array = node.params,
									size = array.length,
									i = 0,
									value;
								
								comment.tags.param = [];
								for (i; i &lt; size; i++) {
									comment.tags.param.push('{any} ' + array[i].name);
								}
							}

							//@return statement
							if (available_options.rtrn) {
								var value = '{undefined}';
								if (node.body) {
									var body_elements = node.body.body;

									if (body_elements) {
										var size = body_elements.length;
										i = 0;
										for (var i = 0; i &lt; size; i++) {
											if (body_elements[i].type === 'ReturnStatement') {
												//console.log(body_elements[i].argument)
												if (body_elements[i].argument) {
													if (body_elements[i].argument.name) {
														value = '{any} ' + body_elements[i].argument.name;
													} else {
														value = body_elements[i].argument.type;
														
														if ('ArrayExpression' === value) {
															value = '{Array&lt;any&gt;} ';//add_comment
														} else if ('ObjectExpression' === value || 'CallExpression' === value) {
															value = '{any} ';//add_comment
														} else if ('Literal' === value) {
															value = '{' + typeof (body_elements[i].argument.value) + '} '; //add_comment
														} else {
															value = '{' + value + '} '; //add_comment
														}
													}
												} else {
													//value = '{undefined}';
												}
											}
										}
									}
								}
								if(value)
									comment.tags.returns = [value];
							}

							if (comment.pos &gt;= 0) {
								//Add comment to comment_list
								instance.comments_list.push(comment);
							}
						},

						/**
						 * Concrete visitor function implementation for functions tags in default Template
						 * @method enterFunctionExpression
						 * @param {} params Object that contains properties like node, parent, fieldName, siblings, index
						 * @return {undefined}
						 */
						enterFunctionExpression: function (params) {
							
							var instance = this,
								comment_data = {},
								parent = params.parent;
							
							if (parent.type === 'Property') {
								//console.log('enterFunctionExpression: Property', parent);
								if (parent.key) {
									comment_data.name = parent.key.name;
								}

								comment_data.pos = parent.range[0];
								comment_data.end = parent.range[1];
								comment_data.node = params.node;
								instance.buildComment(comment_data);
							}
							else if (parent.type === 'AssignmentExpression') {
								//console.log('enterFunctionExpression: AssignmentExpression', parent);
								if (parent.right.type === 'FunctionExpression') {

									if (parent.left.property &amp;&amp; parent.left.property.name) {
										comment_data.name = parent.left.property.name;
									}

									comment_data.pos = parent.left.range[0];
									comment_data.end = parent.left.range[1];
									comment_data.node = parent.right;
									instance.buildComment(comment_data);
								}
							}
						},

						/**
						 * Find IFFE - named or anonymous
						 *  finds: 
						 *		(function () {
						 *			return null;
						 *		})();
						 *
						 *		(function functionName() {
					 	 *			return null;
						 *		})();
						 *
						 *	but NOT:
						 *		var test = (function () {
						 *			return null;
						 *		})();
						 * @method enterExpressionStatement
						 * @param {} params 
						 * @return {undefined}
						 */
						enterExpressionStatement: function (params) {
							
							var instance = this,
								comment_data = {},
								node = params.node;

							if (node.expression &amp;&amp; node.expression.callee &amp;&amp; node.expression.callee.type == 'FunctionExpression') { 
								
								comment_data.methodName = (node.expression.callee.id) ? node.expression.callee.id.name : 'anonymous-' + node.range[0];
								comment_data.node = node;
								comment_data.pos = node.range[0];
								comment_data.end = node.range[1];
								instance.buildComment(comment_data);
								
							}
						},

						/**
						 * Concrete visitor function implementation for functions tags in default Template
						 * @method enterFunctionDeclaration
						 * @param {} params Object that contains properties like node, parent, fieldName, siblings, index
						 * @return {undefined}
						 */
						enterFunctionDeclaration: function (params) {
							
							var instance = this,
								node = params.node,
								comment_data = {
									pos: node.range[0],
									end: node.range[1],
									name: node.id.name,
									node: node
								};
							instance.buildComment(comment_data);
						},

						/**
						 * Concrete visitor function implementation for functions tags in default Template
						 * @method enterVariableDeclaration
						 * @param {} params Object that contains properties like node, parent, fieldName, siblings, index
						 * @return {undefined}
						 */
						enterVariableDeclaration: function (params) {
							
							var instance = this,
								node = params.node,
								declarations = node.declarations,
								size = declarations.length,
								i = 0,
								item,
								comment_data = {};
							for (i; i &lt; size; i++) {
								item = declarations[i];

								if (item.init &amp;&amp; item.init.type === 'FunctionExpression') {
									comment_data.name = item.id.name;
									comment_data.node = item.init;

								}
							}

							if (comment_data.name) {
								comment_data.pos = node.range[0];
								comment_data.end = node.range[1];
								instance.buildComment(comment_data);
							}
						}

						// #region 
						/* 
						enterAssignmentExpression: function(params) {console.log('AssignmentExpression', params)}, 
						enterArrayExpression: function(params) {console.log('ArrayExpression', params)}, 
						enterBlockStatement: function(params) {console.log('BlockStatement', params)}, 
						enterBinaryExpression: function(params) {console.log('BinaryExpression', params)}, 
						enterBreakStatement: function(params) {console.log('BreakStatement', params)}, 
					    
						enterCallExpression: function(params) {console.log('CallExpression', params)}, 
						enterCatchClause: function(params) {console.log('CatchClause', params)}, 
						enterConditionalExpression: function(params) {console.log('ConditionalExpression', params)}, 
						enterContinueStatement: function(params) {console.log('ContinueStatement', params)}, 
						enterDoWhileStatement: function(params) {console.log('DoWhileStatement', params)}, 
						enterDebuggerStatement: function(params) {console.log('DebuggerStatement', params)}, 
						enterEmptyStatement: function(params) {console.log('EmptyStatement', params)}, 
						enterExpressionStatement: function(params) {console.log('ExpressionStatement', params)}, 
						enterForStatement: function(params) {console.log('ForStatement', params)}, 
						enterForInStatement: function(params) {console.log('ForInStatement', params)}, 
						enterFunctionDeclaration: function(params) {console.log('FunctionDeclaration', params)}, 
						enterFunctionExpression: function(params) {console.log('FunctionExpression', params)}, 
						enterIdentifier: function(params) {console.log('Identifier', params)}, 
						enterIfStatement: function(params) {console.log('IfStatement', params)}, 
						enterLiteral: function(params) {console.log('Literal', params)}, 
						enterLabeledStatement: function(params) {console.log('LabeledStatement', params)}, 
						enterLogicalExpression: function(params) {console.log('LogicalExpression', params)}, 
						enterMemberExpression: function(params) {console.log('MemberExpression', params)}, 
						enterNewExpression: function(params) {console.log('NewExpression', params)}, 
						enterObjectExpression: function(params) {console.log('ObjectExpression', params)}, 
						enterProgram: function(params) {console.log('Program', params)}, 
						enterProperty: function(params) {console.log('Property', params)}, 
						enterReturnStatement: function(params) {console.log('ReturnStatement', params)}, 
						enterSequenceExpression: function(params) {console.log('SequenceExpression', params)}, 
						enterSwitchStatement: function(params) {console.log('SwitchStatement', params)}, 
						enterSwitchCase: function(params) {console.log('SwitchCase', params)}, 
						enterThisExpression: function(params) {console.log('ThisExpression', params)}, 
						enterThrowStatement: function(params) {console.log('ThrowStatement', params)}, 
						enterTryStatement: function(params) {console.log('TryStatement', params)}, 
						enterUnaryExpression: function(params) {console.log('UnaryExpression', params)}, 
						enterUpdateExpression: function(params) {console.log('UpdateExpression', params)}, 
						enterVariableDeclaration: function(params) {console.log('VariableDeclaration', params)}, 
						enterVariableDeclarator: function(params) {console.log('VariableDeclarator', params)}, 
						enterWhileStatement: function(params) {console.log('WhileStatement', params)}, 
						enterWithStatement: function(params) {console.log('WithStatement', params)} 
					   */
						// #endregion
					},

					'requires': {
						buildComment: function (data) {
							var instance = template_instance;
							
							var parentObj = instance.comments_list.find(function (comment) {
								return (comment.pos &lt;= data.pos &amp;&amp; comment.end &gt;= data.pos);
							});

							if (parentObj) {
								parentObj.tags.requires = parentObj.tags.requires || [];
								if (parentObj.tags.requires.indexOf(data.req) === -1) {
									parentObj.tags.requires.push(data.req);	
								}
							}
						},


						enterNewExpression: function (params) {
							//console.log('enterNewExpression', params);
							return this.requiresExpression(params);
						},

						requiresExpression: function (params, include) {
							var instance = this;

							var object = params.node.callee,
								pos = params.node.range[0];

							var objects = [];
							var index = 1;
							while (object) {
								index++;
								objects.push(('ThisExpression' == object.type ? 'this' : object.property ? object.property.name : object.name) || 'undefined');
								if (object.type == 'Identifier') {
									object = false;
								}
								object = object.object || false;

								if (index &gt; 10)
									object = false;
							}

							if (objects.length) {

								// reverse sort;
								objects.reverse();

								if (Array.isArray(include)) {
									var first = objects[0].toLowerCase();
									if (include.some(function (inc) {
										return (first.indexOf(inc.toLowerCase()) === 0);
									})) {
										instance.buildRequires(objects, pos);
									}
								} else {
									instance.buildRequires(objects, pos);
								}
							}
						},

						buildRequires: function (requiresClassArray, pos) {
							var self = this;

							if (requiresClassArray) {

								//var header = self.getHeader(pos);

								/*
									new global.Processor('a','b');
									new Processor('a','b');
								*/

								var jsGlobals = ['Object', 'Function', 'Boolean', 'Symbol', 'Error', 'EvalError', 'InternalError', 'RangeError', 'ReferenceError', 'SyntaxError', 'TypeError', 'URIError', 'Number', 'Math', 'Date', 'String', 'RegExp', 'Array', 'Int8Array', 'Uint8Array', 'Uint8ClampedArray', 'Int16Array', 'Uint16Array', 'Int32Array', 'Uint32Array', 'Float32Array', 'Float64Array', 'Map', 'Set', 'WeakMap', 'WeakSet', 'ArrayBuffer', 'DataView', 'JSON', 'Promise', 'Generator', 'GeneratorFunction', 'Reflect', 'Proxy', 'Intl', 'WebAssembly'],
									excludeExpression = ['gs', 'Glide', 'this', 'undefined', 'Class', 'Gwt'].concat(jsGlobals),
									scopePattern = ['global', 'x_*', 'sn_*'],
									requiresClass = requiresClassArray.join('.'),
									lowerExpr = requiresClass.toLowerCase();

								//console.log("lowerExpr", lowerExpr);
								//console.log("excludeExpression ", excludeExpression);
								var inValidExpression = excludeExpression.some(function (exc) {
									return (lowerExpr.indexOf(exc.toLowerCase()) === 0);
								});
								if (inValidExpression) {
									//console.log("invalidExpression", requiresClassArray)
									return;
								}

								var currentIsClassObjectType = (['sys_script_include', 'sys_ui_script'].indexOf(objectType) !== -1);
								var requiresObjectType = (currentIsClassObjectType) ? objectType : 'sys_script_include';

								if (requiresClassArray.length &gt; 1) {
									var scopeName = requiresClassArray[0].toLowerCase();
									var containsScopeName = scopePattern.some(function (exc) {
										return (/\*$/.test(exc)) ? (scopeName.indexOf(exc.replace(/\*$/, '')) === 0) : (scopeName == exc);
									});
									//console.log('containsScopeName ', containsScopeName)

									if ((containsScopeName &amp;&amp; requiresClassArray.length &gt; 2) || (!containsScopeName &amp;&amp; requiresClassArray.length &gt; 1)) {
										var last = requiresClassArray.splice(-1, 1);
										requiresClassArray[requiresClassArray.length - 1] = requiresClassArray[requiresClassArray.length - 1].concat('#').concat(last);
									}
								}

								if (requiresClassArray.length == 1) {
									requiresClassArray = [applicationScope, 'module:'.concat(requiresObjectType)].concat(requiresClassArray);

								} else {
									var scopeName = requiresClassArray[0].toLowerCase();
									var containsScopeName = scopePattern.some(function (exc) {
										return (/\*$/.test(exc)) ? (scopeName.indexOf(exc.replace(/\*$/, '')) === 0) : (scopeName == exc);
									});
									if (containsScopeName) {
										requiresClassArray = [requiresClassArray[0], 'module:'.concat(requiresObjectType)].concat(requiresClassArray.splice(1));
									} else {
										requiresClassArray = [applicationScope, 'module:'.concat(requiresObjectType)].concat(requiresClassArray);
									}
								}

								//console.log("buildRequires ", requiresClass, pos, requiresClassArray);
								//header.requires.push(requiresClassArray.join('.'));

								self.buildComment({
									pos: pos,
									req: requiresClassArray.join('.')
								});
							}
						}
						
					}
				};
				return tags;
			}
		};
		
		var BaseTemplate = {
			initialize: function (config) {
				var instance = BaseTemplate;
				instance.config = config;
			},

			executeWalk: function (walkname, params) {
				var instance = BaseTemplate,
					tags;
				//For every tag 
				Object.keys(instance.tags).forEach(function (item, index) {
					if (instance.tags[item][walkname] &amp;&amp; instance.config.tags[item]) {
						instance.tags[item][walkname](params);
					}
				});
			},

			getCommentsList: function () {
				var instance = BaseTemplate;
				return instance.comments_list;//.concat(instance.header_comments_list);
			},

			setCommentsList: function (list) {
				var instance = BaseTemplate;
				instance.comments_list = list;
			},

			//ATTR
			comments_list: [],
			headerComments: [],
			header_comments_list: [],
			config: {}
		};

		var  SmartComments = {

	        initialize: function(config) {
	            var instance = SmartComments;

	            //initializing our own walker 
	            instance.SmartCommentsWalker = eswalker.createWalker();

	            //esprima obj
	            instance.esprima = esprima;
				
	            instance.config = config;
    
				instance.template = BaseTemplate;
				//TODO: Might be dynamically
				instance.template.walkFunctions = custom_template.walkFunctions;
				instance.template.tags = custom_template.tags(instance.template);

	            if (instance.template) {
	                instance.template.initialize(config);

	                //build users defined functions to walker
	                instance.buildWalkFunctions();
	                return true;
	            }
	            return false;
	        },

	        //esto es para que walker sepa que funciones son las que tiene que ejecuctar
	        buildWalkFunctions: function() {
	            var instance = this,
	                template = instance.template,
	                SmartCommentsWalker = instance.SmartCommentsWalker,
	                default_function,
	                walkFunctions = template.walkFunctions();

	            walkFunctions.forEach(function(item, index){
	                default_function = function(node, parent, fieldName, siblings, index) {
	                        var instance = template,
	                            params = {
	                                node: node,
	                                parent: parent,
	                                fieldName: fieldName,
	                                siblings: siblings,
	                                index: index
	                            };
	                        instance.executeWalk(item.name, params);
	                };

	                if(item.func){
	                    //user custom function
						default_function = item.func;
	                }
	                SmartCommentsWalker[item.name] = default_function;
	            });
	       
	        },

			parse: function (source){
				var instance = SmartComments;
				return instance.esprima.parse(source, {
					tokens: true,
					range: true,
					tolerant: true,
					comment: true
				});
			},

	        generate: function(source, config) {
	            var instance = SmartComments,
	                ast,
                    result = {};
                
	            try {
	                ast = instance.esprima.parse(source, {
	                    tokens: true,
	                    range: true,
	                    tolerant: true,
	                    comment: true
	                });
	            } catch (e) {
	                result.error = { 
	                    message: 'Sorry, we have some problems to parse your code',
	                    details: e
	                };
	            }
	            if (ast) {

					var process = function () {
						instance.comments_list = [];

						instance.template.setCommentsList(instance.comments_list);
						
						instance.SmartCommentsWalker.walk(ast);
						//console.log("AST", ast);
						instance.comments_list = instance.template.getCommentsList();
					
						/* check for lends tags and find it's corresponding class
							if the class can not be found, remove the lends tag again.
						*/
						instance.comments_list.slice().reverse().forEach(function (comment, index, object) {
							
							if (comment.tags.lends &amp;&amp; comment.tags.lends.length) {
								var seg = comment.tags.lends[0].split('.');
								var className = (seg[seg.length - 1] == 'prototype') ? seg[seg.length - 2] : seg[seg.length - 1];
								var found = instance.comments_list.find(function (classComment) {
									return (classComment.name == className);
								});
								if (!found) {
									instance.comments_list.splice(object.length - 1 - index, 1);
								}
							}
						});

						// add default tags to the parent object
						instance.comments_list.forEach(function (comment, index) {
							var parentObj = instance.comments_list.find(function (parent) {
								//console.log("comment.pos", comment.pos, "  parent.pos", parent.pos, " comment.end", comment.end, " parent.end", parent.end)
								return (parent !== comment &amp;&amp; parent.pos &lt;= comment.pos &amp;&amp; parent.end &gt;= comment.end);
							});
							
							if (!parentObj) {
								/*
									there is no parent, so this must be on top level
								*/
								//@author
								comment.tags.author = [author];

								//@date
								//comment.tags.date = [new Date()];

								//@memberof
								comment.tags.memberof = [applicationScope.concat('.module:').concat(objectType)]; // global.module:sys_ui_script
							
							}
							
						});
						
						instance.mergeWithExistingComments(instance, ast, source, config.favor_generated);	

					};
	                
					process();
					
					// set the new comments (merged wiht the existing ones)
					source = instance.applyComments(instance.comments_list, source);

					
					if (source.indexOf('@lends') !== -1 || source.indexOf('@class') !== -1) {
						
						//
						//	do the same thing again if there is a @lends or @class tag in place
						//	this tag might need to go if the script is not extending a class anymore.
						//
						ast = instance.parse(source);

						process();

						// bottom up remove all 'lends/class' comments
						ast.comments.reverse().forEach(function (comment) {
							if (comment.matched === undefined &amp;&amp; (comment.value.indexOf('@lends') !== -1 || comment.value.indexOf('@class') !== -1)) {
								//console.log("remove comment", comment)
								source = source.slice(0, comment.range[0]) + source.slice(comment.range[1]);
							}
						});	
					}
					
					return source;
	            } else {
	                return result;
	            }
	        },


	        /**
	         * Find any comments for functions in the source and merge them with the smartcomments-
	         * generated ones.
	         * @method mergeWithExistingComments
	         * @param instance {object} the SmartComments instance
	         * @param {object} ast - the esprima-generated AST
	         * @param {string} source - the text from the source file
	         * @param {boolean} favorGenerated - if true, favor generated comment tags over those from the source file wherever there is no clear choice (e.g., @return, @returns)
	         */
			mergeWithExistingComments: function (instance, ast, source, favorGenerated) {

				instance.comments_list.forEach(function (generatedComment, i) {
					var srcComment = instance.findMatchingComment(generatedComment, ast, source);
					if (srcComment) {
						generatedComment.srcComment = srcComment;
						instance.mergeSrcAndGeneratedComment(instance, generatedComment, favorGenerated);
					}
				});
	        },


	        /**
	         * Find a comment in the source that is for the same function as the given generatedComment.
	         * @method findMatchingComment
	         * @param {object} generatedComment - the smartcomments comment to match in the source.
	         * @param {object} ast - the esprima-generated AST
	         * @param {string} source - the text from the source file
	         * @return found {boolean}
	         */
	        findMatchingComment: function(generatedComment, ast, source) {
				var found;
                ast.comments.some(function (comment) {
					if (comment.type === 'Block') {
						if (comment.range[1] &lt;= generatedComment.pos
							&amp;&amp; comment.value.match(/^\*\s*/)
							//&amp;&amp; comment.value.match(/\*\s?\n\s{1,}\*/)
							&amp;&amp; source.slice(comment.range[1], generatedComment.pos).match(/^\s*$/)) { //source.slice(comment.range[1], generatedComment.pos).match(/^\s*$/)  source.slice(comment.range[2], generatedComment.pos).match(/^\/\*\*/m)
							
							comment.matched = true;
							found = comment;
							return found;
						}
					}
                });
	            return found;
	        },

	        /**
	         * Merge a YUIDoc comment in the source file with the smartcomments- generated one.  Favor
	         * entries from the source.  Save the merged comment lines in generatedComment.tags.
	         *
	         * @method mergeSrcAndGeneratedComment
	         * @param {object} instance - the SmartComments instance
	         * @param {object} generatedComment - the smartcomments comment object, with the source comment added as an attribute named generatedComment.srcComment.
	         * @param {boolean} favorGenerated - if true, favor generated comment tags over those from the source file wherever there is no clear choice (e.g., @return, @returns)
			 * @returns {any}
	         */
	        mergeSrcAndGeneratedComment: function(instance, generatedComment, favorGenerated) {
	            var srcComment = generatedComment.srcComment,
	                mergedCommentLines = {};

				var tagConfig = {
					author: { num: null },
					date: { num: 1 },
					class: { num: 1 },
					lends: { num: 1 },
					memberof: { num: 1 },
					extends: { num: 1 },
					method: { num: 1 },
					returns: { num: 1 },
					requires: { num: null },
					param: { num: null }
				};
				var config,
					matchingSrcTags	;

	            // process each src comment line, and remove matching comments from generatedComment
				var srcCommentTags = srcComment.value.replace(/^\*\s*\n\s*|\n\s*$/g, '').split(/\r?\n/).reduce(function (tags, commentLine) {
					var parsedTag = instance.parseTagNameValue(commentLine);
					if (tags[parsedTag.name]) {
						tags[parsedTag.name].push(parsedTag.value);
					} else {
						tags[parsedTag.name] = [parsedTag.value];
					}
					return tags;
				}, {});
				
				Object.keys(generatedComment.tags).forEach(function (tagName) {
					
					var tagValues = generatedComment.tags[tagName];
					// no values, no need to merge, return
					/*
					if (tagValues.length === 0)
						return;
					*/
					// init merge comment field
					mergedCommentLines[tagName] = mergedCommentLines[tagName] || [];
					
					/*
						tags where the generated comments always winns
					*/
					if (tagName === 'requires' ||  // tagName === '@class' || tagName === '@extends' ||
						tagName === 'date' || tagName === 'lends' || tagName === 'memberof' || tagName === 'extends' ||
						tagName === 'method' || (favorGenerated &amp;&amp; tagName === 'return')) {

						config = tagConfig[tagName] || {};
						if (config.num) {
							tagValues.forEach(function (value, index) {
								if (index &lt; config.num) {
									mergedCommentLines[tagName].push(value);
								}
							});
						} else {
							mergedCommentLines[tagName] = tagValues;
						}
						
					} else if (tagName === 'param') {
						/*
							merge the parameter tags with the one from the source code
						*/
						tagValues.forEach(function (_tag, _tagindex) {
							var tag = ''.concat(_tag);
							(srcCommentTags[tagName] || []).forEach(function (srcTag, scrIndex) {
								if (instance.isSameParam(srcTag, tag)) {
									// same tag name
									tag = srcTag;
								} else if (scrIndex == _tagindex) {
									// same position (in case of tag rename)
									tag = srcTag.replace(instance.stripParam(srcTag), instance.stripParam(tag));
								}
							});
							mergedCommentLines[tagName].push(tag);
						});

					} else if (tagName === 'returns') {

						if (tagValues.length) { // its ok to have a return value
							matchingSrcTags = srcCommentTags[tagName];
							if (matchingSrcTags &amp;&amp; matchingSrcTags.length &amp;&amp; matchingSrcTags[0].length) {

								var srcTagObj = instance.parseTag(matchingSrcTags[0]);
								var genTagObj = instance.parseTag(tagValues[0]);
								if (srcTagObj &amp;&amp; genTagObj) {
									
									if (genTagObj.type.toLowerCase() == '{undefined}' &amp;&amp; srcTagObj.type.toLowerCase() != '{undefined}') {
										matchingSrcTags = [genTagObj.type.concat(srcTagObj.text)];
										
									}
									if (genTagObj.type.toLowerCase() != '{undefined}' &amp;&amp; srcTagObj.type.toLowerCase() == '{undefined}') {
										matchingSrcTags = [genTagObj.type.concat(srcTagObj.text)];
										
									}
								}
								mergedCommentLines[tagName] = [matchingSrcTags[0]];

							} else {
								mergedCommentLines[tagName] = tagValues;
							}
						} else {
							mergedCommentLines[tagName] = [];
						}

					} else {
						/*
							all the remaining tags, check if there is already a value in the source comment
						*/
						matchingSrcTags = srcCommentTags[tagName];
						if (matchingSrcTags &amp;&amp; matchingSrcTags.length &gt; 0) {
							
							config = tagConfig[tagName] || {};
							if (config.num) {
								matchingSrcTags.forEach(function (value, index) {
									if (index &lt; config.num) {
										mergedCommentLines[tagName].push(value);
									}
								});
							} else {
								mergedCommentLines[tagName] = matchingSrcTags;
							}
							/*
								cosmetic, add a new line after comment
							*/
							if (tagName === '' &amp;&amp; mergedCommentLines[tagName].length == 1) {
								mergedCommentLines[tagName].push('');
							}
							

						} else if(tagValues.length) {
							/*
								there is no version in the soucre code if this tag, copy 
							*/
							config = tagConfig[tagName] || {};
							if (config.num) {
								tagValues.forEach(function (value, index) {
									if (index &lt; config.num) {
										mergedCommentLines[tagName].push(value);
									}
								});
							} else {
								mergedCommentLines[tagName] = tagValues;
							}
						}

					}					
	            });

				/*
				console.log('srcCommentTags', JSON.parse(JSON.stringify(srcCommentTags)))
				console.log('mergedCommentLines', JSON.parse(JSON.stringify(mergedCommentLines)))
				console.log('generatedComment.tags', JSON.parse(JSON.stringify(generatedComment.tags)))
				*/

				/*
					Add the comments from the code which are not know / supported  (actually all the rest)
					to the position the tag has in the source code.
				*/
				Object.keys(srcCommentTags).forEach(function (tagName, index) {
					if (mergedCommentLines[tagName] === undefined) {
						var tempComment = {};
						Object.keys(mergedCommentLines).forEach(function (mTagName, i) {
							if (index === i) {
								tempComment[tagName] = srcCommentTags[tagName];
							}
							tempComment[mTagName] = mergedCommentLines[mTagName];
						});
						mergedCommentLines = tempComment;
					}
				});
	            generatedComment.tags = mergedCommentLines;
	        },

			parseTag: function (string) {
				var out = null;
				var res = string.match(/^[^\{]*({.*})(.*)$/);
				if (res &amp;&amp; res.length) {
					out = {
						type: res[1],
						text: res[2]
					};
				}
				return out;
			},
			

	        /**
	         * Parse a src comment line into a tagname and value.  tagname will be '' if there is no tag.
	         * @method parseTagNameValue
	         * @param {string} commentLine - the src comment line to parse into tagname and value
	         * @return {object} e.g., { name: '@param', value: '{string} commentLine - the src ...'}
	         */
            parseTagNameValue: function (commentLine) {
                
	            var clean = commentLine.replace(/^\s*\*?\s*/, ''),    // strip leading ' * '
	                nameValueMatch = /^(?:(@\w+)\s+)?([^\r\n]*)/.exec(clean+'  ');
                
	            return {
					name: (nameValueMatch[1] || '').trim().replace(/^@/, ''),
	                value: (nameValueMatch[2] || '').trim(),
	            };
	        },


	        /**
	         * For a @param comment line, check if the given srcParamCommentLine is for the same
	         * parameter as the passed-in tag from the smartcomments-generated comment.
	         *
	         * @method isSameParam
	         * @param srcValue {string} a @param comment line from the source file.
	         * @param genValue {string} a @param value from a smartcomments-generated comment.
	         * @return {boolean} true if the two describe the same parameter.  otherwise, false.
	         */
	        isSameParam: function(srcValue, genValue) {
				var stripTypeRe = /\{[^\}]*\}/,
                    matchValRe = /^\s*\[?(\w+)\]?/;
                
                var src = srcValue;
                var gen = genValue;
	            srcValue = srcValue.replace(stripTypeRe, '');
                genValue = genValue.replace(stripTypeRe, '');
                try {
                    return (matchValRe.exec(srcValue)[1] === matchValRe.exec(genValue)[1]);
				} catch (e) {
					//console.log(srcValue, matchValRe)
					//console.log(genValue, matchValRe)
					console.error(e);
                    return false;
                }
	        },

			stripParam: function (paramValue) {
				var stripTypeRe = /\{[^\}]*\}/,
					matchValRe = /^\s*\[?(\w+)\]?/;

				paramValue = paramValue.replace(stripTypeRe, '');
				var match = matchValRe.exec(paramValue);
				return (match.length === 2) ? match[1] : null;
			},


	        /**
	         * For a given genTag tagname, find all src comment tags with the same tag name.
	         * E.g., if genTag.name === '@param', this method returns all src comment tags that are @param tags.
	         *
	         * @method findMatchingSrcTags
	         * @param {object} genTag - the generated comment tag with the tagname to match
	         * @param {array} srcCommentTags - the src comment tags from a src comment block.
	         * @return {array} matching - list of matching src tags
	         */
	        findMatchingSrcTags: function(genTag, srcCommentTags) {
				var matching = srcCommentTags.reduce(function(memo, srcTag) {
					if (srcTag.name === genTag &amp;&amp; (srcTag.name || srcTag.value || srcTag.name == '') ) {
	                    memo.push(srcTag);
					} else if (genTag === '@return' &amp;&amp; srcTag.name === '@returns') {
	                    // if using JSDoc, the source might be using @returns
	                    memo.push(srcTag);
	                }
	                return memo;
	            }, [ ]);
	            
	            return matching;
	        },

	        /**
	         * Merge in src comment tags that don't have counterparts in the SmartComments templates - e.g., @class,
	         * @static, etc.
	         * @deprecated
	         * @method mergeOtherSrcTags
	         * @param {array} srcCommentTags - src comment tags from a comment block in the source file.
	         * @param {array} mergedCommentLines - list of output comment lines to add to (tags)
	         */
	        mergeOtherSrcTags: function(srcCommentTags, mergedCommentLines) {
	            var i;
				for (i = 0; i &lt; Object.keys(mergedCommentLines).length &amp;&amp; Object.keys(mergedCommentLines)[i] !== 'method'; i += 1) ;

				srcCommentTags.forEach(function(srcTag) {
                    
					var found = Object.keys(mergedCommentLines).some(function (mTagName) {
						if (mTagName == srcTag.name &amp;&amp; mergedCommentLines[mTagName].indexOf(srcTag.value) !== -1) {
							return true;
						}
					});
					
	            	if(!found){
                        //mergedCommentLines.splice(i++, 0, srcTag);
                        switch (srcTag.name) {
                            case '':
                                break;
                            case 'module':
                                break;
                            case 'method':
								break;
							case 'change_history':
								break;
							case 'class':
								break;
							case 'extends':
								break;
							case 'lends':
								break;
                            case 'param':
                                
                            case 'return':
                                
                            case 'returns':
                            
                            case 'author':
                                
                            case 'date':
                                
							case 'NR':
							
							case 'requires':
								
							default:
								mergedCommentLines[srcTag.name] = mergedCommentLines[srcTag.name] || [];
								if (mergedCommentLines[srcTag.name].indexOf(srcTag.value) === -1) {
									mergedCommentLines[srcTag.name].push(srcTag.value);	
								}
                        }
                    }    
                });
	        },

	        applyComments: function(comments_list, source) {
	            var instance = SmartComments,
	                size = comments_list.length,
	                i = size - 1,
	                comment;

                for (i; i &gt;= 0; i--) {
	                comment_value = instance.createComment(comments_list[i], source);
	                var startPos = comments_list[i].pos,
	                    endPos = null;
	                if (comments_list[i].srcComment) {
						startPos = comments_list[i].srcComment.range[0];
						endPos = comments_list[i].pos;
	                }
	                source = instance.insertString(comment_value, startPos, endPos, source);
	            }
	            return source;
	        },

			createComment: function (comment, source) {

				var value = '/**\n',
					tag_names = Object.keys(comment.tags),
	                size = tag_names.length,
	                i = 0,
	                iterator = comment.pos - 1,
	                buffer = '',
	                currentChar,
                    especialChars = "!@#$%^&amp;*()+=-[]\\';,./{}|\":&lt;&gt;?\n",
					oneLiner = (Object.keys(comment.tags).reduce(function (cnt, tagName) {
						return (cnt + comment.tags[tagName].length);
					}, 0) === 1);
				
                if (!oneLiner) {
                    if (comment.pos === 0)
                        iterator = 0;
                    while (iterator &gt; 0) {
						currentChar = source[iterator];
                        if (especialChars.indexOf(currentChar) != -1) {
                            if (currentChar !== '\n') {
                                value = '\n' + value;
                            }
                            break;
                        }
                        buffer += currentChar;
                        iterator--;
                    }

					Object.keys(comment.tags).forEach(function (tagName) {
						var tagValues = comment.tags[tagName];
						if (tagValues.length) {
							tagName = tagName ? '@'.concat(tagName) : tagName;
							tagValues.forEach(function (tagValue) {
								value += buffer + ' * ' + ((tagName !== '') ? tagName + ' ' : '') + tagValue + '\n';
							});
						}
					});
					
                    value += buffer + ' */\n' + buffer; 
                	
				} else {
					Object.keys(comment.tags).forEach(function (tagName) {
						var tagValues = comment.tags[tagName];
						if (tagValues.length) {
							tagName = tagName ? '@'.concat(tagName) : tagName;
							value = "/** " + tagName + ' ' + tagValues[0] + " */ ";
						}
					});
                }
                return value;
	        },

			insertString: function (stringToInsert, startPos, endPos, source) {
				//console.log('insertString', stringToInsert, startPos, endPos)
	            var prefix = source.slice(0, startPos),
	                suffix = source.slice(endPos || startPos);

	            return prefix + stringToInsert + suffix;
	        },

	        //ATTRS
	        comments_list: [],
	        //esprima object
	        esprima: {},

	        //WalkerInterface
	        SmartCommentsWalker: {},

	        config: {}

	    };

		return {
			initialize: SmartComments.initialize,
			generate: SmartComments.generate
		};
	}());

	var default_config = {
		'private': false,
		favor_generated: true,
		tags: {
			'function': {
				name: {},
				desc: {
					value: "Description"
				},
				params: {},
				rtrn: {}
			},
			'class': {
				name: {},
				desc: {
					value: "Class Description"
				},
				params: {},
				rtrn: false,
				clazz: {},
				auth: {},
				date: {},
				nr: {},
				extendsClass: {}
			},
			'requires': {
				
			}
		},
		scope: 'global'
	};

	// initialize 
	smartcomments.initialize(default_config);

	return {
		comment: function (script) {
			var out = script;
			if (script &amp;&amp; (script.indexOf('function') !== -1 || script.indexOf('Class') !== -1)) {
				result = smartcomments.generate(script, default_config);

				if (typeof result == 'string') {
					out = result;
				} else {
					console.error(result);
				}
			}
			return out;
		}
	};
}]]&gt;&lt;/script&gt;&lt;script_name/&gt;&lt;sys_class_name&gt;sys_ui_script&lt;/sys_class_name&gt;&lt;sys_created_by&gt;b.moers&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2016-04-28 12:21:59&lt;/sys_created_on&gt;&lt;sys_id&gt;696cfd3937035a0044d3f25b34990e30&lt;/sys_id&gt;&lt;sys_mod_count&gt;13&lt;/sys_mod_count&gt;&lt;sys_name&gt;SnSmartComments&lt;/sys_name&gt;&lt;sys_package display_value="Global" source="global"&gt;global&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="CICD Integration"&gt;19190fabdbebd300dfa9b94ffe96193e&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_ui_script_696cfd3937035a0044d3f25b34990e30&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;b.moers&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2018-11-14 14:49:32&lt;/sys_updated_on&gt;&lt;ui_type&gt;0&lt;/ui_type&gt;&lt;use_scoped_format&gt;false&lt;/use_scoped_format&gt;&lt;/sys_ui_script&gt;&lt;/record_update&gt;</payload>
<payload_hash>1902923211</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:51</sys_created_on>
<sys_id>805357b32f15b850d8455aab2799b6b3</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c98be0000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:51</sys_updated_on>
<table/>
<target_name>SnSmartComments</target_name>
<type>UI Script</type>
<update_domain>global</update_domain>
<update_guid>b78200e80a777300f6396ccb7d612467</update_guid>
<update_guid_history>c37abbd0f477730026683f36b51045df:1902923211,c37abbd0f477730026683f36b51045df:1902923211,c37abbd0f477730026683f36b51045df:1902923211,f7c43bc583bda340ba638f82587a7db9:1683369596,f7c43bc583bda340ba638f82587a7db9:1683369596,73c11c218f85ab80b8928ba93f705963:-228031951,a95f5c7dd0b82f40fd3b50ecbcbf2f14:853286943,d1c183863f8d9f00c8ef9aa2d4d72b72:-1255699136,652932619b3c93803645f8d25bf2927d:-26369788,0825be2df2f89380946f76f1359b6b23:-612487699,abd3b62d4bf8938065f83f429eb517a8:510130079,9e0535ed46f49380b6dd72087476f68b:1249517434,1d0533645db8df40740e74fda7d94baa:-1673098502,f4a42557698bcf409f7be8939a61d2f2:-780014318,5cdf849a4dfc178045ce46e5d1d09e79:-780014318</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_properties_2d24af09db432f00ee93b14ffe961983</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_properties"><sys_properties action="INSERT_OR_UPDATE"><choices/><description>&lt;b&gt;CICD CD : User creation switch.&lt;/b&gt;&lt;br&gt;&#13;
&lt;span color="red" style="color: red;"&gt;Enable to let the CICD process automatically create a user called _CICD_DEPLOYMENT_#{40} per source environment to allow to pull changes from it.&lt;/span&gt;&lt;br/&gt;&#13;
This user will have the 'teamdev_user' or 'admin' role and a long random password which is sent in a secure way to the target environment to configure an 'update set source' pointing to this instance.&lt;br/&gt;&#13;
If this is disabled, this instance of ServiceNow must have a CD user configured.</description><ignore_cache>false</ignore_cache><is_private>false</is_private><name>cicd-integration.auto-create-cd-user</name><read_roles/><suffix/><sys_class_name>sys_properties</sys_class_name><sys_created_by>b.moers</sys_created_by><sys_created_on>2019-01-15 16:55:15</sys_created_on><sys_id>2d24af09db432f00ee93b14ffe961983</sys_id><sys_mod_count>16</sys_mod_count><sys_name>cicd-integration.auto-create-cd-user</sys_name><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_update_name>sys_properties_2d24af09db432f00ee93b14ffe961983</sys_update_name><sys_updated_by>admin</sys_updated_by><sys_updated_on>2019-10-24 06:59:10</sys_updated_on><type>boolean</type><value>false</value><write_roles/></sys_properties><sys_translated_text action="delete_multiple" query="documentkey=2d24af09db432f00ee93b14ffe961983"/></record_update>]]></payload>
<payload_hash>-2121724794</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:51</sys_created_on>
<sys_id>80539f732f15b850d8455aab2799b61c</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c9e930000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:51</sys_updated_on>
<table/>
<target_name>cicd-integration.auto-create-cd-user</target_name>
<type>System Property</type>
<update_domain>global</update_domain>
<update_guid>ff0c697f2ba0801031e513db42408ffa</update_guid>
<update_guid_history>ff0c697f2ba0801031e513db42408ffa:-2121724794,c401af82450c4050b449066e30389b26:-1509326423,aef6dbee41b3f7c0ed8c7a19c69ace20:269058702,5c4be5643a804c108acd60d660fcdbaa:-1509326423,aef6dbee41b3f7c0ed8c7a19c69ace20:269058702,1789a575f6313300f3337d89f8ff0d46:-1509326423,aa179c12d39b6f40030f1ac919bd61bd:269058702,92c51cde975b6f403a4aafac847630bd:-139086257,b9935c5e325b6f40e5e5bdacf6f19df2:601321001,187be301c7832f00133c883278e0a385:1767118829,1b4bebcd5f432f00ce4ccb831a5d03ce:-763931906,cf3b6fcd47432f004d4fa6df173a133e:-1660441063,d31be3cd18432f00d13617bff3592b1d:-15150727,9c0bef4d22432f00c6cf82c01cf76d7f:1316242936,c9dae78def432f001511008cd47ff5cd:1780611711,3baa6f8d4f432f00715ad4d82c1f961b:-366747760,294a278db5432f006c3e34eef467d140:-1963546902,5bf9a38d77432f000c3a14a62ac4d284:1695604266,39c9674d1d432f004543a728638fb12e:295622318,01652f0948432f00203b033893232d21:2089230028,da24af09c9432f002df29f142cec5688:1277743995</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_properties_category_m2m_23fc0a26dbe1a700323efc600f961955</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_properties_category_m2m"><sys_properties_category_m2m action="INSERT_OR_UPDATE"><category display_value="CICD Integration">8d1de113dbb86380432cfc600f9619f6</category><order>0</order><property display_value="cicd-integration.enabled" name="cicd-integration.enabled">d9ecc622dbe1a700323efc600f961901</property><sys_class_name>sys_properties_category_m2m</sys_class_name><sys_created_by>b.moers</sys_created_by><sys_created_on>2018-11-06 12:51:09</sys_created_on><sys_id>23fc0a26dbe1a700323efc600f961955</sys_id><sys_mod_count>3</sys_mod_count><sys_name>cicd-integration.enabled.CICD Integration</sys_name><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_update_name>sys_properties_category_m2m_23fc0a26dbe1a700323efc600f961955</sys_update_name><sys_updated_by>b.moers</sys_updated_by><sys_updated_on>2018-11-06 12:54:00</sys_updated_on></sys_properties_category_m2m></record_update>]]></payload>
<payload_hash>-644988712</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:51</sys_created_on>
<sys_id>80539f732f15b850d8455aab2799b61f</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c967a0000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:51</sys_updated_on>
<table/>
<target_name>cicd-integration.enabled.CICD Integration</target_name>
<type>Category Property</type>
<update_domain>global</update_domain>
<update_guid>6b82cca8c0777300bc255830b1b55dcf</update_guid>
<update_guid_history>1a7abbd05f777300bf5ace9f71a8c01d:-644988712,1a7abbd05f777300bf5ace9f71a8c01d:-644988712,1a7abbd05f777300bf5ace9f71a8c01d:-644988712,ddad8626d1e1a7004cad64a4ba91cde7:1618055312,7a8d06668fe1a7006bea0c3dd091d24a:-163754063,488d8e26cde1a700104d20f3836b7461:1015516534,67fc0a26bde1a70035b3811a16708357:-800949777</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_properties_category_m2m_d5196ed72f6c7810d8455aab2799b65c</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_properties_category_m2m"><sys_properties_category_m2m action="INSERT_OR_UPDATE"><category display_value="CICD Integration">8d1de113dbb86380432cfc600f9619f6</category><order>80</order><property display_value="cicd-integration.skip-enabled" name="cicd-integration.skip-enabled">b809e21b2f6c7810d8455aab2799b682</property><sys_class_name>sys_properties_category_m2m</sys_class_name><sys_created_by>admin</sys_created_by><sys_created_on>2021-06-10 10:42:18</sys_created_on><sys_id>d5196ed72f6c7810d8455aab2799b65c</sys_id><sys_mod_count>2</sys_mod_count><sys_name>cicd-integration.skip-enabled.CICD Integration</sys_name><sys_package display_value="[ws] Xplore: Developer Toolkit" source="0f6ab99a0f36060094f3c09ce1050ee8">0f6ab99a0f36060094f3c09ce1050ee8</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_update_name>sys_properties_category_m2m_d5196ed72f6c7810d8455aab2799b65c</sys_update_name><sys_updated_by>admin</sys_updated_by><sys_updated_on>2021-06-10 10:53:02</sys_updated_on></sys_properties_category_m2m></record_update>]]></payload>
<payload_hash>56899047</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:51</sys_created_on>
<sys_id>845357b32f15b850d8455aab2799b6a9</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2ca36c0000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:51</sys_updated_on>
<table/>
<target_name>cicd-integration.skip-enabled.CICD Integration</target_name>
<type>Category Property</type>
<update_domain>global</update_domain>
<update_guid>668be29fd16c7810bad0a488d3cb175d</update_guid>
<update_guid_history>668be29fd16c7810bad0a488d3cb175d:56899047,5929e21b606c781048da7b56def134ec:1838884179,dd19ae1b426c78107a2bd16140dc7c78:265045628</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_script_d191746ddba3ff409775f6700f96199a</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update sys_domain="global" table="sys_script"&gt;&lt;sys_script action="INSERT_OR_UPDATE"&gt;&lt;abort_action&gt;false&lt;/abort_action&gt;&lt;access&gt;package_private&lt;/access&gt;&lt;action_delete&gt;false&lt;/action_delete&gt;&lt;action_insert&gt;false&lt;/action_insert&gt;&lt;action_query&gt;false&lt;/action_query&gt;&lt;action_update&gt;false&lt;/action_update&gt;&lt;active&gt;true&lt;/active&gt;&lt;add_message&gt;false&lt;/add_message&gt;&lt;advanced&gt;true&lt;/advanced&gt;&lt;change_fields&gt;false&lt;/change_fields&gt;&lt;client_callable&gt;false&lt;/client_callable&gt;&lt;collection&gt;sys_update_set&lt;/collection&gt;&lt;condition/&gt;&lt;description/&gt;&lt;execute_function&gt;false&lt;/execute_function&gt;&lt;filter_condition/&gt;&lt;is_rest&gt;false&lt;/is_rest&gt;&lt;message/&gt;&lt;name&gt;[CICD] Show link to CICD results&lt;/name&gt;&lt;order&gt;10&lt;/order&gt;&lt;priority&gt;100&lt;/priority&gt;&lt;rest_method/&gt;&lt;rest_method_text/&gt;&lt;rest_service/&gt;&lt;rest_service_text/&gt;&lt;rest_variables/&gt;&lt;role_conditions/&gt;&lt;script&gt;&lt;![CDATA[(function executeRule(current, previous /*null when async*/) {
	new global.CiCdRun().sys_update_set_Display(current);
})(current, previous);]]&gt;&lt;/script&gt;&lt;sys_class_name&gt;sys_script&lt;/sys_class_name&gt;&lt;sys_created_by&gt;b.moers&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2019-08-28 09:57:42&lt;/sys_created_on&gt;&lt;sys_domain&gt;global&lt;/sys_domain&gt;&lt;sys_domain_path&gt;/&lt;/sys_domain_path&gt;&lt;sys_id&gt;d191746ddba3ff409775f6700f96199a&lt;/sys_id&gt;&lt;sys_mod_count&gt;5&lt;/sys_mod_count&gt;&lt;sys_name&gt;[CICD] Show link to CICD results&lt;/sys_name&gt;&lt;sys_overrides/&gt;&lt;sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e"&gt;19190fabdbebd300dfa9b94ffe96193e&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="CICD Integration"&gt;19190fabdbebd300dfa9b94ffe96193e&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_script_d191746ddba3ff409775f6700f96199a&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;b.moers&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2019-08-30 14:35:11&lt;/sys_updated_on&gt;&lt;template/&gt;&lt;when&gt;before_display&lt;/when&gt;&lt;/sys_script&gt;&lt;sys_translated_text action="delete_multiple" query="documentkey=d191746ddba3ff409775f6700f96199a"/&gt;&lt;/record_update&gt;</payload>
<payload_hash>1970076126</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:51</sys_created_on>
<sys_id>845357b32f15b850d8455aab2799b6ac</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c9dcd0000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:51</sys_updated_on>
<table>sys_update_set</table>
<target_name>[CICD] Show link to CICD results</target_name>
<type>Business Rule</type>
<update_domain>global</update_domain>
<update_guid>c7f48c9ee4a33380f81063a3779f3b7a</update_guid>
<update_guid_history>c7f48c9ee4a33380f81063a3779f3b7a:1963859794,c7f48c9ee4a33380f81063a3779f3b7a:1963859794,767abbd0b5777300cbcc4454daefdccd:1970076126,c7f48c9ee4a33380f81063a3779f3b7a:1963859794,1517702533e3ff405db6972c844b207a:-903951942,0ab6fc614de3ff40c0746acd8613b19f:340691353,a956f4a1bde3ff4071653039b08f48de:1863960695,3616fca145e3ff4066f42f7bb052bdd6:-2031115976,1b423c2dfba3ff40690503bcbed495ae:-1808263336</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_security_acl_role_bad193e3db2fd300dfa9b94ffe961909</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_security_acl_role"><sys_security_acl_role action="INSERT_OR_UPDATE"><sys_class_name>sys_security_acl_role</sys_class_name><sys_created_by>b.moers</sys_created_by><sys_created_on>2018-08-02 10:21:02</sys_created_on><sys_id>bad193e3db2fd300dfa9b94ffe961909</sys_id><sys_mod_count>0</sys_mod_count><sys_name>/api/devops/cicd/atf.atf_test_designer</sys_name><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_security_acl display_value="/api/devops/cicd/atf">9041d7a3db2fd300dfa9b94ffe961910</sys_security_acl><sys_update_name>sys_security_acl_role_bad193e3db2fd300dfa9b94ffe961909</sys_update_name><sys_updated_by>b.moers</sys_updated_by><sys_updated_on>2018-08-02 10:21:02</sys_updated_on><sys_user_role display_value="atf_test_designer" name="atf_test_designer">62ec7c6053131200040729cac2dc34d5</sys_user_role><transaction_id/></sys_security_acl_role></record_update>]]></payload>
<payload_hash>303245714</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:51</sys_created_on>
<sys_id>845357b32f15b850d8455aab2799b6af</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c91680000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:51</sys_updated_on>
<table>/api/devops/cicd/atf</table>
<target_name>/api/devops/cicd/atf.atf_test_designer</target_name>
<type>Access Roles</type>
<update_domain>global</update_domain>
<update_guid>b78200e851777300db4d126f4ff4ec43</update_guid>
<update_guid_history>837abbd029777300bb0896741ac34dd8:303245714,837abbd029777300bb0896741ac34dd8:303245714,837abbd029777300bb0896741ac34dd8:303245714,2c025fa3d72fd3004b8efe46ca07c62e:793082969</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_ui_form_sections_3754604ddbc02850fcf417803996198a</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update><sys_ui_form_sections form_id="3754604ddbc02850fcf417803996198a" sys_domain="global" table="sys_app" version="3"><sys_ui_form_section action="INSERT_OR_UPDATE"><position>0</position><sys_created_by>admin</sys_created_by><sys_created_on>2020-10-22 08:33:37</sys_created_on><sys_domain>global</sys_domain><sys_domain_path>/</sys_domain_path><sys_id>4064604ddbc02850fcf417803996198d</sys_id><sys_mod_count>0</sys_mod_count><sys_overrides/><sys_ui_form display_value="sys_app" name="sys_app" sys_domain="global" view="fb54604ddbc02850fcf4178039961920">3754604ddbc02850fcf417803996198a</sys_ui_form><sys_ui_section caption="NULL" display_value="" name="sys_app" sys_domain="global" view="fb54604ddbc02850fcf4178039961920">7354604ddbc02850fcf4178039961988</sys_ui_section><sys_updated_by>admin</sys_updated_by><sys_updated_on>2020-10-22 08:33:37</sys_updated_on></sys_ui_form_section><sys_ui_form_section action="INSERT_OR_UPDATE"><position>1</position><sys_created_by>admin</sys_created_by><sys_created_on>2020-10-22 08:42:58</sys_created_on><sys_domain>global</sys_domain><sys_domain_path>/</sys_domain_path><sys_id>c986e4cddbc02850fcf4178039961958</sys_id><sys_mod_count>0</sys_mod_count><sys_overrides/><sys_ui_form display_value="sys_app" name="sys_app" sys_domain="global" view="fb54604ddbc02850fcf4178039961920">3754604ddbc02850fcf417803996198a</sys_ui_form><sys_ui_section caption="CI/CD Settings" display_value="CI/CD Settings" name="sys_app" sys_domain="global" view="fb54604ddbc02850fcf4178039961920">4586e4cddbc02850fcf4178039961957</sys_ui_section><sys_updated_by>admin</sys_updated_by><sys_updated_on>2020-10-22 08:42:58</sys_updated_on></sys_ui_form_section><sys_ui_form action="INSERT_OR_UPDATE"><name>sys_app</name><roles/><sys_class_name>sys_ui_form</sys_class_name><sys_created_by>admin</sys_created_by><sys_created_on>2020-10-22 08:33:36</sys_created_on><sys_domain>global</sys_domain><sys_domain_path>/</sys_domain_path><sys_id>3754604ddbc02850fcf417803996198a</sys_id><sys_mod_count>1</sys_mod_count><sys_name>sys_app</sys_name><sys_overrides/><sys_package display_value="Global" source="global">global</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_update_name>sys_ui_form_sections_3754604ddbc02850fcf417803996198a</sys_update_name><sys_updated_by>admin</sys_updated_by><sys_updated_on>2020-10-22 08:45:01</sys_updated_on><sys_user/><view display_value="CICD" name="CICD">fb54604ddbc02850fcf4178039961920</view><view_name/></sys_ui_form></sys_ui_form_sections></record_update>]]></payload>
<payload_hash>1188433784</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:51</sys_created_on>
<sys_id>845357b32f15b850d8455aab2799b6b2</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2ca0f60000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:51</sys_updated_on>
<table>sys_app</table>
<target_name>Custom Application</target_name>
<type>Form Sections</type>
<update_domain>global</update_domain>
<update_guid>8bf624cd8dc02850659e1ebc21f12cac</update_guid>
<update_guid_history>8bf624cd8dc02850659e1ebc21f12cac:518781329,8bf624cd8dc02850659e1ebc21f12cac:518781329,0986e4cd0fc02850e0476f45267d805a:-1595599246,a0c4e44d85c02850de7a4b78738e6670:-1626888595,4864604d7ec02850424a107753253a8f:1780722375,8c64604d7cc02850e3f2c034938e1d8b:-253997179</update_guid_history>
<update_set display_value=""/>
<view>fb54604ddbc02850fcf4178039961920</view>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_ws_definition_81eccb6fdbebd300dfa9b94ffe96190e</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ws_definition"><sys_ws_definition action="INSERT_OR_UPDATE"><active>true</active><base_uri>/api/devops/cicd</base_uri><consumes>application/json,application/xml,text/xml</consumes><consumes_customized>false</consumes_customized><default_version>v1</default_version><doc_link/><enforce_acl/><is_versioned>true</is_versioned><name>CICD Integration</name><namespace>devops</namespace><produces>application/json,application/xml,text/xml</produces><produces_customized>false</produces_customized><service_id>cicd</service_id><short_description/><sys_class_name>sys_ws_definition</sys_class_name><sys_created_by>b.moers</sys_created_by><sys_created_on>2018-08-02 09:59:28</sys_created_on><sys_id>81eccb6fdbebd300dfa9b94ffe96190e</sys_id><sys_mod_count>1</sys_mod_count><sys_name>CICD Integration</sys_name><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_update_name>sys_ws_definition_81eccb6fdbebd300dfa9b94ffe96190e</sys_update_name><sys_updated_by>b.moers</sys_updated_by><sys_updated_on>2018-08-02 10:00:07</sys_updated_on></sys_ws_definition></record_update>]]></payload>
<payload_hash>-1227198859</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:52</sys_created_on>
<sys_id>845357b32f15b850d8455aab2799b6b6</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c910b0000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:52</sys_updated_on>
<table/>
<target_name>CICD Integration</target_name>
<type>Scripted REST API</type>
<update_domain>global</update_domain>
<update_guid>738200e86377730045f8cd840220ab70</update_guid>
<update_guid_history>437abbd0e9777300d4b16c0d021f8ee1:-1227198859,437abbd0e9777300d4b16c0d021f8ee1:-1227198859,437abbd0e9777300d4b16c0d021f8ee1:-1227198859,8e3dc3afddebd300edeadbca53fbc06a:-744445395,e01d8b6f63ebd3003af28852404b92a3:-1535755311</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_processor_b88ab453db6d2b00323efc600f9619fe</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_processor"&gt;&lt;sys_processor action="INSERT_OR_UPDATE"&gt;&lt;active&gt;true&lt;/active&gt;&lt;class_name/&gt;&lt;description/&gt;&lt;interactive&gt;false&lt;/interactive&gt;&lt;name&gt;CiCdExportUpdateSet&lt;/name&gt;&lt;parameters/&gt;&lt;params_endpoint/&gt;&lt;path&gt;cicd_export_update_set&lt;/path&gt;&lt;path_endpoint/&gt;&lt;require_csrf&gt;false&lt;/require_csrf&gt;&lt;roles/&gt;&lt;script&gt;&lt;![CDATA[(function process(g_request, g_response, g_processor) {

    var CustomExporter = Class.create();
    CustomExporter.prototype = Object.extendsObject(ExportWithRelatedLists, {
        exportRecord: function (record) {
            record = new GlideScriptRecordUtil.get(record).getRealRecord();
            var recordSerializer = new GlideRecordXMLSerializer();
            //recordSerializer.setApplySecurity(true);
            recordSerializer.serialize(record, this.hd, new Packages.java.lang.String('INSERT_OR_UPDATE'));
            if (this.includeAttachments &amp;&amp; record.getTableName().substring(0, 14) != "sys_attachment") {
                this.exportAttachments(record);
            }
        }
    });

    var sysid = g_request.getParameter('sysparm_sys_id');
    var exporter = new CustomExporter('sys_remote_update_set', sysid);
    exporter.addRelatedList('sys_update_xml', 'remote_update_set');
    exporter.exportRecords(g_response);

    var del = g_request.getParameter('sysparm_delete_when_done');
    if (del == "true") {
        var ugr = new GlideRecord("sys_remote_update_set");
        ugr.addQuery("sys_id", sysid);
        ugr.query();
        if (ugr.next()) {
            ugr.deleteRecord();
        }
    }

})(g_request, g_response, g_processor);]]&gt;&lt;/script&gt;&lt;sys_class_name&gt;sys_processor&lt;/sys_class_name&gt;&lt;sys_created_by&gt;b.moers&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2018-11-08 14:54:55&lt;/sys_created_on&gt;&lt;sys_id&gt;b88ab453db6d2b00323efc600f9619fe&lt;/sys_id&gt;&lt;sys_mod_count&gt;7&lt;/sys_mod_count&gt;&lt;sys_name&gt;CiCdExportUpdateSet&lt;/sys_name&gt;&lt;sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e"&gt;19190fabdbebd300dfa9b94ffe96193e&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="CICD Integration"&gt;19190fabdbebd300dfa9b94ffe96193e&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_processor_b88ab453db6d2b00323efc600f9619fe&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;b.moers&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2018-11-08 15:22:23&lt;/sys_updated_on&gt;&lt;type&gt;script&lt;/type&gt;&lt;/sys_processor&gt;&lt;/record_update&gt;</payload>
<payload_hash>-1888524316</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:51</sys_created_on>
<sys_id>84539f732f15b850d8455aab2799b61b</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c97be0000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:51</sys_updated_on>
<table/>
<target_name>CiCdExportUpdateSet</target_name>
<type>Processor</type>
<update_domain>global</update_domain>
<update_guid>6f82cca8927773005690b7d85493b8be</update_guid>
<update_guid_history>4f7abbd08d7773004059e2d1f3d6ffd0:-1888524316,4f7abbd08d7773004059e2d1f3d6ffd0:-1888524316,4f7abbd08d7773004059e2d1f3d6ffd0:-1888524316,dac20dd73a6d2b0001065a24d5fa615b:50614892,4fbff0d3656d2b004f5df434a6a820f8:-1121781382,23af3c57b46d2b00c143e16ac3d51a3b:2025460762,229fb0db302d2b00265f27cca65092e1:-1121781382,0bfe34931e6d2b00256f382a343169dc:-1894518256,97ae7cd3336d2b00e35f2d3c14267b56:-29080115,b84d749b012d2b00a80561d3e93a0339:-504847475,508cb0db9a2d2b00edea2666d9d3e5de:-1065378171</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_properties_category_m2m_01634653dbf2d010fcf41780399619c2</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_properties_category_m2m"><sys_properties_category_m2m action="INSERT_OR_UPDATE"><category display_value="CICD Integration">8d1de113dbb86380432cfc600f9619f6</category><order>40</order><property display_value="cicd-integration.show.repository-field" name="cicd-integration.show.repository-field">55538e13dbf2d010fcf4178039961970</property><sys_class_name>sys_properties_category_m2m</sys_class_name><sys_created_by>admin</sys_created_by><sys_created_on>2020-08-28 11:56:36</sys_created_on><sys_id>01634653dbf2d010fcf41780399619c2</sys_id><sys_mod_count>1</sys_mod_count><sys_name>cicd-integration.show.repository-field.CICD Integration</sys_name><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_update_name>sys_properties_category_m2m_01634653dbf2d010fcf41780399619c2</sys_update_name><sys_updated_by>admin</sys_updated_by><sys_updated_on>2020-08-28 11:58:35</sys_updated_on></sys_properties_category_m2m></record_update>]]></payload>
<payload_hash>-401744856</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:51</sys_created_on>
<sys_id>84539f732f15b850d8455aab2799b61e</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c9f7f0000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:51</sys_updated_on>
<table/>
<target_name>cicd-integration.show.repository-field.CICD Integration</target_name>
<type>Category Property</type>
<update_domain>global</update_domain>
<update_guid>d2d3ce1300f2d010d92031a82dd82fe7</update_guid>
<update_guid_history>d2d3ce1300f2d010d92031a82dd82fe7:-401744856,816346539cf2d010123a4e78335902c4:1375794851</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_properties_category_m2m_ac7f0293db3c6380432cfc600f961948</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_properties_category_m2m"><sys_properties_category_m2m action="INSERT_OR_UPDATE"><category display_value="CICD Integration">8d1de113dbb86380432cfc600f9619f6</category><order>100</order><property display_value="cicd-integration.server.url" name="cicd-integration.server.url">d46f0e97dbf86380432cfc600f961954</property><sys_class_name>sys_properties_category_m2m</sys_class_name><sys_created_by>b.moers</sys_created_by><sys_created_on>2018-10-02 14:10:13</sys_created_on><sys_id>ac7f0293db3c6380432cfc600f961948</sys_id><sys_mod_count>4</sys_mod_count><sys_name>cicd-integration.server.url.CICD Integration</sys_name><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_update_name>sys_properties_category_m2m_ac7f0293db3c6380432cfc600f961948</sys_update_name><sys_updated_by>admin</sys_updated_by><sys_updated_on>2020-08-28 11:58:32</sys_updated_on></sys_properties_category_m2m></record_update>]]></payload>
<payload_hash>-1784462375</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:51</sys_created_on>
<sys_id>885357b32f15b850d8455aab2799b6a8</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c9f720000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:51</sys_updated_on>
<table/>
<target_name>cicd-integration.server.url.CICD Integration</target_name>
<type>Category Property</type>
<update_domain>global</update_domain>
<update_guid>e1d38653b0f2d010c32dcfb4aaa264d5</update_guid>
<update_guid_history>e1d38653b0f2d010c32dcfb4aaa264d5:-1784462375,b87346535cf2d01082958d63f05cc9e2:101139892,2a7abbd027777300d0a826878e184a2b:1601842748,2a7abbd027777300d0a826878e184a2b:1601842748,1dea9b3bc757a7803acf715873935ebe:-1610937612,40083fe79334e38042a511c516ead381:1384056852,4e8f8293093c63801f4fe4ae1465fb41:1996750360,e07f0293563c6380a512b57c3533444b:1384056852</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_script_7818f6b7db9f3f408fb6f6700f96199d</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update sys_domain="global" table="sys_script"&gt;&lt;sys_script action="INSERT_OR_UPDATE"&gt;&lt;abort_action&gt;false&lt;/abort_action&gt;&lt;access&gt;package_private&lt;/access&gt;&lt;action_delete&gt;false&lt;/action_delete&gt;&lt;action_insert&gt;false&lt;/action_insert&gt;&lt;action_query&gt;false&lt;/action_query&gt;&lt;action_update&gt;false&lt;/action_update&gt;&lt;active&gt;true&lt;/active&gt;&lt;add_message&gt;false&lt;/add_message&gt;&lt;advanced&gt;true&lt;/advanced&gt;&lt;change_fields&gt;false&lt;/change_fields&gt;&lt;client_callable&gt;false&lt;/client_callable&gt;&lt;collection&gt;sys_remote_update_set&lt;/collection&gt;&lt;condition/&gt;&lt;description/&gt;&lt;execute_function&gt;false&lt;/execute_function&gt;&lt;filter_condition/&gt;&lt;is_rest&gt;false&lt;/is_rest&gt;&lt;message/&gt;&lt;name&gt;[CICD] Display Messages in Preview View&lt;/name&gt;&lt;order&gt;1&lt;/order&gt;&lt;priority&gt;100&lt;/priority&gt;&lt;rest_method/&gt;&lt;rest_method_text/&gt;&lt;rest_service/&gt;&lt;rest_service_text/&gt;&lt;rest_variables/&gt;&lt;role_conditions/&gt;&lt;script&gt;&lt;![CDATA[(function executeRule(current, previous /*null when async*/) {
	
	new CiCdRun().sys_remote_update_set_Display(current);
	
})(current, previous);]]&gt;&lt;/script&gt;&lt;sys_class_name&gt;sys_script&lt;/sys_class_name&gt;&lt;sys_created_by&gt;b.moers&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2019-08-23 09:19:54&lt;/sys_created_on&gt;&lt;sys_domain&gt;global&lt;/sys_domain&gt;&lt;sys_domain_path&gt;/&lt;/sys_domain_path&gt;&lt;sys_id&gt;7818f6b7db9f3f408fb6f6700f96199d&lt;/sys_id&gt;&lt;sys_mod_count&gt;14&lt;/sys_mod_count&gt;&lt;sys_name&gt;[CICD] Display Messages in Preview View&lt;/sys_name&gt;&lt;sys_overrides/&gt;&lt;sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e"&gt;19190fabdbebd300dfa9b94ffe96193e&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="CICD Integration"&gt;19190fabdbebd300dfa9b94ffe96193e&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_script_7818f6b7db9f3f408fb6f6700f96199d&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;b.moers&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2019-08-30 14:31:57&lt;/sys_updated_on&gt;&lt;template/&gt;&lt;when&gt;before_display&lt;/when&gt;&lt;/sys_script&gt;&lt;sys_translated_text action="delete_multiple" query="documentkey=7818f6b7db9f3f408fb6f6700f96199d"/&gt;&lt;/record_update&gt;</payload>
<payload_hash>513598223</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:51</sys_created_on>
<sys_id>885357b32f15b850d8455aab2799b6ab</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c9da00000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:51</sys_updated_on>
<table>sys_remote_update_set</table>
<target_name>[CICD] Display Messages in Preview View</target_name>
<type>Business Rule</type>
<update_domain>global</update_domain>
<update_guid>b734089e83a33380661fafaf8de40870</update_guid>
<update_guid_history>b734089e83a33380661fafaf8de40870:1348585131,b734089e83a33380661fafaf8de40870:1348585131,7a7abbd0e977730064dc332006ffb0cb:513598223,b734089e83a33380661fafaf8de40870:1348585131,3ea0952dc327ff40b872bd28273ffa18:-32003247,2f260019f92b7f40421e905207e0895c:1839882542,a51b9b0d64e77f407394b51cece658f8:942584337,f00b1b0db3e77f406a5c9b199d255ca4:1933870071,03e917c98ae77f40233db69458e4f6e8:2042424028,64d993c98ce77f40a2b2690415b9a3d4:-1865102660,4cc99f49f0e77f40837efaf2ef507017:375492866,b099df4900e77f4060ddf07fec3da8ab:-680103675,7a79df497ae77f4077414eed91ea3a74:-375435341,972c76fbe89f3f40af0aaf2da604ca8a:-1949084813,d30cf2fb119f3f40d95765ad4475fad6:-683657972,4a9b72bb839f3f40a815fad8674bd6d8:-1869775295,34d9f2b7f29f3f4079b509c9b58a8ac1:-713613332,24b9b23b389f3f40ecf0dfac18ab2ed2:-116050588</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_security_acl_bc02c9d7db6d2b00323efc600f96192c</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_security_acl"><sys_security_acl action="INSERT_OR_UPDATE"><active>true</active><admin_overrides>true</admin_overrides><advanced>false</advanced><condition/><description/><name>CiCdExportBaseUpdateSet</name><operation display_value="execute">execute</operation><script/><sys_class_name>sys_security_acl</sys_class_name><sys_created_by>b.moers</sys_created_by><sys_created_on>2018-11-08 15:19:00</sys_created_on><sys_id>bc02c9d7db6d2b00323efc600f96192c</sys_id><sys_mod_count>0</sys_mod_count><sys_name>CiCdExportBaseUpdateSet</sys_name><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_update_name>sys_security_acl_bc02c9d7db6d2b00323efc600f96192c</sys_update_name><sys_updated_by>b.moers</sys_updated_by><sys_updated_on>2018-11-08 15:19:00</sys_updated_on><type display_value="processor">processor</type></sys_security_acl></record_update>]]></payload>
<payload_hash>-2083602046</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:51</sys_created_on>
<sys_id>885357b32f15b850d8455aab2799b6ae</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c975c0000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:51</sys_updated_on>
<table>CiCdExportBaseUpdateSet</table>
<target_name>CiCdExportBaseUpdateSet</target_name>
<type>Access Control</type>
<update_domain>global</update_domain>
<update_guid>738200e8ae7773003913072a4e670239</update_guid>
<update_guid_history>ba7abbd0cd777300ae6a720e299f06c2:-2083602046,ba7abbd0cd777300ae6a720e299f06c2:-2083602046,ba7abbd0cd777300ae6a720e299f06c2:-2083602046,7002c9d76b6d2b00a1c064a5ad7d9f2f:-607368720</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_ui_action_view_b30d0b78db673f409775f6700f96192d</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ui_action_view"><sys_ui_action_view action="INSERT_OR_UPDATE"><sys_class_name>sys_ui_action_view</sys_class_name><sys_created_by>b.moers</sys_created_by><sys_created_on>2019-08-26 13:18:25</sys_created_on><sys_id>b30d0b78db673f409775f6700f96192d</sys_id><sys_mod_count>1</sys_mod_count><sys_name>Insert.CICD Preview</sys_name><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_ui_action display_value="Insert">48029ef7c0a8000600e7770b24e5d36f</sys_ui_action><sys_ui_view display_value="CICD Preview" name="cicd_preview">cdb37233db9f3f408fb6f6700f96191a</sys_ui_view><sys_update_name>sys_ui_action_view_b30d0b78db673f409775f6700f96192d</sys_update_name><sys_updated_by>b.moers</sys_updated_by><sys_updated_on>2019-08-26 13:18:33</sys_updated_on><visibility>exclude</visibility></sys_ui_action_view></record_update>]]></payload>
<payload_hash>971170722</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:51</sys_created_on>
<sys_id>885357b32f15b850d8455aab2799b6b1</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c9cdc0000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:51</sys_updated_on>
<table/>
<target_name>exclude</target_name>
<type>UI View Action</type>
<update_domain>global</update_domain>
<update_guid>651d0b78f9673f4072a2013a49f6067f</update_guid>
<update_guid_history>651d0b78f9673f4072a2013a49f6067f:920278250,651d0b78f9673f4072a2013a49f6067f:920278250,ba7abbd0cc777300bb68f73cdfb980a4:971170722,651d0b78f9673f4072a2013a49f6067f:920278250,fb0d0b78fa673f404b7f7f7e5da2e32e:-1056228296</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_web_service_12b38c73db8367409775f6700f961914</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_web_service"&gt;&lt;sys_web_service action="INSERT_OR_UPDATE"&gt;&lt;active&gt;true&lt;/active&gt;&lt;function_name&gt;*&lt;/function_name&gt;&lt;name&gt;api/devops/cicd/source/sys_update_set&lt;/name&gt;&lt;scoped_name&gt;api/devops/cicd/source/sys_update_set&lt;/scoped_name&gt;&lt;script&gt;&lt;![CDATA[(function scriptedWebServiceOperation(request, response) {
	
	return new CiCdSource().updateSetSoapWebService(this.soapRequestXML, response);

})(request, response);]]&gt;&lt;/script&gt;&lt;short_description&gt;getKeys, getRecords&lt;/short_description&gt;&lt;sys_class_name&gt;sys_web_service&lt;/sys_class_name&gt;&lt;sys_created_by&gt;b.moers&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2019-01-23 13:38:48&lt;/sys_created_on&gt;&lt;sys_id&gt;12b38c73db8367409775f6700f961914&lt;/sys_id&gt;&lt;sys_mod_count&gt;3&lt;/sys_mod_count&gt;&lt;sys_name&gt;api/devops/cicd/source/sys_update_set&lt;/sys_name&gt;&lt;sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e"&gt;19190fabdbebd300dfa9b94ffe96193e&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="CICD Integration"&gt;19190fabdbebd300dfa9b94ffe96193e&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_web_service_12b38c73db8367409775f6700f961914&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;b.moers&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2019-01-30 17:00:52&lt;/sys_updated_on&gt;&lt;wsdl&gt;https://dev65672.service-now.com/api/devops/cicd/source/sys_update_set.do?WSDL&lt;/wsdl&gt;&lt;wsdl_compliance&gt;false&lt;/wsdl_compliance&gt;&lt;/sys_web_service&gt;&lt;/record_update&gt;</payload>
<payload_hash>-1664278335</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:52</sys_created_on>
<sys_id>885357b32f15b850d8455aab2799b6b5</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c9b3b0000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:52</sys_updated_on>
<table/>
<target_name>api/devops/cicd/source/sys_update_set</target_name>
<type>Scripted Web Service</type>
<update_domain>global</update_domain>
<update_guid>ff8200e871777300990062c81e76e76c</update_guid>
<update_guid_history>fe7abbd0bd777300830afb2dc048a08f:-1664278335,fe7abbd0bd777300830afb2dc048a08f:-1664278335,fe7abbd0bd777300830afb2dc048a08f:-1664278335,1645f4c27a172380a6fcadb6444f0ebe:1887726945,da79403bca8367401b8303d54bd544a8:1842765452,894984f3dc8367409aa7a962ff8f5592:389244012,02e30cbfff43674048cfcdf0472f8992:1194757255</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_dictionary_sys_scope_u_repository</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update&gt;&lt;sys_dictionary action="INSERT_OR_UPDATE" element="u_repository" table="sys_scope"&gt;&lt;active&gt;true&lt;/active&gt;&lt;array&gt;false&lt;/array&gt;&lt;array_denormalized&gt;false&lt;/array_denormalized&gt;&lt;attributes/&gt;&lt;audit&gt;false&lt;/audit&gt;&lt;calculation&gt;&lt;![CDATA[(function calculatedFieldValue(current) {

	// Add your code here
	return '';  // return the calculated value

})(current);]]&gt;&lt;/calculation&gt;&lt;choice/&gt;&lt;choice_field/&gt;&lt;choice_table/&gt;&lt;column_label&gt;Repository&lt;/column_label&gt;&lt;comments/&gt;&lt;create_roles/&gt;&lt;default_value/&gt;&lt;defaultsort/&gt;&lt;delete_roles/&gt;&lt;dependent/&gt;&lt;dependent_on_field/&gt;&lt;display&gt;false&lt;/display&gt;&lt;dynamic_creation&gt;false&lt;/dynamic_creation&gt;&lt;dynamic_creation_script/&gt;&lt;dynamic_default_value/&gt;&lt;dynamic_ref_qual/&gt;&lt;element&gt;u_repository&lt;/element&gt;&lt;element_reference&gt;false&lt;/element_reference&gt;&lt;foreign_database/&gt;&lt;function_definition/&gt;&lt;function_field&gt;false&lt;/function_field&gt;&lt;internal_type display_value="String"&gt;string&lt;/internal_type&gt;&lt;mandatory&gt;false&lt;/mandatory&gt;&lt;max_length&gt;120&lt;/max_length&gt;&lt;name&gt;sys_scope&lt;/name&gt;&lt;next_element/&gt;&lt;primary&gt;false&lt;/primary&gt;&lt;read_only&gt;false&lt;/read_only&gt;&lt;read_roles/&gt;&lt;reference/&gt;&lt;reference_cascade_rule/&gt;&lt;reference_floats&gt;false&lt;/reference_floats&gt;&lt;reference_key/&gt;&lt;reference_qual/&gt;&lt;reference_qual_condition/&gt;&lt;reference_type/&gt;&lt;sizeclass/&gt;&lt;spell_check&gt;false&lt;/spell_check&gt;&lt;staged&gt;false&lt;/staged&gt;&lt;sys_class_name&gt;sys_dictionary&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2020-10-20 17:36:20&lt;/sys_created_on&gt;&lt;sys_id&gt;4cdc086cdb0ca450fcf4178039961993&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_name&gt;Repository&lt;/sys_name&gt;&lt;sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e"&gt;19190fabdbebd300dfa9b94ffe96193e&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="CICD Integration"&gt;19190fabdbebd300dfa9b94ffe96193e&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_dictionary_sys_scope_u_repository&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2020-12-17 14:43:34&lt;/sys_updated_on&gt;&lt;table_reference&gt;false&lt;/table_reference&gt;&lt;text_index&gt;false&lt;/text_index&gt;&lt;unique&gt;false&lt;/unique&gt;&lt;use_dependent_field&gt;false&lt;/use_dependent_field&gt;&lt;use_dynamic_default&gt;false&lt;/use_dynamic_default&gt;&lt;use_reference_qualifier&gt;simple&lt;/use_reference_qualifier&gt;&lt;virtual&gt;false&lt;/virtual&gt;&lt;widget/&gt;&lt;write_roles/&gt;&lt;xml_view&gt;false&lt;/xml_view&gt;&lt;/sys_dictionary&gt;&lt;/record_update&gt;</payload>
<payload_hash>1878662535</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:51</sys_created_on>
<sys_id>88539f732f15b850d8455aab2799b61a</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2ca2220000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:51</sys_updated_on>
<table>sys_scope</table>
<target_name>Application.Repository</target_name>
<type>Dictionary</type>
<update_domain>global</update_domain>
<update_guid>e26d00acb10ca450d9890594da6e0941</update_guid>
<update_guid_history>e26d00acb10ca450d9890594da6e0941:1878662535</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_properties_a7df4293db3c6380432cfc600f961974</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_properties"><sys_properties action="INSERT_OR_UPDATE"><choices/><description>&lt;b&gt;Connect to CICD Server via MID Server&lt;/b&gt;</description><ignore_cache>false</ignore_cache><is_private>false</is_private><name>cicd-integration.server.through-mid</name><read_roles/><suffix/><sys_class_name>sys_properties</sys_class_name><sys_created_by>b.moers</sys_created_by><sys_created_on>2018-10-02 14:12:04</sys_created_on><sys_id>a7df4293db3c6380432cfc600f961974</sys_id><sys_mod_count>5</sys_mod_count><sys_name>cicd-integration.server.through-mid</sys_name><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_update_name>sys_properties_a7df4293db3c6380432cfc600f961974</sys_update_name><sys_updated_by>b.moers</sys_updated_by><sys_updated_on>2018-12-14 15:19:29</sys_updated_on><type>boolean</type><value>true</value><write_roles/></sys_properties><sys_translated_text action="delete_multiple" query="documentkey=a7df4293db3c6380432cfc600f961974"/></record_update>]]></payload>
<payload_hash>-17496287</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:51</sys_created_on>
<sys_id>88539f732f15b850d8455aab2799b61d</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c99dc0000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:51</sys_updated_on>
<table/>
<target_name>cicd-integration.server.through-mid</target_name>
<type>System Property</type>
<update_domain>global</update_domain>
<update_guid>e782cca8847773002543c24b2b980dc7</update_guid>
<update_guid_history>ee7abbd086777300d12c041397240e85:-17496287,ee7abbd086777300d12c041397240e85:-17496287,ee7abbd086777300d12c041397240e85:-17496287,d75bda3e65daa7c035382b5781fbeab8:1687938585,e5cb6db27c5aa7c01b68b47a51399691:379358450,0fbb2db2175aa7c0872ceb73a79fda5d:592931421,a88019ca824e2780d0afc4f2af6a222a:379358450,fc50de930a3c6380cb213d7c063a398f:-319734977,98ef8693c93c638083406fdae539642f:-745856685</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_properties_category_m2m_88752389db432f00ee93b14ffe96199a</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_properties_category_m2m"><sys_properties_category_m2m action="INSERT_OR_UPDATE"><category display_value="CICD Integration">8d1de113dbb86380432cfc600f9619f6</category><order>410</order><property display_value="cicd-integration.auto-create-cd-user" name="cicd-integration.auto-create-cd-user">2d24af09db432f00ee93b14ffe961983</property><sys_class_name>sys_properties_category_m2m</sys_class_name><sys_created_by>b.moers</sys_created_by><sys_created_on>2019-01-15 17:00:52</sys_created_on><sys_id>88752389db432f00ee93b14ffe96199a</sys_id><sys_mod_count>3</sys_mod_count><sys_name>cicd-integration.auto-create-cd-user.CICD Integration</sys_name><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_update_name>sys_properties_category_m2m_88752389db432f00ee93b14ffe96199a</sys_update_name><sys_updated_by>b.moers</sys_updated_by><sys_updated_on>2019-01-31 09:27:03</sys_updated_on></sys_properties_category_m2m></record_update>]]></payload>
<payload_hash>1877402331</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:51</sys_created_on>
<sys_id>8c5357b32f15b850d8455aab2799b6a7</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c9b780000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:51</sys_updated_on>
<table/>
<target_name>cicd-integration.auto-create-cd-user.CICD Integration</target_name>
<type>Category Property</type>
<update_domain>global</update_domain>
<update_guid>6782cca8b67773005ae9e2073d01ced5</update_guid>
<update_guid_history>2a7abbd00a77730034a6e1e38c07cc24:1877402331,2a7abbd00a77730034a6e1e38c07cc24:1877402331,2a7abbd00a77730034a6e1e38c07cc24:1877402331,d00794125d9b6f405352e346642f3ba2:-1631997357,14ae206163c36f0061fdf458b450795c:-100580334,e4a9eb4d1b432f00d4e84366ef6915de:1061556600,cc752389f1432f0012b59a443d70329c:587282037</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_script_381f2d1adbb7bfc08fb6f6700f961968</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update sys_domain="global" table="sys_script"&gt;&lt;sys_script action="INSERT_OR_UPDATE"&gt;&lt;abort_action&gt;false&lt;/abort_action&gt;&lt;access&gt;package_private&lt;/access&gt;&lt;action_delete&gt;false&lt;/action_delete&gt;&lt;action_insert&gt;false&lt;/action_insert&gt;&lt;action_query&gt;false&lt;/action_query&gt;&lt;action_update&gt;false&lt;/action_update&gt;&lt;active&gt;true&lt;/active&gt;&lt;add_message&gt;false&lt;/add_message&gt;&lt;advanced&gt;true&lt;/advanced&gt;&lt;change_fields&gt;false&lt;/change_fields&gt;&lt;client_callable&gt;false&lt;/client_callable&gt;&lt;collection&gt;sys_scope&lt;/collection&gt;&lt;condition/&gt;&lt;description/&gt;&lt;execute_function&gt;false&lt;/execute_function&gt;&lt;filter_condition/&gt;&lt;is_rest&gt;false&lt;/is_rest&gt;&lt;message/&gt;&lt;name&gt;[CICD] Display Running Jobs&lt;/name&gt;&lt;order&gt;1&lt;/order&gt;&lt;priority&gt;100&lt;/priority&gt;&lt;rest_method/&gt;&lt;rest_method_text/&gt;&lt;rest_service/&gt;&lt;rest_service_text/&gt;&lt;rest_variables/&gt;&lt;role_conditions/&gt;&lt;script&gt;&lt;![CDATA[(function executeRule(current, previous /*null when async*/) {
	new global.CiCdRun().sys_app_Display(current);
})(current, previous);]]&gt;&lt;/script&gt;&lt;sys_class_name&gt;sys_script&lt;/sys_class_name&gt;&lt;sys_created_by&gt;b.moers&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2019-09-12 08:35:47&lt;/sys_created_on&gt;&lt;sys_domain&gt;global&lt;/sys_domain&gt;&lt;sys_domain_path&gt;/&lt;/sys_domain_path&gt;&lt;sys_id&gt;381f2d1adbb7bfc08fb6f6700f961968&lt;/sys_id&gt;&lt;sys_mod_count&gt;2&lt;/sys_mod_count&gt;&lt;sys_name&gt;[CICD] Display Running Jobs&lt;/sys_name&gt;&lt;sys_overrides/&gt;&lt;sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e"&gt;19190fabdbebd300dfa9b94ffe96193e&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="CICD Integration"&gt;19190fabdbebd300dfa9b94ffe96193e&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_script_381f2d1adbb7bfc08fb6f6700f961968&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2020-10-20 17:53:51&lt;/sys_updated_on&gt;&lt;template/&gt;&lt;when&gt;before_display&lt;/when&gt;&lt;/sys_script&gt;&lt;sys_translated_text action="delete_multiple" query="documentkey=381f2d1adbb7bfc08fb6f6700f961968"/&gt;&lt;/record_update&gt;</payload>
<payload_hash>590440149</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:51</sys_created_on>
<sys_id>8c5357b32f15b850d8455aab2799b6aa</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c9ffa0000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:51</sys_updated_on>
<table>sys_scope</table>
<target_name>[CICD] Display Running Jobs</target_name>
<type>Business Rule</type>
<update_domain>global</update_domain>
<update_guid>0b6114606a4ca450ecde263445ca7f5b</update_guid>
<update_guid_history>0b6114606a4ca450ecde263445ca7f5b:590440149,8fbfa55a89b7bfc0d460695aea27e143:-1324140080,916f2d1aafb7bfc0580f7782b8ea05bb:-1539128944</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_security_acl_1a7833bddbb31f0076d6b94ffe961994</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_security_acl"><sys_security_acl action="INSERT_OR_UPDATE"><active>true</active><admin_overrides>true</admin_overrides><advanced>false</advanced><condition/><description/><name>/api/devops/cicd/ci</name><operation display_value="execute">execute</operation><script/><sys_class_name>sys_security_acl</sys_class_name><sys_created_by>b.moers</sys_created_by><sys_created_on>2018-08-09 12:55:25</sys_created_on><sys_id>1a7833bddbb31f0076d6b94ffe961994</sys_id><sys_mod_count>1</sys_mod_count><sys_name>/api/devops/cicd/ci</sys_name><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_update_name>sys_security_acl_1a7833bddbb31f0076d6b94ffe961994</sys_update_name><sys_updated_by>b.moers</sys_updated_by><sys_updated_on>2018-08-10 07:16:07</sys_updated_on><type display_value="REST_Endpoint">REST_Endpoint</type></sys_security_acl></record_update>]]></payload>
<payload_hash>1016602268</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:51</sys_created_on>
<sys_id>8c5357b32f15b850d8455aab2799b6ad</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c95800000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:51</sys_updated_on>
<table>/api/devops/cicd/ci</table>
<target_name>/api/devops/cicd/ci</target_name>
<type>Access Control</type>
<update_domain>global</update_domain>
<update_guid>3b8200e8ef77730058996234b934c52f</update_guid>
<update_guid_history>727abbd0947773009726ac41e3de64bc:1016602268,727abbd0947773009726ac41e3de64bc:1016602268,727abbd0947773009726ac41e3de64bc:1016602268,fd64bb8649ff1f00ee5043349094ee50:-976501482,d27833bd10b31f001a97651b9b5ee197:-1657311344</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_ui_action_view_14043633db9f3f408fb6f6700f961911</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ui_action_view"><sys_ui_action_view action="INSERT_OR_UPDATE"><sys_class_name>sys_ui_action_view</sys_class_name><sys_created_by>b.moers</sys_created_by><sys_created_on>2019-08-23 08:55:02</sys_created_on><sys_id>14043633db9f3f408fb6f6700f961911</sys_id><sys_mod_count>1</sys_mod_count><sys_name>Save.CICD Preview</sys_name><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_ui_action display_value="Save">47fd7f4dc0a8000600a552278b5232ab</sys_ui_action><sys_ui_view display_value="CICD Preview" name="cicd_preview">cdb37233db9f3f408fb6f6700f96191a</sys_ui_view><sys_update_name>sys_ui_action_view_14043633db9f3f408fb6f6700f961911</sys_update_name><sys_updated_by>b.moers</sys_updated_by><sys_updated_on>2019-08-23 08:55:15</sys_updated_on><visibility>exclude</visibility></sys_ui_action_view></record_update>]]></payload>
<payload_hash>-1569313475</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:51</sys_created_on>
<sys_id>8c5357b32f15b850d8455aab2799b6b0</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c9c5d0000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:51</sys_updated_on>
<table/>
<target_name>exclude</target_name>
<type>UI View Action</type>
<update_domain>global</update_domain>
<update_guid>93047e33269f3f4020786553c1bf980c</update_guid>
<update_guid_history>93047e33269f3f4020786553c1bf980c:-1703463547,93047e33269f3f4020786553c1bf980c:-1703463547,7a7abbd02f77730058a8f9180a34b09d:-1569313475,93047e33269f3f4020786553c1bf980c:-1703463547,d00436336c9f3f40f9bdf7b17bc67c13:614997203</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_ui_section_4586e4cddbc02850fcf4178039961957</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update><sys_ui_section caption="CI/CD Settings" section_id="4586e4cddbc02850fcf4178039961957" sys_domain="global" table="sys_app" version="3" view="CICD"><sys_ui_element action="INSERT_OR_UPDATE"><element>u_repository</element><position>0</position><sys_created_by>admin</sys_created_by><sys_created_on>2020-10-22 08:43:00</sys_created_on><sys_id>518628cddbc02850fcf4178039961919</sys_id><sys_mod_count>0</sys_mod_count><sys_ui_formatter/><sys_ui_section caption="CI/CD Settings" display_value="CI/CD Settings" name="sys_app" sys_domain="global" view="fb54604ddbc02850fcf4178039961920">4586e4cddbc02850fcf4178039961957</sys_ui_section><sys_updated_by>admin</sys_updated_by><sys_updated_on>2020-10-22 08:43:00</sys_updated_on><sys_user/><type/></sys_ui_element><sys_ui_section action="INSERT_OR_UPDATE"><caption>CI/CD Settings</caption><header>false</header><name>sys_app</name><roles/><sys_class_name>sys_ui_section</sys_class_name><sys_created_by>admin</sys_created_by><sys_created_on>2020-10-22 08:42:58</sys_created_on><sys_domain>global</sys_domain><sys_domain_path>/</sys_domain_path><sys_id>4586e4cddbc02850fcf4178039961957</sys_id><sys_mod_count>1</sys_mod_count><sys_name>CI/CD Settings</sys_name><sys_overrides/><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_update_name>sys_ui_section_4586e4cddbc02850fcf4178039961957</sys_update_name><sys_updated_by>admin</sys_updated_by><sys_updated_on>2020-10-22 11:38:36</sys_updated_on><sys_user/><title>false</title><view display_value="CICD" name="CICD">fb54604ddbc02850fcf4178039961920</view><view_name/></sys_ui_section></sys_ui_section></record_update>]]></payload>
<payload_hash>560754408</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:51</sys_created_on>
<sys_id>8c5357b32f15b850d8455aab2799b6b3</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2ca1a60000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:51</sys_updated_on>
<table>sys_app</table>
<target_name>Custom Application</target_name>
<type>Form Layout</type>
<update_domain>global</update_domain>
<update_guid>6cc4e44deec02850801177e71c79f571</update_guid>
<update_guid_history>6cc4e44deec02850801177e71c79f571:-768640097,4864604df3c028506bc6b60ad4b443a3:-1076537304,b5becd0d0b442850bd98a17be7987fe9:2139260239,118628cd37c02850ba17e9ff2b34b81a:-1615551570</update_guid_history>
<update_set display_value=""/>
<view>CICD</view>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>DELETE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_ui_section_f0fec0ecdb0ca450fcf4178039961997</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update><sys_ui_section caption="CI/CD Settings" section_id="f0fec0ecdb0ca450fcf4178039961997" sys_domain="global" table="sys_store_app" version="3" view=""><sys_ui_section action="DELETE"><caption>CI/CD Settings</caption><header>false</header><name>sys_store_app</name><roles/><sys_class_name/><sys_created_by/><sys_created_on/><sys_domain>global</sys_domain><sys_domain_path/><sys_id>f0fec0ecdb0ca450fcf4178039961997</sys_id><sys_mod_count/><sys_name/><sys_overrides/><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_update_name/><sys_updated_by/><sys_updated_on>2020-10-22 08:29:48</sys_updated_on><sys_user/><title>false</title><view display_value="Default view" name="NULL">Default view</view><view_name/></sys_ui_section></sys_ui_section></record_update>]]></payload>
<payload_hash>-983772902</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:52</sys_created_on>
<sys_id>8c5357b32f15b850d8455aab2799b6b4</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2ca0810000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:52</sys_updated_on>
<table>sys_store_app</table>
<target_name>Store Application</target_name>
<type>Form Layout</type>
<update_domain>global</update_domain>
<update_guid>8c83a8c953c028502359a4c12fad7698</update_guid>
<update_guid_history>8c83a8c953c028502359a4c12fad7698:-983772902,2c63e4c962c028501729f939237310f8:-1833878401,f31f04ec580ca45004c945d3bf3bb815:2050629940</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_app_19190fabdbebd300dfa9b94ffe96193e</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_app"><sys_app action="INSERT_OR_UPDATE"><active>true</active><can_edit_in_studio>false</can_edit_in_studio><enforce_license>log</enforce_license><guided_setup_guid/><js_level>helsinki_es5</js_level><licensable>true</licensable><license_category/><license_model>none</license_model><logo/><menu display_value="CICD Integration">91194b2bdbebd300dfa9b94ffe96194d</menu><name>CICD Integration</name><private>false</private><restrict_table_access>false</restrict_table_access><runtime_access_tracking>permissive</runtime_access_tracking><scope>global</scope><scoped_administration>false</scoped_administration><short_description/><source>19190fabdbebd300dfa9b94ffe96193e</source><store_correlation_id/><store_url/><sys_class_name>sys_app</sys_class_name><sys_code/><sys_created_by>b.moers</sys_created_by><sys_created_on>2018-08-02 09:42:02</sys_created_on><sys_id>19190fabdbebd300dfa9b94ffe96193e</sys_id><sys_mod_count>66</sys_mod_count><sys_updated_by>admin</sys_updated_by><sys_updated_on>2021-07-19 09:50:15</sys_updated_on><template/><trackable>true</trackable><u_repository>sn_cicd_integration_app</u_repository><user_role display_value="cicd_integration_user" name="cicd_integration_user">dd194b2bdbebd300dfa9b94ffe96194f</user_role><vendor/><vendor_prefix/><version>1.4.18</version></sys_app></record_update>]]></payload>
<payload_hash>757212657</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:51</sys_created_on>
<sys_id>8c539f732f15b850d8455aab2799b619</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c90ad0000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:51</sys_updated_on>
<table/>
<target_name>CICD Integration</target_name>
<type>Custom Application</type>
<update_domain>global</update_domain>
<update_guid>1f231f73b115b850c4d6be6c77c2ea7c</update_guid>
<update_guid_history>1f231f73b115b850c4d6be6c77c2ea7c:757212657,b917a2c87655bc10f7523545b35522ef:427446896,94eb6a9fd86c7810624f32b1419949c4:97681135,d9a7f748943a2c10090072d3764f226d:-232084626,fc59afc836f62c105a8d0d5b8ed4fe52:-561850387,6190de03a5496090c24eaeca398bf974:-1221381909,04c1bf9b131c6010684e547494bd6095:-1551147670,5e20e72cff44e45055e2670ae44f507c:-1880913431,5dfc17e8c744e4504620f428546d789c:1598444077,57ec5f681944e4509efa4c46f8701044:1261205910,cb0cc82c6f0ca45070c04ab4b62b67d8:1598444077,323049d5e2cf9410e755697b3d6c5142:-1771325760,a907a041fbc79410ffbbfbfc17514caa:-156098163,8dbc69d41a0354107087d01fe2fbaf12:-485863924,75f4ba1b9176d010a1d7ab720196f90b:-815629685,a1117657e976d0103ab7497a97f7a4e8:-2134692729,9b3aeadf0436d0102656aa4ab200803f:808127601,a8b63b0ae44484146aaba08e19f801a6:-906424649,618e5f0211048414094651ec9c3055bc:428663201,f5b187a0dd80ccd0f21a3081ec07166d:98897440,adeaf9e4224c8cd04120367592c786ad:-230868321,e307a6045dcc0cd0fb8ea39838efab9e:-560634082,605652c0428c0cd0bc7d6fb0018a76b9:-890399843,68fead4ce5c80cd039b336f5149dcc2f:-1220165604,312daaa77c33fbc0514747ef463c1417:-1879697126,8ce8e6a32333fbc082ca65121c208e0e:2085504409,22e65bee60b3f7c0005565cad08552c1:1755738648,6eab35dac6f7bfc0ce4bbd285d882d66:-829898134,71a6f516fcf7bfc0e21c9041a2e1913f:-1159663895,26e1791e31b7bfc0fd71a8c13711b5b5:-1489429656,7fcf29dac6b7bfc05f8993128fc85332:-1819195417,c9ac0d4e833f73c05bc2fa91cce1aeb0:2146006118,4792c5028dfb73c01424998a909d2289:1816240357,3acca04a6ebb73c0988cbe7cf454d285:1486474596,d8eb9cce497b73c0db11f0a2f0a38fe3:1156708835,34cdbfbd0ef773c008dc039b78e60e39:826943074,f69d735419f3fb80939863fcad8e7333:-1857595487,df791b508073fb8047dc0fcd5f9ed30f:2107606048,cc90694ca4f77b80655b4c03f633ed77:1777840287,309b0496a2e33380bd6736cf9432371c:1448074526,bb764052a9e33380ad696fef8704a0af:1777840287,14cbdef5d02bb780e8a886e818324ab1:-1666640472,d72f2d29fe63778064f895a21c01967d:-208766682,1e5251ed3927ff401fa3c63490e9ac2b:-538532443,f10a3ce5d1e3ff404ec1624ba7db99bf:-868298204,fa7eb809bdeb3f40a59157315a9f5f52:-1198063965,0e8f60c1e6eb3f405f5070a2577a4b11:-1527829726,01aaac8171eb3f405551c2e1eafde272:-1857595487,da337378d0e73f404da83b1b63a6ab6a:2107606048,c36bafb052e73f4027d5c8b3b5416b72:1777840287,683c85e0382fff40d97bbc7caba0a276:1448074526,05bc457473cafb808a37250a0e5bc69f:1356029985,49bc457473cafb80df551629c76a489d:1026264224,0d42d25437e4b300904b33a984c83a2c:39229331,2546c98c15247300f29db44f64e55f8a:-620302191,0ea2458c1f247300050072ac6afa3c81:-950067952,3e3590aa885cb3c01ff6ac7cbe62ea32:-1279833713,edc917cb40447b800e7d8b007b91985f:1288937491,7e30e5e98808b3809d670a51fb3fed1e:959171730,bc536eaf207beb40f26c3c8832d6509e:629405969,6fd246ef6ef7eb40f8256b922fe3ba02:299640208,d00a2d6bf3b7eb40c1191cf11aafd0d4:-30125553,a7186dd72773ab4038f057f59314409d:-359891314,09c3c7668e7be7401f8fb25e8953b99b:-689657075,93338d1b7a6d2b00d3c0c7093e82ed9d:166412808,a60247c352a52b00941d0da08cca4338:1748627913,239fb2032ba52b00a42bee2953dc55e6:1418862152,95194fab2bebd3001866cd5bcae3d449:1089096391</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_properties_55538e13dbf2d010fcf4178039961970</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_properties"><sys_properties action="INSERT_OR_UPDATE"><choices/><description>&lt;b&gt;Show the 'repository' field on the Custom Application form.&lt;/b&gt;</description><ignore_cache>false</ignore_cache><is_private>false</is_private><name>cicd-integration.show.repository-field</name><read_roles/><suffix/><sys_class_name>sys_properties</sys_class_name><sys_created_by>admin</sys_created_by><sys_created_on>2020-08-28 11:56:20</sys_created_on><sys_id>55538e13dbf2d010fcf4178039961970</sys_id><sys_mod_count>10</sys_mod_count><sys_name>cicd-integration.show.repository-field</sys_name><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_update_name>sys_properties_55538e13dbf2d010fcf4178039961970</sys_update_name><sys_updated_by>admin</sys_updated_by><sys_updated_on>2021-02-17 12:08:56</sys_updated_on><type>boolean</type><value>false</value><write_roles/></sys_properties><sys_translated_text action="delete_multiple" query="documentkey=55538e13dbf2d010fcf4178039961970"/></record_update>]]></payload>
<payload_hash>-559893082</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:51</sys_created_on>
<sys_id>8c539f732f15b850d8455aab2799b61c</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2ca26a0000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:51</sys_updated_on>
<table/>
<target_name>cicd-integration.show.repository-field</target_name>
<type>System Property</type>
<update_domain>global</update_domain>
<update_guid>a041c10b2a122854b274ab5e996adc82</update_guid>
<update_guid_history>a041c10b2a122854b274ab5e996adc82:-559893082,80ceedb3039ca01025ce85793f0e0755:-559893082,80ceedb3039ca01025ce85793f0e0755:-559893082,095a21bfc05ca010620505f1a6108015:-559893082,095a21bfc05ca010620505f1a6108015:-559893082,7253150132842850609313f3647000a0:-559893082,7253150132842850609313f3647000a0:-559893082,a38d05c98c442850ef66b4ec9eb6c44d:1540905001,e3f552dfd0f2d0108c23bb1937c2314e:-559893082,ba951e9fd8f2d010f5bce183d4235712:1540905001,8dd5821799f2d010b6d2053a8e50d432:-559893082,fdb58ed332f2d01026d121769f9c8bd2:1540905001,f80486533bf2d0108ea406c67313d7a5:-559893082,a153c25394f2d01032610b0609e15a9a:-994961299</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_ws_operation_18361231db2bb7808fb6f6700f9619ec</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_ws_operation"&gt;&lt;sys_ws_operation action="INSERT_OR_UPDATE"&gt;&lt;active&gt;true&lt;/active&gt;&lt;consumes&gt;application/json,application/xml,text/xml&lt;/consumes&gt;&lt;consumes_customized&gt;false&lt;/consumes_customized&gt;&lt;default_operation_uri&gt;/api/devops/cicd/deploy_step&lt;/default_operation_uri&gt;&lt;enforce_acl&gt;2ae86fe7db6fd300dfa9b94ffe9619bc&lt;/enforce_acl&gt;&lt;http_method&gt;POST&lt;/http_method&gt;&lt;name&gt;CD - Deploy Process Steps (POST)&lt;/name&gt;&lt;operation_script&gt;&lt;![CDATA[(function process(/*RESTAPIRequest*/ request, /*RESTAPIResponse*/ response) {

    return new CiCdDeploy(request, response).processUpdateSetDeploySteps();

})(request, response);]]&gt;&lt;/operation_script&gt;&lt;operation_uri&gt;/api/devops/v1/cicd/deploy_step&lt;/operation_uri&gt;&lt;produces&gt;application/json,application/xml,text/xml&lt;/produces&gt;&lt;produces_customized&gt;false&lt;/produces_customized&gt;&lt;relative_path&gt;/deploy_step&lt;/relative_path&gt;&lt;request_example/&gt;&lt;requires_acl_authorization&gt;true&lt;/requires_acl_authorization&gt;&lt;requires_authentication&gt;true&lt;/requires_authentication&gt;&lt;requires_snc_internal_role&gt;true&lt;/requires_snc_internal_role&gt;&lt;short_description/&gt;&lt;sys_class_name&gt;sys_ws_operation&lt;/sys_class_name&gt;&lt;sys_created_by&gt;b.moers&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2019-08-29 11:52:38&lt;/sys_created_on&gt;&lt;sys_id&gt;18361231db2bb7808fb6f6700f9619ec&lt;/sys_id&gt;&lt;sys_mod_count&gt;2&lt;/sys_mod_count&gt;&lt;sys_name&gt;CD - Deploy Process Steps (POST)&lt;/sys_name&gt;&lt;sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e"&gt;19190fabdbebd300dfa9b94ffe96193e&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="CICD Integration"&gt;19190fabdbebd300dfa9b94ffe96193e&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_ws_operation_18361231db2bb7808fb6f6700f9619ec&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;b.moers&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2019-08-29 11:57:02&lt;/sys_updated_on&gt;&lt;web_service_definition display_value="CICD Integration"&gt;81eccb6fdbebd300dfa9b94ffe96190e&lt;/web_service_definition&gt;&lt;web_service_version display_value="v1"&gt;0a3dcb2fdbebd300dfa9b94ffe9619c7&lt;/web_service_version&gt;&lt;/sys_ws_operation&gt;&lt;/record_update&gt;</payload>
<payload_hash>1934428178</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:52</sys_created_on>
<sys_id>905357b32f15b850d8455aab2799b6b7</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c9d780000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:52</sys_updated_on>
<table/>
<target_name>CD - Deploy Process Steps (POST)</target_name>
<type>Scripted REST Resource</type>
<update_domain>global</update_domain>
<update_guid>8b369a71552bb780046f4ed26aa23030</update_guid>
<update_guid_history>8b369a71552bb780046f4ed26aa23030:584540378,8b369a71552bb780046f4ed26aa23030:584540378,127a7bd090777300ee3f5d69cea23afe:1934428178,8b369a71552bb780046f4ed26aa23030:584540378,10361231942bb78045289effc84bd5ee:-412504630</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_ws_operation_f3cca2b1dbffdb0076d6b94ffe96191e</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_ws_operation"&gt;&lt;sys_ws_operation action="INSERT_OR_UPDATE"&gt;&lt;active&gt;true&lt;/active&gt;&lt;consumes&gt;application/json,application/xml,text/xml&lt;/consumes&gt;&lt;consumes_customized&gt;false&lt;/consumes_customized&gt;&lt;default_operation_uri&gt;/api/devops/cicd/file/{tableName}&lt;/default_operation_uri&gt;&lt;enforce_acl&gt;1a7833bddbb31f0076d6b94ffe961994&lt;/enforce_acl&gt;&lt;http_method&gt;GET&lt;/http_method&gt;&lt;name&gt;CI - Get Files from Table&lt;/name&gt;&lt;operation_script&gt;&lt;![CDATA[(function process(/*RESTAPIRequest*/ request, /*RESTAPIResponse*/ response) {
	
	return new CiCdApi(request, response).getFilesFromTable(request.pathParams.tableName);

})(request, response);]]&gt;&lt;/operation_script&gt;&lt;operation_uri&gt;/api/devops/v1/cicd/file/{tableName}&lt;/operation_uri&gt;&lt;produces&gt;application/json,application/xml,text/xml&lt;/produces&gt;&lt;produces_customized&gt;false&lt;/produces_customized&gt;&lt;relative_path&gt;/file/{tableName}&lt;/relative_path&gt;&lt;request_example/&gt;&lt;requires_acl_authorization&gt;true&lt;/requires_acl_authorization&gt;&lt;requires_authentication&gt;true&lt;/requires_authentication&gt;&lt;requires_snc_internal_role&gt;true&lt;/requires_snc_internal_role&gt;&lt;short_description&gt;Get Records from a Table extending sys_metadata&lt;/short_description&gt;&lt;sys_class_name&gt;sys_ws_operation&lt;/sys_class_name&gt;&lt;sys_created_by&gt;b.moers&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2018-08-09 07:24:51&lt;/sys_created_on&gt;&lt;sys_id&gt;f3cca2b1dbffdb0076d6b94ffe96191e&lt;/sys_id&gt;&lt;sys_mod_count&gt;3&lt;/sys_mod_count&gt;&lt;sys_name&gt;CI - Get Files from Table&lt;/sys_name&gt;&lt;sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e"&gt;19190fabdbebd300dfa9b94ffe96193e&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="CICD Integration"&gt;19190fabdbebd300dfa9b94ffe96193e&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_ws_operation_f3cca2b1dbffdb0076d6b94ffe96191e&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;b.moers&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2018-08-09 12:57:16&lt;/sys_updated_on&gt;&lt;web_service_definition display_value="CICD Integration"&gt;81eccb6fdbebd300dfa9b94ffe96190e&lt;/web_service_definition&gt;&lt;web_service_version display_value="v1"&gt;0a3dcb2fdbebd300dfa9b94ffe9619c7&lt;/web_service_version&gt;&lt;/sys_ws_operation&gt;&lt;/record_update&gt;</payload>
<payload_hash>-1293759311</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:52</sys_created_on>
<sys_id>905357b32f15b850d8455aab2799b6ba</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c950a0000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:52</sys_updated_on>
<table/>
<target_name>CI - Get Files from Table</target_name>
<type>Scripted REST Resource</type>
<update_domain>global</update_domain>
<update_guid>c89200e88477730028f23716b384b390</update_guid>
<update_guid_history>967abbd04c777300faf96ed9145fe216:-1293759311,967abbd04c777300faf96ed9145fe216:-1293759311,967abbd04c777300faf96ed9145fe216:-1293759311,11e83bbd3cb31f005975ec8a0d0df657:-1511695368,11e83bbd3cb31f005975ec8a0d0df657:-1511695368,b3666f7d78731f0045bd1df265ad92d8:674438248,3126e3bd60731f000c736233dd92b1b4:1000699896,f7cca2b1b4ffdb00e89a12d3081a7a1f:-1129770737</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_ws_query_parameter_map_4ef32e69dbb3db0076d6b94ffe9619fa</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ws_query_parameter_map"><sys_ws_query_parameter_map action="INSERT_OR_UPDATE"><sys_class_name>sys_ws_query_parameter_map</sys_class_name><sys_created_by>b.moers</sys_created_by><sys_created_on>2018-08-08 12:07:54</sys_created_on><sys_id>4ef32e69dbb3db0076d6b94ffe9619fa</sys_id><sys_mod_count>0</sys_mod_count><sys_name>db836e29dbb3db0076d6b94ffe961976</sys_name><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_update_name>sys_ws_query_parameter_map_4ef32e69dbb3db0076d6b94ffe9619fa</sys_update_name><sys_updated_by>b.moers</sys_updated_by><sys_updated_on>2018-08-08 12:07:54</sys_updated_on><web_service_operation display_value="CI - Get UpdateSet Files">4f6a31a9db33db0076d6b94ffe9619fa</web_service_operation><web_service_query_parameter display_value="sysparm_query_category">db836e29dbb3db0076d6b94ffe961976</web_service_query_parameter></sys_ws_query_parameter_map></record_update>]]></payload>
<payload_hash>-1495798704</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:52</sys_created_on>
<sys_id>905357b32f15b850d8455aab2799b6bd</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c932d0000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:52</sys_updated_on>
<table/>
<target_name>db836e29dbb3db0076d6b94ffe961976</target_name>
<type>Scripted REST Query Parameter Associatio</type>
<update_domain>global</update_domain>
<update_guid>049200e817777300d14f77f3e56179a8</update_guid>
<update_guid_history>227abbd0b9777300544b2e624540a352:-1495798704,227abbd0b9777300544b2e624540a352:-1495798704,227abbd0b9777300544b2e624540a352:-1495798704,29ea9b3bc157a780173aa4aa04e4f4f4:-723219560,2c042e6975b3db0041940768d2d689ff:839152142</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_ws_version_0a3dcb2fdbebd300dfa9b94ffe9619c7</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ws_version"><sys_ws_version action="INSERT_OR_UPDATE"><active>true</active><deprecated>false</deprecated><is_default>true</is_default><short_description/><sys_class_name>sys_ws_version</sys_class_name><sys_created_by>b.moers</sys_created_by><sys_created_on>2018-08-02 10:00:07</sys_created_on><sys_id>0a3dcb2fdbebd300dfa9b94ffe9619c7</sys_id><sys_mod_count>1</sys_mod_count><sys_name>v1</sys_name><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_update_name>sys_ws_version_0a3dcb2fdbebd300dfa9b94ffe9619c7</sys_update_name><sys_updated_by>b.moers</sys_updated_by><sys_updated_on>2018-08-02 10:00:07</sys_updated_on><version>1</version><version_id>v1</version_id><web_service_definition display_value="CICD Integration">81eccb6fdbebd300dfa9b94ffe96190e</web_service_definition></sys_ws_version></record_update>]]></payload>
<payload_hash>551422132</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:52</sys_created_on>
<sys_id>905357b32f15b850d8455aab2799b6c0</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c912d0000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:52</sys_updated_on>
<table/>
<target_name>v1</target_name>
<type>Scripted REST Version</type>
<update_domain>global</update_domain>
<update_guid>0c9200e8697773001facda91dbdf57cb</update_guid>
<update_guid_history>267abbd09c7773007b706c47c332b232:551422132,267abbd09c7773007b706c47c332b232:551422132,267abbd09c7773007b706c47c332b232:551422132,ce3dc3af2aebd3000597668630379667:-702790228,ce3dcb2fa5ebd300cc34994ae65354c8:1178976877</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_ws_operation_b97f8befdbebd300dfa9b94ffe9619e8</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_ws_operation"&gt;&lt;sys_ws_operation action="INSERT_OR_UPDATE"&gt;&lt;active&gt;true&lt;/active&gt;&lt;consumes&gt;application/json,application/xml,text/xml&lt;/consumes&gt;&lt;consumes_customized&gt;false&lt;/consumes_customized&gt;&lt;default_operation_uri&gt;/api/devops/cicd/atf/suite/{suiteId}&lt;/default_operation_uri&gt;&lt;enforce_acl&gt;9041d7a3db2fd300dfa9b94ffe961910&lt;/enforce_acl&gt;&lt;http_method&gt;GET&lt;/http_method&gt;&lt;name&gt;ATF - Get Suite Results&lt;/name&gt;&lt;operation_script&gt;&lt;![CDATA[(function process(/*RESTAPIRequest*/ request, /*RESTAPIResponse*/ response) {

    return new CiCdAtf(request, response).getSuiteResultsDeep();

})(request, response);]]&gt;&lt;/operation_script&gt;&lt;operation_uri&gt;/api/devops/v1/cicd/atf/suite/{suiteId}&lt;/operation_uri&gt;&lt;produces&gt;application/json,application/xml,text/xml&lt;/produces&gt;&lt;produces_customized&gt;false&lt;/produces_customized&gt;&lt;relative_path&gt;/atf/suite/{suiteId}&lt;/relative_path&gt;&lt;request_example/&gt;&lt;requires_acl_authorization&gt;true&lt;/requires_acl_authorization&gt;&lt;requires_authentication&gt;true&lt;/requires_authentication&gt;&lt;requires_snc_internal_role&gt;true&lt;/requires_snc_internal_role&gt;&lt;short_description&gt;Get ATF suite results from remote&lt;/short_description&gt;&lt;sys_class_name&gt;sys_ws_operation&lt;/sys_class_name&gt;&lt;sys_created_by&gt;b.moers&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2018-08-02 10:09:55&lt;/sys_created_on&gt;&lt;sys_id&gt;b97f8befdbebd300dfa9b94ffe9619e8&lt;/sys_id&gt;&lt;sys_mod_count&gt;3&lt;/sys_mod_count&gt;&lt;sys_name&gt;ATF - Get Suite Results&lt;/sys_name&gt;&lt;sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e"&gt;19190fabdbebd300dfa9b94ffe96193e&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="CICD Integration"&gt;19190fabdbebd300dfa9b94ffe96193e&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_ws_operation_b97f8befdbebd300dfa9b94ffe9619e8&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-02-18 11:09:25&lt;/sys_updated_on&gt;&lt;web_service_definition display_value="CICD Integration"&gt;81eccb6fdbebd300dfa9b94ffe96190e&lt;/web_service_definition&gt;&lt;web_service_version display_value="v1"&gt;0a3dcb2fdbebd300dfa9b94ffe9619c7&lt;/web_service_version&gt;&lt;/sys_ws_operation&gt;&lt;/record_update&gt;</payload>
<payload_hash>1363403247</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:52</sys_created_on>
<sys_id>945357b32f15b850d8455aab2799b6b9</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2ca2ec0000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:52</sys_updated_on>
<table/>
<target_name>ATF - Get Suite Results</target_name>
<type>Scripted REST Resource</type>
<update_domain>global</update_domain>
<update_guid>263dbdd794de2854ff7b489b73f50aac</update_guid>
<update_guid_history>263dbdd794de2854ff7b489b73f50aac:1363403247,1a7abbd09977730033180da192193711:-493051677,1a7abbd09977730033180da192193711:-493051677,1a7abbd09977730033180da192193711:-493051677,d0ac13eb162fd3001a71f4fd17356e19:951306828,d0ac13eb162fd3001a71f4fd17356e19:951306828,62425fa30c2fd300099e8eb382f9dc1a:-1880924355,797f8bef02ebd300f73ac5198a1ae2e9:151718943</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_ws_query_parameter_map_1ce3ea69dbb3db0076d6b94ffe961950</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ws_query_parameter_map"><sys_ws_query_parameter_map action="INSERT_OR_UPDATE"><sys_class_name>sys_ws_query_parameter_map</sys_class_name><sys_created_by>b.moers</sys_created_by><sys_created_on>2018-08-08 12:07:26</sys_created_on><sys_id>1ce3ea69dbb3db0076d6b94ffe961950</sys_id><sys_mod_count>0</sys_mod_count><sys_name>f4636669dbb3db0076d6b94ffe961901</sys_name><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_update_name>sys_ws_query_parameter_map_1ce3ea69dbb3db0076d6b94ffe961950</sys_update_name><sys_updated_by>b.moers</sys_updated_by><sys_updated_on>2018-08-08 12:07:26</sys_updated_on><web_service_operation display_value="CI - Get UpdateSet Files">4f6a31a9db33db0076d6b94ffe9619fa</web_service_operation><web_service_query_parameter display_value="sysparm_query">f4636669dbb3db0076d6b94ffe961901</web_service_query_parameter></sys_ws_query_parameter_map></record_update>]]></payload>
<payload_hash>1535505839</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:52</sys_created_on>
<sys_id>945357b32f15b850d8455aab2799b6bc</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c93130000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:52</sys_updated_on>
<table/>
<target_name>f4636669dbb3db0076d6b94ffe961901</target_name>
<type>Scripted REST Query Parameter Associatio</type>
<update_domain>global</update_domain>
<update_guid>489200e8477773009d5cd71564d11aa2</update_guid>
<update_guid_history>ae7abbd06b77730092ad89a493c0793e:1535505839,ae7abbd06b77730092ad89a493c0793e:1535505839,ae7abbd06b77730092ad89a493c0793e:1535505839,6dea9b3b4f57a78093ff7df730cdbaef:-1275073881,b5e36e69c6b3db003e34845f05478f43:-1082208625</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_ws_query_parameter_map_dadc26b1dbffdb0076d6b94ffe9619d6</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ws_query_parameter_map"><sys_ws_query_parameter_map action="INSERT_OR_UPDATE"><sys_class_name>sys_ws_query_parameter_map</sys_class_name><sys_created_by>b.moers</sys_created_by><sys_created_on>2018-08-09 07:25:06</sys_created_on><sys_id>dadc26b1dbffdb0076d6b94ffe9619d6</sys_id><sys_mod_count>0</sys_mod_count><sys_name>12c846a5db73db0076d6b94ffe961917</sys_name><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_update_name>sys_ws_query_parameter_map_dadc26b1dbffdb0076d6b94ffe9619d6</sys_update_name><sys_updated_by>b.moers</sys_updated_by><sys_updated_on>2018-08-09 07:25:06</sys_updated_on><web_service_operation display_value="CI - Get Files from Table">f3cca2b1dbffdb0076d6b94ffe96191e</web_service_operation><web_service_query_parameter display_value="sysparm_limit">12c846a5db73db0076d6b94ffe961917</web_service_query_parameter></sys_ws_query_parameter_map></record_update>]]></payload>
<payload_hash>-381989514</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:52</sys_created_on>
<sys_id>945357b32f15b850d8455aab2799b6bf</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c94360000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:52</sys_updated_on>
<table/>
<target_name>12c846a5db73db0076d6b94ffe961917</target_name>
<type>Scripted REST Query Parameter Associatio</type>
<update_domain>global</update_domain>
<update_guid>c49200e84d777300ec11a3f3b86e42c5</update_guid>
<update_guid_history>2e7abbd0e2777300056f2561d92eaa65:-381989514,2e7abbd0e2777300056f2561d92eaa65:-381989514,2e7abbd0e2777300056f2561d92eaa65:-381989514,a9eadb3b0157a780e939b71c4a355f01:1965970942,3fdceeb122ffdb006654eab781f7f630:-2052293326</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_ws_operation_881f87efdbebd300dfa9b94ffe961978</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_ws_operation"&gt;&lt;sys_ws_operation action="INSERT_OR_UPDATE"&gt;&lt;active&gt;true&lt;/active&gt;&lt;consumes&gt;application/json,application/xml,text/xml&lt;/consumes&gt;&lt;consumes_customized&gt;false&lt;/consumes_customized&gt;&lt;default_operation_uri&gt;/api/devops/cicd/atf/suite&lt;/default_operation_uri&gt;&lt;enforce_acl&gt;9041d7a3db2fd300dfa9b94ffe961910&lt;/enforce_acl&gt;&lt;http_method&gt;POST&lt;/http_method&gt;&lt;name&gt;ATF - Run Suite&lt;/name&gt;&lt;operation_script&gt;&lt;![CDATA[(function process(/*RESTAPIRequest*/ request, /*RESTAPIResponse*/ response) {

    return new CiCdAtf(request, response).executeSuite();

})(request, response);]]&gt;&lt;/operation_script&gt;&lt;operation_uri&gt;/api/devops/v1/cicd/atf/suite&lt;/operation_uri&gt;&lt;produces&gt;application/json,application/xml,text/xml&lt;/produces&gt;&lt;produces_customized&gt;false&lt;/produces_customized&gt;&lt;relative_path&gt;/atf/suite&lt;/relative_path&gt;&lt;request_example/&gt;&lt;requires_acl_authorization&gt;true&lt;/requires_acl_authorization&gt;&lt;requires_authentication&gt;true&lt;/requires_authentication&gt;&lt;requires_snc_internal_role&gt;true&lt;/requires_snc_internal_role&gt;&lt;short_description&gt;Execute an ATF suite from remote&lt;/short_description&gt;&lt;sys_class_name&gt;sys_ws_operation&lt;/sys_class_name&gt;&lt;sys_created_by&gt;b.moers&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2018-08-02 10:08:10&lt;/sys_created_on&gt;&lt;sys_id&gt;881f87efdbebd300dfa9b94ffe961978&lt;/sys_id&gt;&lt;sys_mod_count&gt;3&lt;/sys_mod_count&gt;&lt;sys_name&gt;ATF - Run Suite&lt;/sys_name&gt;&lt;sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e"&gt;19190fabdbebd300dfa9b94ffe96193e&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="CICD Integration"&gt;19190fabdbebd300dfa9b94ffe96193e&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_ws_operation_881f87efdbebd300dfa9b94ffe961978&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;b.moers&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2018-08-02 11:07:40&lt;/sys_updated_on&gt;&lt;web_service_definition display_value="CICD Integration"&gt;81eccb6fdbebd300dfa9b94ffe96190e&lt;/web_service_definition&gt;&lt;web_service_version display_value="v1"&gt;0a3dcb2fdbebd300dfa9b94ffe9619c7&lt;/web_service_version&gt;&lt;/sys_ws_operation&gt;&lt;/record_update&gt;</payload>
<payload_hash>-475927032</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:52</sys_created_on>
<sys_id>985357b32f15b850d8455aab2799b6b8</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c91f10000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:52</sys_updated_on>
<table/>
<target_name>ATF - Run Suite</target_name>
<type>Scripted REST Resource</type>
<update_domain>global</update_domain>
<update_guid>889200e8b07773000dc3815851451883</update_guid>
<update_guid_history>127abbd0127773007d0f54306ef7d80b:-475927032,127abbd0127773007d0f54306ef7d80b:-475927032,127abbd0127773007d0f54306ef7d80b:-475927032,6bacdbe3582fd300465728e79214c77c:-1216300741,6bacdbe3582fd300465728e79214c77c:-1216300741,61625be37d2fd300123e2a6ce69867f8:268949996,a12f87ef88ebd300722091e3576b1e5e:-1156958738,481f87efc9ebd3000487d514719cbe79:1444893826</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_ws_query_parameter_map_10b3aa69dbb3db0076d6b94ffe961946</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ws_query_parameter_map"><sys_ws_query_parameter_map action="INSERT_OR_UPDATE"><sys_class_name>sys_ws_query_parameter_map</sys_class_name><sys_created_by>b.moers</sys_created_by><sys_created_on>2018-08-08 12:06:39</sys_created_on><sys_id>10b3aa69dbb3db0076d6b94ffe961946</sys_id><sys_mod_count>0</sys_mod_count><sys_name>8d336669dbb3db0076d6b94ffe96193e</sys_name><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_update_name>sys_ws_query_parameter_map_10b3aa69dbb3db0076d6b94ffe961946</sys_update_name><sys_updated_by>b.moers</sys_updated_by><sys_updated_on>2018-08-08 12:06:39</sys_updated_on><web_service_operation display_value="CI - Get UpdateSet Files">4f6a31a9db33db0076d6b94ffe9619fa</web_service_operation><web_service_query_parameter display_value="sysparm_fields">8d336669dbb3db0076d6b94ffe96193e</web_service_query_parameter></sys_ws_query_parameter_map></record_update>]]></payload>
<payload_hash>511250886</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:52</sys_created_on>
<sys_id>985357b32f15b850d8455aab2799b6bb</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c92fc0000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:52</sys_updated_on>
<table/>
<target_name>8d336669dbb3db0076d6b94ffe96193e</target_name>
<type>Scripted REST Query Parameter Associatio</type>
<update_domain>global</update_domain>
<update_guid>4c9200e82f7773009584957835d2f29c</update_guid>
<update_guid_history>a27abbd05e7773008f07752fc9c03638:511250886,a27abbd05e7773008f07752fc9c03638:511250886,a27abbd05e7773008f07752fc9c03638:511250886,e9ea9b3b8257a780417cf6a6fa800feb:1871068494,92b32a29c9b3db00b76ac9c5e5e519a5:821452106</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_ws_query_parameter_map_956de6f1dbffdb0076d6b94ffe9619db</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ws_query_parameter_map"><sys_ws_query_parameter_map action="INSERT_OR_UPDATE"><sys_class_name>sys_ws_query_parameter_map</sys_class_name><sys_created_by>b.moers</sys_created_by><sys_created_on>2018-08-09 07:27:33</sys_created_on><sys_id>956de6f1dbffdb0076d6b94ffe9619db</sys_id><sys_mod_count>0</sys_mod_count><sys_name>f4636669dbb3db0076d6b94ffe961901</sys_name><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_update_name>sys_ws_query_parameter_map_956de6f1dbffdb0076d6b94ffe9619db</sys_update_name><sys_updated_by>b.moers</sys_updated_by><sys_updated_on>2018-08-09 07:27:33</sys_updated_on><web_service_operation display_value="CI - Get Files from Table">f3cca2b1dbffdb0076d6b94ffe96191e</web_service_operation><web_service_query_parameter display_value="sysparm_query">f4636669dbb3db0076d6b94ffe961901</web_service_query_parameter></sys_ws_query_parameter_map></record_update>]]></payload>
<payload_hash>2091800933</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:52</sys_created_on>
<sys_id>985357b32f15b850d8455aab2799b6be</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c94ba0000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:52</sys_updated_on>
<table/>
<target_name>f4636669dbb3db0076d6b94ffe961901</target_name>
<type>Scripted REST Query Parameter Associatio</type>
<update_domain>global</update_domain>
<update_guid>089200e8f977730001b6d0c163da0bb3</update_guid>
<update_guid_history>267abbd0fe7773008fc8104a05f5e05f:2091800933,267abbd0fe7773008fc8104a05f5e05f:2091800933,267abbd0fe7773008fc8104a05f5e05f:2091800933,e5ea9b3bef57a780cb3b5fa7c177b6fd:863175533,a76d6ef1ebffdb003fc6a59e21696381:-1747936123</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_ws_operation_6637ca8fdb6737801af8b14ffe96195d</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_ws_operation"&gt;&lt;sys_ws_operation action="INSERT_OR_UPDATE"&gt;&lt;active&gt;true&lt;/active&gt;&lt;consumes&gt;application/json,application/xml,text/xml&lt;/consumes&gt;&lt;consumes_customized&gt;false&lt;/consumes_customized&gt;&lt;default_operation_uri&gt;/api/devops/cicd/version&lt;/default_operation_uri&gt;&lt;enforce_acl&gt;1a7833bddbb31f0076d6b94ffe961994&lt;/enforce_acl&gt;&lt;http_method&gt;GET&lt;/http_method&gt;&lt;name&gt;CI - Get Application Version&lt;/name&gt;&lt;operation_script&gt;&lt;![CDATA[(function process(/*RESTAPIRequest*/ request, /*RESTAPIResponse*/ response) {
	
	return new CiCdApi(request, response).getAppVersion();

})(request, response);]]&gt;&lt;/operation_script&gt;&lt;operation_uri&gt;/api/devops/v1/cicd/version&lt;/operation_uri&gt;&lt;produces&gt;application/json,application/xml,text/xml&lt;/produces&gt;&lt;produces_customized&gt;false&lt;/produces_customized&gt;&lt;relative_path&gt;/version&lt;/relative_path&gt;&lt;request_example/&gt;&lt;requires_acl_authorization&gt;true&lt;/requires_acl_authorization&gt;&lt;requires_authentication&gt;true&lt;/requires_authentication&gt;&lt;requires_snc_internal_role&gt;true&lt;/requires_snc_internal_role&gt;&lt;short_description&gt;Get all XML records of an UpdateSet&lt;/short_description&gt;&lt;sys_class_name&gt;sys_ws_operation&lt;/sys_class_name&gt;&lt;sys_created_by&gt;b.moers&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2019-09-02 07:59:40&lt;/sys_created_on&gt;&lt;sys_id&gt;6637ca8fdb6737801af8b14ffe96195d&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_name&gt;CI - Get Application Version&lt;/sys_name&gt;&lt;sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e"&gt;19190fabdbebd300dfa9b94ffe96193e&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="CICD Integration"&gt;19190fabdbebd300dfa9b94ffe96193e&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_ws_operation_6637ca8fdb6737801af8b14ffe96195d&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;b.moers&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2019-09-02 07:59:40&lt;/sys_updated_on&gt;&lt;web_service_definition display_value="CICD Integration"&gt;81eccb6fdbebd300dfa9b94ffe96190e&lt;/web_service_definition&gt;&lt;web_service_version display_value="v1"&gt;0a3dcb2fdbebd300dfa9b94ffe9619c7&lt;/web_service_version&gt;&lt;/sys_ws_operation&gt;&lt;/record_update&gt;</payload>
<payload_hash>-939646191</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:52</sys_created_on>
<sys_id>9c5357b32f15b850d8455aab2799b6b7</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c9ddb0000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:52</sys_updated_on>
<table/>
<target_name>CI - Get Application Version</target_name>
<type>Scripted REST Resource</type>
<update_domain>global</update_domain>
<update_guid>ea37ca8fd767378033cf37acca1eae5e</update_guid>
<update_guid_history>ea37ca8fd767378033cf37acca1eae5e:2066219161,ea37ca8fd767378033cf37acca1eae5e:2066219161,1a7abbd0627773003ce04b23a97df704:-939646191,ea37ca8fd767378033cf37acca1eae5e:2066219161</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_ws_query_parameter_8d736e29dbb3db0076d6b94ffe961989</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ws_query_parameter"><sys_ws_query_parameter action="INSERT_OR_UPDATE"><example_value>all</example_value><name>sysparm_display_value</name><required>false</required><short_description>Return field display values (true), actual values (false), or both (all) [false]</short_description><sys_class_name>sys_ws_query_parameter</sys_class_name><sys_created_by>b.moers</sys_created_by><sys_created_on>2018-08-08 12:05:29</sys_created_on><sys_id>8d736e29dbb3db0076d6b94ffe961989</sys_id><sys_mod_count>1</sys_mod_count><sys_name>sysparm_display_value</sys_name><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_update_name>sys_ws_query_parameter_8d736e29dbb3db0076d6b94ffe961989</sys_update_name><sys_updated_by>b.moers</sys_updated_by><sys_updated_on>2018-08-09 07:13:44</sys_updated_on><web_service_definition display_value="CICD Integration">81eccb6fdbebd300dfa9b94ffe96190e</web_service_definition></sys_ws_query_parameter></record_update>]]></payload>
<payload_hash>1669021649</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:52</sys_created_on>
<sys_id>9c5357b32f15b850d8455aab2799b6ba</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c93820000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:52</sys_updated_on>
<table/>
<target_name>sysparm_display_value</target_name>
<type>Scripted REST Query Parameter</type>
<update_domain>global</update_domain>
<update_guid>c89200e8e2777300496a3c03b67aa996</update_guid>
<update_guid_history>ba7abbd0727773002423193edb511996:1669021649,ba7abbd0727773002423193edb511996:1669021649,ba7abbd0727773002423193edb511996:1669021649,954aaa3109ffdb004918ef98a0bee845:-1746206567,0d736e2975b3db002dfc6b1a9976578a:65187210</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_ws_query_parameter_map_675da6f1dbffdb0076d6b94ffe96197c</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ws_query_parameter_map"><sys_ws_query_parameter_map action="INSERT_OR_UPDATE"><sys_class_name>sys_ws_query_parameter_map</sys_class_name><sys_created_by>b.moers</sys_created_by><sys_created_on>2018-08-09 07:27:22</sys_created_on><sys_id>675da6f1dbffdb0076d6b94ffe96197c</sys_id><sys_mod_count>0</sys_mod_count><sys_name>8d336669dbb3db0076d6b94ffe96193e</sys_name><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_update_name>sys_ws_query_parameter_map_675da6f1dbffdb0076d6b94ffe96197c</sys_update_name><sys_updated_by>b.moers</sys_updated_by><sys_updated_on>2018-08-09 07:27:22</sys_updated_on><web_service_operation display_value="CI - Get Files from Table">f3cca2b1dbffdb0076d6b94ffe96191e</web_service_operation><web_service_query_parameter display_value="sysparm_fields">8d336669dbb3db0076d6b94ffe96193e</web_service_query_parameter></sys_ws_query_parameter_map></record_update>]]></payload>
<payload_hash>1794145972</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:52</sys_created_on>
<sys_id>9c5357b32f15b850d8455aab2799b6bd</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c94a20000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:52</sys_updated_on>
<table/>
<target_name>8d336669dbb3db0076d6b94ffe96193e</target_name>
<type>Scripted REST Query Parameter Associatio</type>
<update_domain>global</update_domain>
<update_guid>8c9200e8a0777300d2ccf85c7fcc8bad</update_guid>
<update_guid_history>aa7abbd0147773002a563f358353bc58:1794145972,aa7abbd0147773002a563f358353bc58:1794145972,aa7abbd0147773002a563f358353bc58:1794145972,6dea9b3b9d57a7805af42fbe3d901ef8:998818860,b86d66f170ffdb00949de05affd67191:-1474518096</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_properties_category_m2m_c0c71ab6dbdaa7c076d6b94ffe9619e5</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_properties_category_m2m"><sys_properties_category_m2m action="INSERT_OR_UPDATE"><category display_value="CICD Integration">8d1de113dbb86380432cfc600f9619f6</category><order>500</order><property display_value="cicd-integration.pull-request-proxy.enabled" name="cicd-integration.pull-request-proxy.enabled">6cb7d2f6dbdaa7c076d6b94ffe9619b9</property><sys_class_name>sys_properties_category_m2m</sys_class_name><sys_created_by>b.moers</sys_created_by><sys_created_on>2018-12-14 15:03:44</sys_created_on><sys_id>c0c71ab6dbdaa7c076d6b94ffe9619e5</sys_id><sys_mod_count>1</sys_mod_count><sys_name>cicd-integration.pull-request-proxy.enabled.CICD Integration</sys_name><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_update_name>sys_properties_category_m2m_c0c71ab6dbdaa7c076d6b94ffe9619e5</sys_update_name><sys_updated_by>b.moers</sys_updated_by><sys_updated_on>2018-12-14 15:03:57</sys_updated_on></sys_properties_category_m2m></record_update>]]></payload>
<payload_hash>-452362580</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:51</sys_created_on>
<sys_id>c05357b32f15b850d8455aab2799b6a9</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c99470000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:51</sys_updated_on>
<table/>
<target_name>cicd-integration.pull-request-proxy.enabled.CICD Integration</target_name>
<type>Category Property</type>
<update_domain>global</update_domain>
<update_guid>af82cca8df777300268a9eab668609dd</update_guid>
<update_guid_history>ea7abbd0d77773004edccd01208fb82e:-452362580,ea7abbd0d77773004edccd01208fb82e:-452362580,ea7abbd0d77773004edccd01208fb82e:-452362580,ebc7d63a2edaa7c00c541f028f67eee8:1943250788,48c71a3a67daa7c07324e117c0747256:-1356052128</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_script_client_c4c870d1dbcf9410fcf41780399619dc</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update sys_domain="global" table="sys_script_client"&gt;&lt;sys_script_client action="INSERT_OR_UPDATE"&gt;&lt;active&gt;true&lt;/active&gt;&lt;applies_extended&gt;true&lt;/applies_extended&gt;&lt;condition/&gt;&lt;description/&gt;&lt;field&gt;scope&lt;/field&gt;&lt;global&gt;true&lt;/global&gt;&lt;isolate_script&gt;true&lt;/isolate_script&gt;&lt;messages/&gt;&lt;name&gt;[CICD] Prefill 'repository' from Scope&lt;/name&gt;&lt;order/&gt;&lt;script&gt;&lt;![CDATA[/**
 * On App creation, populate the repository field based on the app name
 * 
 * @param {any} control
 * @param {any} oldValue
 * @param {any} newValue
 * @param {any} isLoading
 * @param {any} isTemplate
 * @author System Administrator [admin]
 * @memberof global.module:sys_script_client
 * @returns {undefined}
 */
function onChange(control, oldValue, newValue, isLoading, isTemplate) {
	if (isLoading || !g_form.isNewRecord()) {
		return;
	}
	// exit if no settings defined
	if(!g_scratchpad.settings)
		return;
	if(!g_scratchpad.settings.cicdEnabled)
		return;
	
    var repoFieldName = 'u_repository';
    
    if(!g_form.hasField(repoFieldName))
        return;

	if(g_scratchpad.settings.showRepositoryField){
		var sope = newValue.trim();
		var name = g_form.getValue('name').trim();
		
		var sanitize = function(str){
			return str.toLowerCase().replace(/[^\w]/g, ' ').replace(/\s+/g, '_').replace(/^_+|_+$/g, '');
		};
		
		if(!sope || 'global' == sope){
			g_form.setValue("u_repository", sanitize(name));
			g_form.setMandatory(repoFieldName, true);
		} else {
			g_form.setValue("u_repository", sanitize(sope));
			g_form.setMandatory(repoFieldName, false);
		}
		
	}
}]]&gt;&lt;/script&gt;&lt;sys_class_name&gt;sys_script_client&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2020-09-03 11:38:20&lt;/sys_created_on&gt;&lt;sys_domain&gt;global&lt;/sys_domain&gt;&lt;sys_domain_path&gt;/&lt;/sys_domain_path&gt;&lt;sys_id&gt;c4c870d1dbcf9410fcf41780399619dc&lt;/sys_id&gt;&lt;sys_mod_count&gt;8&lt;/sys_mod_count&gt;&lt;sys_name&gt;[CICD] Prefill 'repository' from Scope&lt;/sys_name&gt;&lt;sys_overrides/&gt;&lt;sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e"&gt;19190fabdbebd300dfa9b94ffe96193e&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="CICD Integration"&gt;19190fabdbebd300dfa9b94ffe96193e&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_script_client_c4c870d1dbcf9410fcf41780399619dc&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2020-10-21 08:48:59&lt;/sys_updated_on&gt;&lt;table&gt;sys_scope&lt;/table&gt;&lt;type&gt;onChange&lt;/type&gt;&lt;ui_type&gt;0&lt;/ui_type&gt;&lt;view/&gt;&lt;/sys_script_client&gt;&lt;/record_update&gt;</payload>
<payload_hash>1078249803</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:51</sys_created_on>
<sys_id>c05357b32f15b850d8455aab2799b6ac</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2ca0220000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:51</sys_updated_on>
<table>sys_scope</table>
<target_name>[CICD] Prefill 'repository' from Scope</target_name>
<type>Client Script</type>
<update_domain>global</update_domain>
<update_guid>a34ed7e89044e45063deb453235d5aeb</update_guid>
<update_guid_history>a34ed7e89044e45063deb453235d5aeb:1078249803,1600d8ecb10ca45034eaaa82d1a5eeba:-1845787184,e72e389558cf94104464f9f4639cf47b:-1938980192,30edf0953dcf941040e9fbc1da3bdaf3:-1468630059,602c3815cbcf941093c00ab7b25b25dd:-205694740,015b3055cecf9410dd84d32ce839bf12:92202412,4c2bbc1569cf9410eb380eb52ca1f65e:1675589841,67baf051e9cf94109d8933fc835535c4:2058678807,04c870d103cf9410ca51e3aebdfcb6de:436211410</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_security_acl_role_ace153e3db2fd300dfa9b94ffe9619df</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_security_acl_role"><sys_security_acl_role action="INSERT_OR_UPDATE"><sys_class_name>sys_security_acl_role</sys_class_name><sys_created_by>b.moers</sys_created_by><sys_created_on>2018-08-02 10:21:02</sys_created_on><sys_id>ace153e3db2fd300dfa9b94ffe9619df</sys_id><sys_mod_count>0</sys_mod_count><sys_name>/api/devops/cicd/atf.atf_ws_designer</sys_name><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_security_acl display_value="/api/devops/cicd/atf">9041d7a3db2fd300dfa9b94ffe961910</sys_security_acl><sys_update_name>sys_security_acl_role_ace153e3db2fd300dfa9b94ffe9619df</sys_update_name><sys_updated_by>b.moers</sys_updated_by><sys_updated_on>2018-08-02 10:21:02</sys_updated_on><sys_user_role display_value="atf_ws_designer" name="atf_ws_designer">0a8d7f9e3b8032000774229c93efc41e</sys_user_role><transaction_id/></sys_security_acl_role></record_update>]]></payload>
<payload_hash>-62855871</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:51</sys_created_on>
<sys_id>c05357b32f15b850d8455aab2799b6af</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c91810000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:51</sys_updated_on>
<table>/api/devops/cicd/atf</table>
<target_name>/api/devops/cicd/atf.atf_ws_designer</target_name>
<type>Access Roles</type>
<update_domain>global</update_domain>
<update_guid>7f8200e840777300c15c92946ed0df40</update_guid>
<update_guid_history>877abbd0357773006dd06390422826d6:-62855871,877abbd0357773006dd06390422826d6:-62855871,877abbd0357773006dd06390422826d6:-62855871,a8025fa3e92fd30004a4ff8e295fb231:-141258999</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_ui_form_sections_2e56e0cddbc02850fcf4178039961994</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update><sys_ui_form_sections form_id="2e56e0cddbc02850fcf4178039961994" sys_domain="global" table="sys_store_app" version="3"><sys_ui_form_section action="INSERT_OR_UPDATE"><position>0</position><sys_created_by>admin</sys_created_by><sys_created_on>2020-10-22 08:42:16</sys_created_on><sys_domain>global</sys_domain><sys_domain_path>/</sys_domain_path><sys_id>ee56e0cddbc02850fcf4178039961996</sys_id><sys_mod_count>0</sys_mod_count><sys_overrides/><sys_ui_form display_value="sys_store_app" name="sys_store_app" sys_domain="global" view="fb54604ddbc02850fcf4178039961920">2e56e0cddbc02850fcf4178039961994</sys_ui_form><sys_ui_section caption="NULL" display_value="" name="sys_store_app" sys_domain="global" view="fb54604ddbc02850fcf4178039961920">2ec5a88ddbc02850fcf41780399619a2</sys_ui_section><sys_updated_by>admin</sys_updated_by><sys_updated_on>2020-10-22 08:42:16</sys_updated_on></sys_ui_form_section><sys_ui_form_section action="INSERT_OR_UPDATE"><position>1</position><sys_created_by>admin</sys_created_by><sys_created_on>2020-10-22 08:42:16</sys_created_on><sys_domain>global</sys_domain><sys_domain_path>/</sys_domain_path><sys_id>ae56e0cddbc02850fcf4178039961997</sys_id><sys_mod_count>0</sys_mod_count><sys_overrides/><sys_ui_form display_value="sys_store_app" name="sys_store_app" sys_domain="global" view="fb54604ddbc02850fcf4178039961920">2e56e0cddbc02850fcf4178039961994</sys_ui_form><sys_ui_section caption="CI/CD Settings" display_value="CI/CD Settings" name="sys_store_app" sys_domain="global" view="fb54604ddbc02850fcf4178039961920">2256e0cddbc02850fcf4178039961994</sys_ui_section><sys_updated_by>admin</sys_updated_by><sys_updated_on>2020-10-22 08:42:16</sys_updated_on></sys_ui_form_section><sys_ui_form action="INSERT_OR_UPDATE"><name>sys_store_app</name><roles/><sys_class_name>sys_ui_form</sys_class_name><sys_created_by>admin</sys_created_by><sys_created_on>2020-10-22 08:42:15</sys_created_on><sys_domain>global</sys_domain><sys_domain_path>/</sys_domain_path><sys_id>2e56e0cddbc02850fcf4178039961994</sys_id><sys_mod_count>1</sys_mod_count><sys_name>sys_store_app</sys_name><sys_overrides/><sys_package display_value="Global" source="global">global</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_update_name>sys_ui_form_sections_2e56e0cddbc02850fcf4178039961994</sys_update_name><sys_updated_by>admin</sys_updated_by><sys_updated_on>2020-10-22 08:45:34</sys_updated_on><sys_user/><view display_value="CICD" name="CICD">fb54604ddbc02850fcf4178039961920</view><view_name/></sys_ui_form></sys_ui_form_sections></record_update>]]></payload>
<payload_hash>1899682038</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:51</sys_created_on>
<sys_id>c05357b32f15b850d8455aab2799b6b2</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2ca11f0000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:51</sys_updated_on>
<table>sys_store_app</table>
<target_name>Store Application</target_name>
<type>Form Sections</type>
<update_domain>global</update_domain>
<update_guid>43172001ea0428504718e3e3a198b1f0</update_guid>
<update_guid_history>43172001ea0428504718e3e3a198b1f0:1439743798,43172001ea0428504718e3e3a198b1f0:1439743798,a656e0cd74c02850d4f6585e81ad5399:1007831703,6e56e0cd85c02850921ec2104d51e495:-250003170</update_guid_history>
<update_set display_value=""/>
<view>fb54604ddbc02850fcf4178039961920</view>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_web_service_f8a412c0db8c0cd09775f6700f961932</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_web_service"&gt;&lt;sys_web_service action="INSERT_OR_UPDATE"&gt;&lt;active&gt;true&lt;/active&gt;&lt;function_name&gt;*&lt;/function_name&gt;&lt;name&gt;api/devops/cicd/source/sys_scope&lt;/name&gt;&lt;scoped_name&gt;api/devops/cicd/source/sys_scope&lt;/scoped_name&gt;&lt;script&gt;&lt;![CDATA[(function scriptedWebServiceOperation(request, response) {
	
	return new CiCdSource().sysScopeSoapWebService(this.soapRequestXML, response);

})(request, response);]]&gt;&lt;/script&gt;&lt;short_description&gt;getKeys, getRecords&lt;/short_description&gt;&lt;sys_class_name&gt;sys_web_service&lt;/sys_class_name&gt;&lt;sys_created_by&gt;b.moers&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2019-09-17 21:47:52&lt;/sys_created_on&gt;&lt;sys_id&gt;f8a412c0db8c0cd09775f6700f961932&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_name&gt;api/devops/cicd/source/sys_scope&lt;/sys_name&gt;&lt;sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e"&gt;19190fabdbebd300dfa9b94ffe96193e&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="CICD Integration"&gt;19190fabdbebd300dfa9b94ffe96193e&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_web_service_f8a412c0db8c0cd09775f6700f961932&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;b.moers&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2019-09-17 21:47:52&lt;/sys_updated_on&gt;&lt;wsdl&gt;https://dev65672.service-now.com/api/devops/cicd/source/sys_scope.do?WSDL&lt;/wsdl&gt;&lt;wsdl_compliance&gt;false&lt;/wsdl_compliance&gt;&lt;/sys_web_service&gt;&lt;/record_update&gt;</payload>
<payload_hash>2046820749</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:52</sys_created_on>
<sys_id>c05357b32f15b850d8455aab2799b6b6</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c9e190000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:52</sys_updated_on>
<table/>
<target_name>api/devops/cicd/source/sys_scope</target_name>
<type>Scripted Web Service</type>
<update_domain>global</update_domain>
<update_guid>7ca412c03e8c0cd0e84aef739e523933</update_guid>
<update_guid_history>7ca412c03e8c0cd0e84aef739e523933:-296665107,7ca412c03e8c0cd0e84aef739e523933:-296665107</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_processor_55ff3097db6d2b00323efc600f961959</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_processor"&gt;&lt;sys_processor action="INSERT_OR_UPDATE"&gt;&lt;active&gt;true&lt;/active&gt;&lt;class_name/&gt;&lt;description/&gt;&lt;interactive&gt;false&lt;/interactive&gt;&lt;name&gt;CiCdExportBaseUpdateSet&lt;/name&gt;&lt;parameters/&gt;&lt;params_endpoint/&gt;&lt;path&gt;cicd_export_base_update_set&lt;/path&gt;&lt;path_endpoint/&gt;&lt;require_csrf&gt;false&lt;/require_csrf&gt;&lt;roles/&gt;&lt;script&gt;&lt;![CDATA[(function process(g_request, g_response, g_processor) {
	
	var CustomExporter = Class.create();
	CustomExporter.prototype = Object.extendsObject(ExportWithRelatedLists, {
		exportRecord: function (record) {
			record = new GlideScriptRecordUtil.get(record).getRealRecord();
			var recordSerializer = new GlideRecordXMLSerializer();
			//recordSerializer.setApplySecurity(true);
			recordSerializer.serialize(record, this.hd, new Packages.java.lang.String('INSERT_OR_UPDATE'));
			if (this.includeAttachments &amp;&amp; record.getTableName().substring(0, 14) != "sys_attachment") {
				this.exportAttachments(record);
			}
		}
	});
	
	var sysid = g_request.getParameter('sysparm_sys_id');
	var exporter = new CustomExporter('sys_remote_update_set', sysid);
	exporter.addRelatedList('sys_remote_update_set', 'remote_base_update_set');
	exporter.addRelatedList('sys_update_xml', 'remote_update_set.remote_base_update_set');
	
	exporter.exportRecords(g_response);
	
	var del = g_request.getParameter('sysparm_delete_when_done');
	if (del == "true") {
		var ugr = new GlideRecord("sys_remote_update_set");
		ugr.addQuery("remote_base_update_set", sysid);
		ugr.query();
		while (ugr.next()) {
			ugr.deleteRecord();
		}
	}
	
})(g_request, g_response, g_processor);]]&gt;&lt;/script&gt;&lt;sys_class_name&gt;sys_processor&lt;/sys_class_name&gt;&lt;sys_created_by&gt;b.moers&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2018-11-08 15:10:01&lt;/sys_created_on&gt;&lt;sys_id&gt;55ff3097db6d2b00323efc600f961959&lt;/sys_id&gt;&lt;sys_mod_count&gt;1&lt;/sys_mod_count&gt;&lt;sys_name&gt;CiCdExportBaseUpdateSet&lt;/sys_name&gt;&lt;sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e"&gt;19190fabdbebd300dfa9b94ffe96193e&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="CICD Integration"&gt;19190fabdbebd300dfa9b94ffe96193e&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_processor_55ff3097db6d2b00323efc600f961959&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;b.moers&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2018-11-08 15:22:06&lt;/sys_updated_on&gt;&lt;type&gt;script&lt;/type&gt;&lt;/sys_processor&gt;&lt;/record_update&gt;</payload>
<payload_hash>1784665683</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:51</sys_created_on>
<sys_id>c0539f732f15b850d8455aab2799b61b</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c97a10000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:51</sys_updated_on>
<table/>
<target_name>CiCdExportBaseUpdateSet</target_name>
<type>Processor</type>
<update_domain>global</update_domain>
<update_guid>a382cca86f777300fcb44dd887f608bd</update_guid>
<update_guid_history>b27abbd0fc777300621ffef951d5b3cf:1784665683,b27abbd0fc777300621ffef951d5b3cf:1784665683,b27abbd0fc777300621ffef951d5b3cf:1784665683,96b2c51bbd6d2b00072bce06fe0101c0:1915172763,d1ff3097596d2b0042ab35b14c5a995a:-718106597</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_properties_category_8d1de113dbb86380432cfc600f9619f6</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_properties_category"><sys_properties_category action="INSERT_OR_UPDATE"><name>CICD Integration</name><sys_class_name>sys_properties_category</sys_class_name><sys_created_by>b.moers</sys_created_by><sys_created_on>2018-10-02 11:40:35</sys_created_on><sys_id>8d1de113dbb86380432cfc600f9619f6</sys_id><sys_mod_count>2</sys_mod_count><sys_name>CICD Integration</sys_name><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_update_name>sys_properties_category_8d1de113dbb86380432cfc600f9619f6</sys_update_name><sys_updated_by>b.moers</sys_updated_by><sys_updated_on>2018-11-09 16:10:23</sys_updated_on><title/></sys_properties_category><sys_translated_text action="delete_multiple" query="documentkey=8d1de113dbb86380432cfc600f9619f6"/></record_update>]]></payload>
<payload_hash>1723813038</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:51</sys_created_on>
<sys_id>c0539f732f15b850d8455aab2799b61e</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c97eb0000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:51</sys_updated_on>
<table/>
<target_name>CICD Integration</target_name>
<type>System Property Category</type>
<update_domain>global</update_domain>
<update_guid>6382cca8d57773000ca088bddaa568cb</update_guid>
<update_guid_history>037abbd09e777300aa475be34700fce3:1723813038,037abbd09e777300aa475be34700fce3:1723813038,037abbd09e777300aa475be34700fce3:1723813038,9357122f59656b00f77c656b11ec1228:55941862,2887fb67e934e3803e4bb097a2fba8ae:422114969,283da5176c386380d880160ccba52c2f:55941862</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_properties_category_m2m_a00acfaadb7be7409775f6700f9619b3</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_properties_category_m2m"><sys_properties_category_m2m action="INSERT_OR_UPDATE"><category display_value="CICD Integration">8d1de113dbb86380432cfc600f9619f6</category><order>20</order><property display_value="cicd-integration.enabled.on-update-set" name="cicd-integration.enabled.on-update-set">ddf983a6db7be7409775f6700f961912</property><sys_class_name>sys_properties_category_m2m</sys_class_name><sys_created_by>b.moers</sys_created_by><sys_created_on>2019-02-26 13:39:00</sys_created_on><sys_id>a00acfaadb7be7409775f6700f9619b3</sys_id><sys_mod_count>1</sys_mod_count><sys_name>cicd-integration.enabled.on-update-set.CICD Integration</sys_name><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_update_name>sys_properties_category_m2m_a00acfaadb7be7409775f6700f9619b3</sys_update_name><sys_updated_by>b.moers</sys_updated_by><sys_updated_on>2019-02-26 13:43:26</sys_updated_on></sys_properties_category_m2m></record_update>]]></payload>
<payload_hash>-2145591191</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:51</sys_created_on>
<sys_id>c45357b32f15b850d8455aab2799b6a8</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c9bb30000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:51</sys_updated_on>
<table/>
<target_name>cicd-integration.enabled.on-update-set.CICD Integration</target_name>
<type>Category Property</type>
<update_domain>global</update_domain>
<update_guid>ab82cca80c777300d3c935c651dfe8d9</update_guid>
<update_guid_history>2e7abbd03977730045640e2dbb966c29:-2145591191,2e7abbd03977730045640e2dbb966c29:-2145591191,2e7abbd03977730045640e2dbb966c29:-2145591191,190bc72ed07be740767b0f874535ac61:-1707656863,e40acfaafe7be74095bc99d9b31dbbb5:-916603746</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_script_76fd0722dbbbe7409775f6700f9619e3</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update sys_domain="global" table="sys_script"&gt;&lt;sys_script action="INSERT_OR_UPDATE"&gt;&lt;abort_action&gt;false&lt;/abort_action&gt;&lt;access&gt;package_private&lt;/access&gt;&lt;action_delete&gt;false&lt;/action_delete&gt;&lt;action_insert&gt;false&lt;/action_insert&gt;&lt;action_query&gt;false&lt;/action_query&gt;&lt;action_update&gt;true&lt;/action_update&gt;&lt;active&gt;true&lt;/active&gt;&lt;add_message&gt;false&lt;/add_message&gt;&lt;advanced&gt;true&lt;/advanced&gt;&lt;change_fields&gt;false&lt;/change_fields&gt;&lt;client_callable&gt;false&lt;/client_callable&gt;&lt;collection&gt;sys_update_set&lt;/collection&gt;&lt;condition/&gt;&lt;description/&gt;&lt;execute_function&gt;false&lt;/execute_function&gt;&lt;filter_condition/&gt;&lt;is_rest&gt;false&lt;/is_rest&gt;&lt;message/&gt;&lt;name&gt;[CICD] Check state changes and run CICD&lt;/name&gt;&lt;order&gt;10&lt;/order&gt;&lt;priority&gt;100&lt;/priority&gt;&lt;rest_method/&gt;&lt;rest_method_text/&gt;&lt;rest_service/&gt;&lt;rest_service_text/&gt;&lt;rest_variables/&gt;&lt;role_conditions/&gt;&lt;script&gt;&lt;![CDATA[(function executeRule(current, previous /*null when async*/) {
	
	new CiCdRun().sys_update_set_Before_IU(current, previous);
	
})(current, previous);]]&gt;&lt;/script&gt;&lt;sys_class_name&gt;sys_script&lt;/sys_class_name&gt;&lt;sys_created_by&gt;b.moers&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2019-02-26 13:58:55&lt;/sys_created_on&gt;&lt;sys_domain&gt;global&lt;/sys_domain&gt;&lt;sys_domain_path&gt;/&lt;/sys_domain_path&gt;&lt;sys_id&gt;76fd0722dbbbe7409775f6700f9619e3&lt;/sys_id&gt;&lt;sys_mod_count&gt;4&lt;/sys_mod_count&gt;&lt;sys_name&gt;[CICD] Check state changes and run CICD&lt;/sys_name&gt;&lt;sys_overrides/&gt;&lt;sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e"&gt;19190fabdbebd300dfa9b94ffe96193e&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="CICD Integration"&gt;19190fabdbebd300dfa9b94ffe96193e&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_script_76fd0722dbbbe7409775f6700f9619e3&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;b.moers&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2019-08-30 14:33:53&lt;/sys_updated_on&gt;&lt;template/&gt;&lt;when&gt;before&lt;/when&gt;&lt;/sys_script&gt;&lt;sys_translated_text action="delete_multiple" query="documentkey=76fd0722dbbbe7409775f6700f9619e3"/&gt;&lt;/record_update&gt;</payload>
<payload_hash>505114092</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:51</sys_created_on>
<sys_id>c45357b32f15b850d8455aab2799b6ab</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c9db50000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:51</sys_updated_on>
<table>sys_update_set</table>
<target_name>[CICD] Check state changes and run CICD</target_name>
<type>Business Rule</type>
<update_domain>global</update_domain>
<update_guid>00b4cc5e12a33380ef57e5df4740596a</update_guid>
<update_guid_history>00b4cc5e12a33380ef57e5df4740596a:-1667923142,00b4cc5e12a33380ef57e5df4740596a:-1667923142,7e7abbd075777300b6dd58f8090cbbc9:505114092,00b4cc5e12a33380ef57e5df4740596a:-1667923142,dccf8da5ac27ff40d60b158af309366b:566023238,a4e90d2927e37f04a3fea23eeb019871:1488791632,38183c6590e3ff40ca5f0c7601b959ea:1965782833,78183c65d7e3ff401e50cb8b09ba9de7:-286709437,7e92dfe2dbbbe7401bc14c6ac5e7afca:-286709437,d49ec72245bbe7403d13043f8cf3786d:-394153599</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_security_acl_bc014d97db6d2b00323efc600f961936</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_security_acl"><sys_security_acl action="INSERT_OR_UPDATE"><active>true</active><admin_overrides>true</admin_overrides><advanced>false</advanced><condition/><description/><name>CiCdExportUpdateSet</name><operation display_value="execute">execute</operation><script/><sys_class_name>sys_security_acl</sys_class_name><sys_created_by>b.moers</sys_created_by><sys_created_on>2018-11-08 15:15:24</sys_created_on><sys_id>bc014d97db6d2b00323efc600f961936</sys_id><sys_mod_count>1</sys_mod_count><sys_name>CiCdExportUpdateSet</sys_name><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_update_name>sys_security_acl_bc014d97db6d2b00323efc600f961936</sys_update_name><sys_updated_by>b.moers</sys_updated_by><sys_updated_on>2018-11-08 15:18:46</sys_updated_on><type display_value="processor">processor</type></sys_security_acl></record_update>]]></payload>
<payload_hash>1387286816</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:51</sys_created_on>
<sys_id>c45357b32f15b850d8455aab2799b6ae</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c973c0000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:51</sys_updated_on>
<table>CiCdExportUpdateSet</table>
<target_name>CiCdExportUpdateSet</target_name>
<type>Access Control</type>
<update_domain>global</update_domain>
<update_guid>fb8200e8ae777300f430c80926ddfd36</update_guid>
<update_guid_history>327abbd04c7773008b5f8fb989986dc1:1387286816,327abbd04c7773008b5f8fb989986dc1:1387286816,327abbd04c7773008b5f8fb989986dc1:1387286816,55f189d70e6d2b006c7162b7f12c5957:427851278,0c31cd97b86d2b00a536ff8d2ab6795f:398062064</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_ui_action_view_b0eaa774dbe73f409775f6700f96195f</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ui_action_view"><sys_ui_action_view action="INSERT_OR_UPDATE"><sys_class_name>sys_ui_action_view</sys_class_name><sys_created_by>b.moers</sys_created_by><sys_created_on>2019-08-26 15:28:45</sys_created_on><sys_id>b0eaa774dbe73f409775f6700f96195f</sys_id><sys_mod_count>1</sys_mod_count><sys_name>Delete.CICD Preview</sys_name><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_ui_action display_value="Delete">57dc4c970a0a0b3400f8f0538d3faf94</sys_ui_action><sys_ui_view display_value="CICD Preview" name="cicd_preview">cdb37233db9f3f408fb6f6700f96191a</sys_ui_view><sys_update_name>sys_ui_action_view_b0eaa774dbe73f409775f6700f96195f</sys_update_name><sys_updated_by>b.moers</sys_updated_by><sys_updated_on>2019-08-26 15:28:59</sys_updated_on><visibility>exclude</visibility></sys_ui_action_view></record_update>]]></payload>
<payload_hash>2079829576</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:51</sys_created_on>
<sys_id>c45357b32f15b850d8455aab2799b6b1</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c9cf50000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:51</sys_updated_on>
<table/>
<target_name>exclude</target_name>
<type>UI View Action</type>
<update_domain>global</update_domain>
<update_guid>94faafb062e73f4038dece253834cb6d</update_guid>
<update_guid_history>94faafb062e73f4038dece253834cb6d:-1453656560,94faafb062e73f4038dece253834cb6d:-1453656560,be7abbd0fc777300a05913cc411fe1a2:2079829576,94faafb062e73f4038dece253834cb6d:-1453656560,fceaa77472e73f40e3477b4a41baf260:864804190</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_user_role_dd194b2bdbebd300dfa9b94ffe96194f</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_user_role"><sys_user_role action="INSERT_OR_UPDATE"><assignable_by/><can_delegate>false</can_delegate><description/><elevated_privilege>false</elevated_privilege><grantable>true</grantable><includes_roles/><name>cicd_integration_user</name><requires_subscription>-1</requires_subscription><scoped_admin>false</scoped_admin><suffix/><sys_class_name>sys_user_role</sys_class_name><sys_created_by>b.moers</sys_created_by><sys_created_on>2018-08-02 09:42:02</sys_created_on><sys_id>dd194b2bdbebd300dfa9b94ffe96194f</sys_id><sys_mod_count>0</sys_mod_count><sys_name>cicd_integration_user</sys_name><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_update_name>sys_user_role_dd194b2bdbebd300dfa9b94ffe96194f</sys_update_name><sys_updated_by>b.moers</sys_updated_by><sys_updated_on>2018-08-02 09:42:02</sys_updated_on></sys_user_role></record_update>]]></payload>
<payload_hash>1957910002</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:52</sys_created_on>
<sys_id>c45357b32f15b850d8455aab2799b6b5</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c90dd0000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:52</sys_updated_on>
<table/>
<target_name>cicd_integration_user</target_name>
<type>Role</type>
<update_domain>global</update_domain>
<update_guid>f78200e870777300c82f78ed6c63316b</update_guid>
<update_guid_history>4f7abbd0867773005243d9d32fed49e8:1957910002,4f7abbd0867773005243d9d32fed49e8:1957910002,4f7abbd0867773005243d9d32fed49e8:1957910002,fdeadb3b8657a7809b4574fe094f3057:-359588169,fdeadb3b8657a7809b4574fe094f3057:-359588169,d5194b2beeebd300591a6b4058bf4652:1129674802</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sysrule_view_2aa25305dbe77f409775f6700f961981</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sysrule_view"><sysrule_view action="INSERT_OR_UPDATE"><active>true</active><advanced>false</advanced><condition table="sys_remote_update_set">stateSTARTSWITHconflict_review^EQ<item display_value="conflict_review" endquery="false" field="state" goto="false" newquery="false" operator="STARTSWITH" or="false" value="conflict_review"/><item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/></condition><description/><device_type>browser</device_type><match_conditions>ALL</match_conditions><name>CICD-Conflict-Review</name><order>100</order><overrides_user_preference>true</overrides_user_preference><script/><sys_class_name>sysrule_view</sys_class_name><sys_created_by>b.moers</sys_created_by><sys_created_on>2019-08-27 08:21:23</sys_created_on><sys_domain>global</sys_domain><sys_domain_path>/</sys_domain_path><sys_id>2aa25305dbe77f409775f6700f961981</sys_id><sys_mod_count>8</sys_mod_count><sys_name>CICD-Conflict-Review</sys_name><sys_overrides/><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_update_name>sysrule_view_2aa25305dbe77f409775f6700f961981</sys_update_name><sys_updated_by>b.moers</sys_updated_by><sys_updated_on>2019-08-28 14:23:01</sys_updated_on><table>sys_remote_update_set</table><view>cicd_preview</view></sysrule_view></record_update>]]></payload>
<payload_hash>-96178129</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:51</sys_created_on>
<sys_id>c4539f732f15b850d8455aab2799b619</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c9d510000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:51</sys_updated_on>
<table>sys_remote_update_set</table>
<target_name>CICD-Conflict-Review</target_name>
<type>View Rule</type>
<update_domain>global</update_domain>
<update_guid>590f25a9d76377808733064f071d5659</update_guid>
<update_guid_history>590f25a9d76377808733064f071d5659:1528972619,590f25a9d76377808733064f071d5659:1528972619,b67abbd09f77730009851ab30135f8c4:-1283181383,590f25a9d76377808733064f071d5659:1528972619,2ab6570904e77f40f5856f5049e5a474:2006934861,05465fc559e77f405a16efbc1be8e66f:-1462066323,32d457850ae77f4039dc89c8586c3dc1:1500480660,61c41785d3e77f40a731acdce68f5414:1690738164,21b49385a4e77f402ba9ecc1556672df:1398099369,4a145b45a2e77f40ce09095884fffba1:794010706,b1a3d3459de77f4002920154c6ec6cd2:-548713272,2ea25305bbe77f40d1f56875f03a2e82:-1409100774</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>DELETE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_dictionary_sys_app_u_repository</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update&gt;&lt;sys_dictionary action="DELETE" element="u_repository" table="sys_app"&gt;&lt;active&gt;true&lt;/active&gt;&lt;array&gt;false&lt;/array&gt;&lt;array_denormalized&gt;false&lt;/array_denormalized&gt;&lt;attributes/&gt;&lt;audit&gt;false&lt;/audit&gt;&lt;calculation&gt;&lt;![CDATA[(function calculatedFieldValue(current) {

	// Add your code here
	return '';  // return the calculated value

})(current);]]&gt;&lt;/calculation&gt;&lt;choice/&gt;&lt;choice_field/&gt;&lt;choice_table/&gt;&lt;column_label&gt;Repository&lt;/column_label&gt;&lt;comments/&gt;&lt;create_roles/&gt;&lt;default_value/&gt;&lt;defaultsort/&gt;&lt;delete_roles/&gt;&lt;dependent/&gt;&lt;dependent_on_field/&gt;&lt;display&gt;false&lt;/display&gt;&lt;dynamic_creation&gt;false&lt;/dynamic_creation&gt;&lt;dynamic_creation_script/&gt;&lt;dynamic_default_value/&gt;&lt;dynamic_ref_qual/&gt;&lt;element&gt;u_repository&lt;/element&gt;&lt;element_reference&gt;false&lt;/element_reference&gt;&lt;foreign_database/&gt;&lt;function_definition/&gt;&lt;function_field&gt;false&lt;/function_field&gt;&lt;internal_type display_value="String"&gt;string&lt;/internal_type&gt;&lt;mandatory&gt;false&lt;/mandatory&gt;&lt;max_length&gt;120&lt;/max_length&gt;&lt;name&gt;sys_app&lt;/name&gt;&lt;next_element/&gt;&lt;primary&gt;false&lt;/primary&gt;&lt;read_only&gt;false&lt;/read_only&gt;&lt;read_roles/&gt;&lt;reference/&gt;&lt;reference_cascade_rule/&gt;&lt;reference_floats&gt;false&lt;/reference_floats&gt;&lt;reference_key/&gt;&lt;reference_qual/&gt;&lt;reference_qual_condition/&gt;&lt;reference_type/&gt;&lt;sizeclass/&gt;&lt;spell_check&gt;false&lt;/spell_check&gt;&lt;staged&gt;false&lt;/staged&gt;&lt;sys_class_name&gt;sys_dictionary&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2020-08-28 07:09:54&lt;/sys_created_on&gt;&lt;sys_id&gt;28a10d5bdb32d010fcf41780399619c7&lt;/sys_id&gt;&lt;sys_mod_count&gt;3&lt;/sys_mod_count&gt;&lt;sys_name&gt;Repository&lt;/sys_name&gt;&lt;sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e"&gt;19190fabdbebd300dfa9b94ffe96193e&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="CICD Integration"&gt;19190fabdbebd300dfa9b94ffe96193e&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_dictionary_sys_app_u_repository&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2020-08-28 08:01:23&lt;/sys_updated_on&gt;&lt;table_reference&gt;false&lt;/table_reference&gt;&lt;text_index&gt;false&lt;/text_index&gt;&lt;unique&gt;false&lt;/unique&gt;&lt;use_dependent_field&gt;false&lt;/use_dependent_field&gt;&lt;use_dynamic_default&gt;false&lt;/use_dynamic_default&gt;&lt;use_reference_qualifier&gt;simple&lt;/use_reference_qualifier&gt;&lt;virtual&gt;false&lt;/virtual&gt;&lt;widget/&gt;&lt;write_roles/&gt;&lt;xml_view&gt;false&lt;/xml_view&gt;&lt;/sys_dictionary&gt;&lt;/record_update&gt;</payload>
<payload_hash>-1520390471</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:51</sys_created_on>
<sys_id>c4539f732f15b850d8455aab2799b61a</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c9f990000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:51</sys_updated_on>
<table>sys_app</table>
<target_name>Custom Application.u_repository</target_name>
<type>Dictionary</type>
<update_domain>global</update_domain>
<update_guid>f54d8c6cfb0ca450d0da811205ff134a</update_guid>
<update_guid_history>f54d8c6cfb0ca450d0da811205ff134a:-1520390471,638d49138f72d01059df4f1bc7b223fc:1184163053,24a8819f1532d0107a82b931329b69a3:2004961811,32f70d5f3f32d010412b24e1ddd248c0:444393188,39c1059b9932d01061828fa7adc65d02:1184163053</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_properties_a16a83eadb7be7409775f6700f9619b3</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_properties"><sys_properties action="INSERT_OR_UPDATE"><choices/><description>&lt;b&gt;Show CICD UI action in scoped apps.&lt;/b&gt;</description><ignore_cache>false</ignore_cache><is_private>false</is_private><name>cicd-integration.enabled.on-scoped-app</name><read_roles/><suffix/><sys_class_name>sys_properties</sys_class_name><sys_created_by>b.moers</sys_created_by><sys_created_on>2019-02-26 13:40:43</sys_created_on><sys_id>a16a83eadb7be7409775f6700f9619b3</sys_id><sys_mod_count>11</sys_mod_count><sys_name>cicd-integration.enabled.on-scoped-app</sys_name><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_update_name>sys_properties_a16a83eadb7be7409775f6700f9619b3</sys_update_name><sys_updated_by>admin</sys_updated_by><sys_updated_on>2021-02-17 12:08:56</sys_updated_on><type>boolean</type><value>false</value><write_roles/></sys_properties><sys_translated_text action="delete_multiple" query="documentkey=a16a83eadb7be7409775f6700f9619b3"/></record_update>]]></payload>
<payload_hash>1706309878</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:51</sys_created_on>
<sys_id>c4539f732f15b850d8455aab2799b61d</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2ca28e0000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:51</sys_updated_on>
<table/>
<target_name>cicd-integration.enabled.on-scoped-app</target_name>
<type>System Property</type>
<update_domain>global</update_domain>
<update_guid>e0414dc742122854ef4ab4146f5d1e43</update_guid>
<update_guid_history>e0414dc742122854ef4ab4146f5d1e43:1706309878,cb2a2adf5436d0103a62013ffa595d2d:-1221247271,65f02f82ab0c4050cb20e93fb09330d7:1706309878,77669c743ecc0cd0ccda3a7e840dda2b:-1414276959,ce19a56037804c1031ab4a890481d00c:1706309878,6315d36e75b3f7c07fb09ccbe6861ae7:1838630446,ab15936e07b3f7c0c6e38e2222d5dd89:-1414276959,3473e1c7d8bcb34071bb102951d9d7e9:1706309878,f09dcfee327be740b189b35135ae9b0e:-1414276959,fd808f2ea264b700b87e8d6f7a2745c2:1706309878,f09dcfee327be740b189b35135ae9b0e:-1414276959,538d8bae9a7be7407f1775ff2ba85f55:1838630446,6fac8f2e127be740f25b3402263b8126:-2069622528,539b076e597be740ad88b6a77d0bd8e6:1983932431,af4bc72e7a7be7406baf734cb55baab4:-398268208,563bcb2e1d7be7408efb07a8187e8f09:1761719536,0e6a83ea837be7403679b458d83db4b7:-438594851</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_properties_category_m2m_8519da7adbdaa7c076d6b94ffe961941</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_properties_category_m2m"><sys_properties_category_m2m action="INSERT_OR_UPDATE"><category display_value="CICD Integration">8d1de113dbb86380432cfc600f9619f6</category><order>530</order><property display_value="cicd-integration.pull-request-proxy.secret" name="cicd-integration.pull-request-proxy.secret">11095a7adbdaa7c076d6b94ffe96190c</property><sys_class_name>sys_properties_category_m2m</sys_class_name><sys_created_by>b.moers</sys_created_by><sys_created_on>2018-12-14 15:09:31</sys_created_on><sys_id>8519da7adbdaa7c076d6b94ffe961941</sys_id><sys_mod_count>1</sys_mod_count><sys_name>cicd-integration.server.pullrequest.secret.CICD Integration</sys_name><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_update_name>sys_properties_category_m2m_8519da7adbdaa7c076d6b94ffe961941</sys_update_name><sys_updated_by>b.moers</sys_updated_by><sys_updated_on>2018-12-14 15:10:10</sys_updated_on></sys_properties_category_m2m></record_update>]]></payload>
<payload_hash>-2038474042</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:51</sys_created_on>
<sys_id>c85357b32f15b850d8455aab2799b6a7</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c99a20000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:51</sys_updated_on>
<table/>
<target_name>cicd-integration.server.pullrequest.secret.CICD Integration</target_name>
<type>Category Property</type>
<update_domain>global</update_domain>
<update_guid>af82cca8317773006be9059dcfc6b2d3</update_guid>
<update_guid_history>1e7abbd0bd777300583f2d5f944c1b22:-2038474042,1e7abbd0bd777300583f2d5f944c1b22:-2038474042,1e7abbd0bd777300583f2d5f944c1b22:-2038474042,99ea9b3b5057a780460c6c393c0492bb:-144888834,2e395e7a79daa7c09100a20a15b8cfc2:1112950480,c919da7acadaa7c087ea5835b2795f43:426903121</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_relationship_3275124bdbfa9010fcf4178039961984</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_relationship"&gt;&lt;sys_relationship action="INSERT_OR_UPDATE"&gt;&lt;advanced&gt;false&lt;/advanced&gt;&lt;apply_to/&gt;&lt;basic_apply_to&gt;sys_app&lt;/basic_apply_to&gt;&lt;basic_query_from&gt;sys_update_set&lt;/basic_query_from&gt;&lt;insert_callback/&gt;&lt;name&gt;Update Sets&lt;/name&gt;&lt;query_from/&gt;&lt;query_with&gt;&lt;![CDATA[/**
 * Lookup sys_update set (which is global by default for global scoped apps)
 * based on the sys_update_xml (which do have the correct scope)
 *
 * @method refineQuery
 * @author System Administrator [admin]
 * @memberof global.module:sys_relationship
 * @returns {undefined}
 */
(function refineQuery(current, parent) {
	if(parent.getValue('scope').toLowerCase() == 'global'){
		var agg = new GlideAggregate('sys_update_xml');
		agg.addQuery('application', parent.getValue('sys_id'));
		agg.addAggregate('COUNT', 'update_set');
		agg.orderBy('update_set');
		agg.query();
		var sysIds = [];
		while (agg.next()) {
			sysIds.push(agg.getValue('update_set'));
		}
		current.addQuery('sys_id', 'IN', sysIds);
	} else {
		current.addQuery('application', parent.getValue('sys_id'));
	}
})(current, parent);]]&gt;&lt;/query_with&gt;&lt;reference_field&gt;application&lt;/reference_field&gt;&lt;related_list/&gt;&lt;simple_reference&gt;false&lt;/simple_reference&gt;&lt;sys_class_name&gt;sys_relationship&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2020-08-27 18:38:09&lt;/sys_created_on&gt;&lt;sys_id&gt;3275124bdbfa9010fcf4178039961984&lt;/sys_id&gt;&lt;sys_mod_count&gt;16&lt;/sys_mod_count&gt;&lt;sys_name&gt;Update Sets&lt;/sys_name&gt;&lt;sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e"&gt;19190fabdbebd300dfa9b94ffe96193e&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="CICD Integration"&gt;19190fabdbebd300dfa9b94ffe96193e&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_relationship_3275124bdbfa9010fcf4178039961984&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2020-08-27 20:44:32&lt;/sys_updated_on&gt;&lt;/sys_relationship&gt;&lt;sys_translated_text action="delete_multiple" query="documentkey=3275124bdbfa9010fcf4178039961984"/&gt;&lt;/record_update&gt;</payload>
<payload_hash>2093258628</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:51</sys_created_on>
<sys_id>c85357b32f15b850d8455aab2799b6aa</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c9eb50000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:51</sys_updated_on>
<table/>
<target_name>Update Sets</target_name>
<type>Relationship</type>
<update_domain>global</update_domain>
<update_guid>bca2724b283e901059e763d9f4e882de</update_guid>
<update_guid_history>bca2724b283e901059e763d9f4e882de:2093258628,60b0bac7fb3e9010e97a0df8ba1cd492:781685256,45607ac70c3e9010ad7907a58448072a:534433666,0630fac7893e9010062e8e7745cf6443:1126972792,4b0076c7133e901028e2abd713faba2a:-2129852889,342fea47703e901027977510d0e4d42a:-1811713721,5dde6687933e9010652bfe515243804c:-1657501833,967d2a47153e9010bd7260e8acdb49de:1185670823,f84ceec3d43e901075debc8ce4725049:1600350484,7d6a22c3a73e90101689d646000844c2:-2092370365,e5f9aac35f3e9010f1f93a688ca68fef:47297309,c5a96e83703e90103d620d3932d9a9fc:-2131621956,07696e83b23e9010b8f1c8060de10bef:1828784033,c6492a8f2ffa901082487c64627dd95f:-80055062,192966cfc7fa90104a0404239d922d8a:654310240,36b6124b4ffa901021758ba98bfa0d96:1921609913,2db5960b8ffa9010f72329390a87869c:112543825</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_script_include_d8f74022db9667c076d6b94ffe9619b5</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;&lt;sys_script_include action="INSERT_OR_UPDATE"&gt;&lt;access&gt;public&lt;/access&gt;&lt;active&gt;true&lt;/active&gt;&lt;api_name&gt;global.CiCdJsDoc&lt;/api_name&gt;&lt;caller_access/&gt;&lt;client_callable&gt;false&lt;/client_callable&gt;&lt;description/&gt;&lt;name&gt;CiCdJsDoc&lt;/name&gt;&lt;script&gt;&lt;![CDATA[/**
 * Helper Class to control visibility of UI action
 * 
 * @class 
 * @author Boris Moers [b.moers]
 * @memberof global.module:sys_script_include
 */
var CiCdJsDoc = Class.create();
CiCdJsDoc.prototype = /** @lends global.module:sys_script_include.CiCdJsDoc.prototype */ { 
    /**
      * Constructor
      * 
      * @returns {undefined}
      */
    initialize: function () {
    },
 
    /**
      * Helper Function to show/hide button
      * 
      * @param {any} current
      * @returns {boolean}
      */
    showButton: function (current) {
        if (gs.nil(current) || !current.canWrite())
            return false;
 
        return (gs.getProperty('cicd-integration.jsdocButton.enabled', 'false') == 'true');
    },
 
    type: 'CiCdJsDoc'
};
 ]]&gt;&lt;/script&gt;&lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;&lt;sys_created_by&gt;b.moers&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2018-12-13 09:57:36&lt;/sys_created_on&gt;&lt;sys_id&gt;d8f74022db9667c076d6b94ffe9619b5&lt;/sys_id&gt;&lt;sys_mod_count&gt;6&lt;/sys_mod_count&gt;&lt;sys_name&gt;CiCdJsDoc&lt;/sys_name&gt;&lt;sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e"&gt;19190fabdbebd300dfa9b94ffe96193e&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="CICD Integration"&gt;19190fabdbebd300dfa9b94ffe96193e&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_script_include_d8f74022db9667c076d6b94ffe9619b5&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-07-19 09:47:31&lt;/sys_updated_on&gt;&lt;/sys_script_include&gt;&lt;/record_update&gt;</payload>
<payload_hash>2056661092</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:51</sys_created_on>
<sys_id>c85357b32f15b850d8455aab2799b6ad</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2ca4010000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:51</sys_updated_on>
<table/>
<target_name>CiCdJsDoc</target_name>
<type>Script Include</type>
<update_domain>global</update_domain>
<update_guid>07821b333815b850b4705980bb0392a5</update_guid>
<update_guid_history>07821b333815b850b4705980bb0392a5:2056661092,c2e4721bbc76d01023cfb3a14c2501b3:-709909050,727abbd02b777300ae6c8ba80e39a4ba:1868833009,727abbd02b777300ae6c8ba80e39a4ba:1868833009,999621d7d073ab40cf4b467dad64d7e7:-1543452726,2949806a319667c0fa6da61a5e46502a:949351623,e639c86aaa9667c023b2e690570d40c5:-2124195255,6598486a769667c0ab7e6cc9bb3e59f6:1089493557,0e180022e59667c062e0e93e0da72d20:680330735</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_ui_action_c7aabe3bdb9f3f408fb6f6700f9619b2</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update sys_domain="global" table="sys_ui_action"&gt;&lt;sys_ui_action action="INSERT_OR_UPDATE"&gt;&lt;action_name&gt;cicd_run_confirm_problems&lt;/action_name&gt;&lt;active&gt;true&lt;/active&gt;&lt;client&gt;false&lt;/client&gt;&lt;client_script_v2/&gt;&lt;comments&gt;Confirm preview problems and continue with pipeline&lt;/comments&gt;&lt;condition&gt;new global.CiCdRun().sys_remote_updateDisplayConfirmUiAction(current)&lt;/condition&gt;&lt;form_action&gt;true&lt;/form_action&gt;&lt;form_button&gt;true&lt;/form_button&gt;&lt;form_button_v2&gt;false&lt;/form_button_v2&gt;&lt;form_context_menu&gt;false&lt;/form_context_menu&gt;&lt;form_link&gt;false&lt;/form_link&gt;&lt;form_menu_button_v2&gt;false&lt;/form_menu_button_v2&gt;&lt;form_style/&gt;&lt;hint/&gt;&lt;isolate_script&gt;false&lt;/isolate_script&gt;&lt;list_action&gt;false&lt;/list_action&gt;&lt;list_banner_button&gt;false&lt;/list_banner_button&gt;&lt;list_button&gt;false&lt;/list_button&gt;&lt;list_choice&gt;false&lt;/list_choice&gt;&lt;list_context_menu&gt;false&lt;/list_context_menu&gt;&lt;list_link&gt;false&lt;/list_link&gt;&lt;list_save_with_form_button&gt;false&lt;/list_save_with_form_button&gt;&lt;list_style/&gt;&lt;name&gt;Confirm Conflicts [CICD]&lt;/name&gt;&lt;onclick/&gt;&lt;order&gt;-1&lt;/order&gt;&lt;script&gt;&lt;![CDATA[new global.CiCdRun().sys_remote_updateConfirmUiAction(current, action);
]]&gt;&lt;/script&gt;&lt;show_insert&gt;false&lt;/show_insert&gt;&lt;show_multiple_update&gt;false&lt;/show_multiple_update&gt;&lt;show_query&gt;false&lt;/show_query&gt;&lt;show_update&gt;true&lt;/show_update&gt;&lt;sys_class_name&gt;sys_ui_action&lt;/sys_class_name&gt;&lt;sys_created_by&gt;b.moers&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2019-08-23 09:24:10&lt;/sys_created_on&gt;&lt;sys_domain&gt;global&lt;/sys_domain&gt;&lt;sys_domain_path&gt;/&lt;/sys_domain_path&gt;&lt;sys_id&gt;c7aabe3bdb9f3f408fb6f6700f9619b2&lt;/sys_id&gt;&lt;sys_mod_count&gt;12&lt;/sys_mod_count&gt;&lt;sys_name&gt;Confirm Conflicts [CICD]&lt;/sys_name&gt;&lt;sys_overrides/&gt;&lt;sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e"&gt;19190fabdbebd300dfa9b94ffe96193e&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="CICD Integration"&gt;19190fabdbebd300dfa9b94ffe96193e&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_ui_action_c7aabe3bdb9f3f408fb6f6700f9619b2&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;b.moers&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2019-08-28 14:34:32&lt;/sys_updated_on&gt;&lt;table&gt;sys_remote_update_set&lt;/table&gt;&lt;ui11_compatible&gt;true&lt;/ui11_compatible&gt;&lt;ui16_compatible&gt;false&lt;/ui16_compatible&gt;&lt;/sys_ui_action&gt;&lt;/record_update&gt;</payload>
<payload_hash>-1737488600</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:51</sys_created_on>
<sys_id>c85357b32f15b850d8455aab2799b6b0</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c9d640000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:51</sys_updated_on>
<table>sys_remote_update_set</table>
<target_name>Confirm Conflicts [CICD]</target_name>
<type>UI Action</type>
<update_domain>global</update_domain>
<update_guid>5aa1712125a37780ef446ccc7ae74e2c</update_guid>
<update_guid_history>5aa1712125a37780ef446ccc7ae74e2c:-1248524266,5aa1712125a37780ef446ccc7ae74e2c:-1248524266,be7abbd0d57773005a727f41c4b853ae:-1737488600,5aa1712125a37780ef446ccc7ae74e2c:-1248524266,c08a5fc960e77f409fe35314ec2f463d:1959969654,1f9ac34943a77f40c1d9e670912bf953:456121292,b16aabb086e73f4095b0a23a84ac5be3:460217694,75fb873492673f40110cfac8f0c0fe2d:1427333681,33db0ff4e1673f408eb7fcd2a016fcd3:-1023577949,6c9b83f443673f40ce496bc05dc2d1fa:1427333681,76f6137fa1137f4011931c7a8225127b:-1886777690,67c6d3f78c137f404d9aa89fc0a7a5ea:34016824,31a61ffb65137f40e72a425c14e466b8:-156632816,174b367b939f3f40162864dbed622ae8:-485585249,9fba7e3bcd9f3f4047217a8f0c83886c:1281482611,83aabe3b799f3f40474b53091ca20cb4:2037418880</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_ui_section_2ec5a88ddbc02850fcf41780399619a2</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update><sys_ui_section caption="" section_id="2ec5a88ddbc02850fcf41780399619a2" sys_domain="global" table="sys_store_app" version="3" view="CICD"><sys_ui_element action="INSERT_OR_UPDATE"><element>name</element><position>0</position><sys_created_by>admin</sys_created_by><sys_created_on>2020-10-22 08:47:53</sys_created_on><sys_id>4da7e801db042850fcf417803996195b</sys_id><sys_mod_count>0</sys_mod_count><sys_ui_formatter/><sys_ui_section caption="NULL" display_value="" name="sys_store_app" sys_domain="global" view="fb54604ddbc02850fcf4178039961920">2ec5a88ddbc02850fcf41780399619a2</sys_ui_section><sys_updated_by>admin</sys_updated_by><sys_updated_on>2020-10-22 08:47:53</sys_updated_on><sys_user/><type/></sys_ui_element><sys_ui_element action="INSERT_OR_UPDATE"><element>.split</element><position>1</position><sys_created_by>admin</sys_created_by><sys_created_on>2020-10-22 08:47:53</sys_created_on><sys_id>cda7e801db042850fcf417803996195b</sys_id><sys_mod_count>0</sys_mod_count><sys_ui_formatter/><sys_ui_section caption="NULL" display_value="" name="sys_store_app" sys_domain="global" view="fb54604ddbc02850fcf4178039961920">2ec5a88ddbc02850fcf41780399619a2</sys_ui_section><sys_updated_by>admin</sys_updated_by><sys_updated_on>2020-10-22 08:47:53</sys_updated_on><sys_user/><type>.split</type></sys_ui_element><sys_ui_element action="INSERT_OR_UPDATE"><element>version</element><position>2</position><sys_created_by>admin</sys_created_by><sys_created_on>2020-10-22 08:47:53</sys_created_on><sys_id>41a7e801db042850fcf417803996195c</sys_id><sys_mod_count>0</sys_mod_count><sys_ui_formatter/><sys_ui_section caption="NULL" display_value="" name="sys_store_app" sys_domain="global" view="fb54604ddbc02850fcf4178039961920">2ec5a88ddbc02850fcf41780399619a2</sys_ui_section><sys_updated_by>admin</sys_updated_by><sys_updated_on>2020-10-22 08:47:53</sys_updated_on><sys_user/><type/></sys_ui_element><sys_ui_element action="INSERT_OR_UPDATE"><element>install_date</element><position>3</position><sys_created_by>admin</sys_created_by><sys_created_on>2020-10-22 08:47:53</sys_created_on><sys_id>c1a7e801db042850fcf417803996195c</sys_id><sys_mod_count>0</sys_mod_count><sys_ui_formatter/><sys_ui_section caption="NULL" display_value="" name="sys_store_app" sys_domain="global" view="fb54604ddbc02850fcf4178039961920">2ec5a88ddbc02850fcf41780399619a2</sys_ui_section><sys_updated_by>admin</sys_updated_by><sys_updated_on>2020-10-22 08:47:53</sys_updated_on><sys_user/><type/></sys_ui_element><sys_ui_element action="INSERT_OR_UPDATE"><element>.end_split</element><position>4</position><sys_created_by>admin</sys_created_by><sys_created_on>2020-10-22 08:47:53</sys_created_on><sys_id>45a7e801db042850fcf417803996195c</sys_id><sys_mod_count>0</sys_mod_count><sys_ui_formatter/><sys_ui_section caption="NULL" display_value="" name="sys_store_app" sys_domain="global" view="fb54604ddbc02850fcf4178039961920">2ec5a88ddbc02850fcf41780399619a2</sys_ui_section><sys_updated_by>admin</sys_updated_by><sys_updated_on>2020-10-22 08:47:53</sys_updated_on><sys_user/><type>.end_split</type></sys_ui_element><sys_ui_element action="INSERT_OR_UPDATE"><element>scope</element><position>5</position><sys_created_by>admin</sys_created_by><sys_created_on>2020-10-22 08:47:53</sys_created_on><sys_id>c5a7e801db042850fcf417803996195c</sys_id><sys_mod_count>0</sys_mod_count><sys_ui_formatter/><sys_ui_section caption="NULL" display_value="" name="sys_store_app" sys_domain="global" view="fb54604ddbc02850fcf4178039961920">2ec5a88ddbc02850fcf41780399619a2</sys_ui_section><sys_updated_by>admin</sys_updated_by><sys_updated_on>2020-10-22 08:47:53</sys_updated_on><sys_user/><type/></sys_ui_element><sys_ui_section action="INSERT_OR_UPDATE"><caption/><header>false</header><name>sys_store_app</name><roles/><sys_class_name>sys_ui_section</sys_class_name><sys_created_by>admin</sys_created_by><sys_created_on>2020-10-22 08:39:47</sys_created_on><sys_domain>global</sys_domain><sys_domain_path>/</sys_domain_path><sys_id>2ec5a88ddbc02850fcf41780399619a2</sys_id><sys_mod_count>2</sys_mod_count><sys_name>sys_store_app</sys_name><sys_overrides/><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_update_name>sys_ui_section_2ec5a88ddbc02850fcf41780399619a2</sys_update_name><sys_updated_by>admin</sys_updated_by><sys_updated_on>2020-10-22 08:47:52</sys_updated_on><sys_user/><title>false</title><view display_value="CICD" name="CICD">fb54604ddbc02850fcf4178039961920</view><view_name/></sys_ui_section></sys_ui_section></record_update>]]></payload>
<payload_hash>-1246151584</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:51</sys_created_on>
<sys_id>c85357b32f15b850d8455aab2799b6b3</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2ca1800000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:51</sys_updated_on>
<table>sys_store_app</table>
<target_name>Store Application</target_name>
<type>Form Layout</type>
<update_domain>global</update_domain>
<update_guid>c9a7e8012b042850b34d13768e15f95d</update_guid>
<update_guid_history>c9a7e8012b042850b34d13768e15f95d:-1246151584,f8a7a801c8042850df6a7144f54b0f0c:-2002094695,83976801b6042850e19a7bb22b77aaed:-790320621,3e9728013404285017b56e5e53daede6:35161740,8f5624cdedc0285071762e466e2f7222:-1246151584,b73660cd24c0285063576b1a24d6b5f3:-1768222211,7ee56c8d22c028506f87d7545602b212:884788470,a2c5a88de7c028502e7fa98a4fc862aa:2077308168</update_guid_history>
<update_set display_value=""/>
<view>CICD</view>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>DELETE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_ui_section_bddce1bcdbc8e450fcf41780399619a6</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update><sys_ui_section caption="CI/CD Settings" section_id="bddce1bcdbc8e450fcf41780399619a6" sys_domain="global" table="sys_store_app" version="3" view="global"><sys_ui_section action="DELETE"><caption>CI/CD Settings</caption><header>false</header><name>sys_store_app</name><roles/><sys_class_name/><sys_created_by/><sys_created_on/><sys_domain>global</sys_domain><sys_domain_path/><sys_id>bddce1bcdbc8e450fcf41780399619a6</sys_id><sys_mod_count/><sys_name/><sys_overrides/><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_update_name/><sys_updated_by/><sys_updated_on>2020-10-22 08:12:05</sys_updated_on><sys_user/><title>false</title><view display_value="Global" name="global">b1b17b829333310063d3941e867ffbdf</view><view_name>global</view_name></sys_ui_section></sys_ui_section></record_update>]]></payload>
<payload_hash>-1601923460</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:52</sys_created_on>
<sys_id>c85357b32f15b850d8455aab2799b6b4</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2ca04c0000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:52</sys_updated_on>
<table>sys_store_app</table>
<target_name>Store Application</target_name>
<type>Form Layout</type>
<update_domain>global</update_domain>
<update_guid>b87fd4c5c2c02850bfe82c9eb0230c8c</update_guid>
<update_guid_history>b87fd4c5c2c02850bfe82c9eb0230c8c:-1601923460,090d69bcfac8e450a4c47609ae1f169d:1212937142</update_guid_history>
<update_set display_value=""/>
<view>global</view>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_properties_47f0bce9dba3ff409775f6700f9619bf</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_properties"><sys_properties action="INSERT_OR_UPDATE"><choices/><description>&lt;b&gt;Show link to build state in info message on update set form.&lt;/b&gt;</description><ignore_cache>false</ignore_cache><is_private>false</is_private><name>cicd-integration.message.build-state</name><read_roles/><suffix/><sys_class_name>sys_properties</sys_class_name><sys_created_by>b.moers</sys_created_by><sys_created_on>2019-08-28 09:51:58</sys_created_on><sys_id>47f0bce9dba3ff409775f6700f9619bf</sys_id><sys_mod_count>9</sys_mod_count><sys_name>cicd-integration.message.build-state</sys_name><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_update_name>sys_properties_47f0bce9dba3ff409775f6700f9619bf</sys_update_name><sys_updated_by>admin</sys_updated_by><sys_updated_on>2021-02-17 12:08:56</sys_updated_on><type>boolean</type><value>false</value><write_roles/></sys_properties><sys_translated_text action="delete_multiple" query="documentkey=47f0bce9dba3ff409775f6700f9619bf"/></record_update>]]></payload>
<payload_hash>643821072</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:51</sys_created_on>
<sys_id>c8539f732f15b850d8455aab2799b61c</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2ca2be0000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:51</sys_updated_on>
<table/>
<target_name>cicd-integration.message.build-state</target_name>
<type>System Property</type>
<update_domain>global</update_domain>
<update_guid>6c41c10bdb122854f758664c8842047f</update_guid>
<update_guid_history>6c41c10bdb122854f758664c8842047f:643821072,4cceedb3149ca010aa4e42bf4ba67652:643821072,4cceedb3149ca010aa4e42bf4ba67652:643821072,055a21bf655ca010c71f2474d051f213:643821072,055a21bf655ca010c71f2474d051f213:643821072,6c1261db2572d010aedb4c2d14143d79:643821072,6c1261db2572d010aedb4c2d14143d79:643821072,25f02f82550c4050f91cbfcc9457d7de:207285114,b7b21ded2327ff40e6610bf6efa52873:-830444110,ca19a5600d804c10703e5b99f9270e13:207285114,b7b21ded2327ff40e6610bf6efa52873:-830444110,47a215addd27ff401fc06b4030898844:1743757725,e94645658ee37f04474de44e234cfea7:207285114,51c5706161e3ff40de27426585294bc6:-830444110,9531f82d78a3ff4029793cac4be2e00d:1743757725,7bf0f42d2fa3ff40727c983c28546605:-396247651</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_properties_d46f0e97dbf86380432cfc600f961954</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_properties"><sys_properties action="INSERT_OR_UPDATE"><choices/><description>&lt;hr&gt;&lt;b&gt;The CICD Server Host Name&lt;/b&gt;&lt;br&gt;&#13;
&lt;small&gt;e.g. https://sncicd.company.com&lt;/small&gt;</description><ignore_cache>false</ignore_cache><is_private>false</is_private><name>cicd-integration.server.url</name><read_roles/><suffix/><sys_class_name>sys_properties</sys_class_name><sys_created_by>b.moers</sys_created_by><sys_created_on>2018-10-02 14:09:55</sys_created_on><sys_id>d46f0e97dbf86380432cfc600f961954</sys_id><sys_mod_count>31</sys_mod_count><sys_name>cicd-integration.server.url</sys_name><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_update_name>sys_properties_d46f0e97dbf86380432cfc600f961954</sys_update_name><sys_updated_by>admin</sys_updated_by><sys_updated_on>2021-05-12 15:13:00</sys_updated_on><type>string</type><value>https://localhost:8443</value><write_roles/></sys_properties><sys_translated_text action="delete_multiple" query="documentkey=d46f0e97dbf86380432cfc600f961954"/></record_update>]]></payload>
<payload_hash>590296706</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:51</sys_created_on>
<sys_id>cc5357b32f15b850d8455aab2799b6a9</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2ca3090000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:51</sys_updated_on>
<table/>
<target_name>cicd-integration.server.url</target_name>
<type>System Property</type>
<update_domain>global</update_domain>
<update_guid>8cf056422788f81001371ca6d63baafc</update_guid>
<update_guid_history>8cf056422788f81001371ca6d63baafc:590296706,aa187753d61fe890a50c552a22c4c11b:281615387,a041c10b31122854c11f08e3c31eca89:1021403735,4921b937619ca0102a4c961f994bc413:590296706,4921b937619ca0102a4c961f994bc413:590296706,b396a20c04365490539bb35825bcc4f8:-1104576049,b396a20c04365490539bb35825bcc4f8:-1104576049,c9affea450e45010fcde6ed49ac2cd50:281615387,0e03ee90bfa810106ea14968c6c09e57:100148526,ffa908b26cdcdc50da75a50b00117c48:281615387,8d40cd1631989c500f1f161046e6f278:100148526,0331430215d09c5060e5db0cd726297d:690062377,2f7f3dc6dedc5c50a2684cd99c7728c4:100148526,937bddca091c5c502567b7da2c57c3e8:690062377,50d62e2d4ac81050dacfb9765dc53955:100148526,8e82c802dfc50050b8cf86ca2801cc1c:1682716807,c4a834b3191400101c9259e6da618d17:690062377,2ef6dbee18b3f7c02c84172b7c74152e:1471633938,65a56ee44d444c10938b4cb0aec704b0:1682716807,ce19a560b1804c1075242f0786068215:-666966897,2ef6dbee18b3f7c02c84172b7c74152e:1471633938,a85e9b5488f37300e3f09c0ce367b8e2:-666966897,abbcd3f03be7fb04f06fefc00504c408:1682716807,2162e6a43172bb807befc29834925c5e:690062377,e3c8134b9dbdf300087d2d311bc64e78:1682716807,15a0a98386bcb3401828cb5ab55a2953:690062377,502514e60a5cb3c0ad570a8c1a5359da:453190387,75808f2ed764b700e7af93de870704c7:1682716807,502514e60a5cb3c0ad570a8c1a5359da:453190387,c786bd924c54b3c0afa191444101719a:131253450,060901d4315b2b405639e0f98a221d3a:30248094,6c2d83532c436740fde377994ce1ab50:772857432,d4190a0a3acfef00012f88d573c0093e:-2129160967,a1c686c674cfef00698f2d423ade8c3f:1471633938,4e2b963ee8daa7c027324fabd39f6ff8:504722121,d0ead6fa55daa7c08e030c26434f7b71:-1869355467,edcb6db2495aa7c0cfd0860ccb47928e:575625999,07bb2db2875aa7c013db8827a54b715b:-1600042716,ecb059caf74e278078a003e28b6d03d9:575625999,ffe3d6ea29e1a70086c224136aa35cd3:-1263712953,39e356ea8ce1a700f3810173f2656d5d:-248056274,6763da664be1a700865f0ca76cd6ba76:1267112577,e0a80eee68a1a700f6468798482fbe28:370053962,f06f0e53ee3c6380a9bde5a924e76977:-1081942422</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_script_include_525e2d21db33db0076d6b94ffe9619a6</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;&lt;sys_script_include action="INSERT_OR_UPDATE"&gt;&lt;access&gt;public&lt;/access&gt;&lt;active&gt;true&lt;/active&gt;&lt;api_name&gt;global.CiCdApi&lt;/api_name&gt;&lt;caller_access/&gt;&lt;client_callable&gt;false&lt;/client_callable&gt;&lt;description/&gt;&lt;name&gt;CiCdApi&lt;/name&gt;&lt;script&gt;&lt;![CDATA[/**
 * Various API to prevent CICD process direct connecting to table API
 * 
 * @class 
 * @author Boris Moers
 * @requires sn_ws_err.module:sys_script_include.BadRequestError
 * @requires global.module:sys_script_include.UpdateSetExport
 * @requires global.module:sys_script_include.TableUtils
 * @requires sn_ws_err.module:sys_script_include.NotFoundError
 * @requires global.module:sys_script_include.XMLDocument
 * @memberof global.module:sys_script_include
 */
var CiCdApi = Class.create();

CiCdApi.prototype = /** @lends global.module:sys_script_include.CiCdApi.prototype */ {
 
    CICD_INTEGRATION_APP_ID: '19190fabdbebd300dfa9b94ffe96193e',
 
    /**
      * Constructor
      * 
      * @param {any} request
      * @param {any} response
      * @returns {undefined}
      */
    initialize: function (request, response) {
        var self = this;
 
        self.console = {
            /**
              * Description
              * 
              * @returns {undefined}
              */
            log: function () {
                if (arguments.length) arguments[0] = '[' + self.type + '] ' + arguments[0];
                gs.info.apply(null, arguments);
            },
            /**
              * Description
              * 
              * @returns {undefined}
              */
            warn: function () {
                if (arguments.length) arguments[0] = '[' + self.type + '] ' + arguments[0];
                gs.warn.apply(null, arguments);
            },
            /**
              * Description
              * 
              * @returns {undefined}
              */
            error: function () {
                if (arguments.length) arguments[0] = '[' + self.type + '] ' + arguments[0];
                gs.error.apply(null, arguments);
            },
            /**
              * Description
              * 
              * @returns {undefined}
              */
            debug: function () {
                if (arguments.length) arguments[0] = '[' + self.type + '] ' + arguments[0];
                gs.debug.apply(null, arguments);
            }
        };
 
        self.request = request;
        self.response = response;
 
        self.body = null;
        try {
            // support for POST request
            var requestBody = request.body;
            if (requestBody &amp;&amp; requestBody.hasNext()) {
                var body = requestBody.nextEntry();
                if (body) {
                    self.body = body;
                }
            }
        } catch (ignore) {
            // ignore
        }
    },
 
    /**
      * Get param from URL path
      * 
      * @param {any} paramName
      * @param {any} defaultValue
      * @returns {ConditionalExpression}
      */
    getPathParam: function (paramName, defaultValue) {
        var self = this;
 
        return (paramName in self.request.pathParams) ? self.request.pathParams[paramName] : defaultValue;
    },
 
    /**
      * Get param form URL query argument
      * 
      * @param {any} paramName
      * @param {any} defaultValue
      * @returns {ConditionalExpression}
      */
    getQueryParam: function (paramName, defaultValue) {
        var self = this;
 
        return (paramName in self.request.queryParams) ? (function () {
            var value = self.request.queryParams[paramName];
            if (Array.isArray(value)) {
                return (value.length === 1) ? value[0] : value;
            } else {
                return value;
            }
        })() : defaultValue;
    },
 
    /**
      * Get the application version
      * 
      * mapped to GET /api/devops/v1/cicd/version/
      * 
      * @returns {Array} the CICD Integration App Version
      */
    getAppVersion: function () {
        var self = this;
        var gr = new GlideRecord('sys_scope');
        if (gr.get(self.CICD_INTEGRATION_APP_ID)) {
            return gr.getValue('version').split('.');
        }
        return [0, 0, 0];
    },
 
    /**
      * Get User information by userId
      * 
      * mapped to GET /api/devops/v1/cicd/user/{userId}
      * 
      * @param {String} userId value of the user_name field
      * @returns {any} the user details
      */
    getUserById: function (userId) {
        var self = this;
 
        return self._getGrResultStream('sys_user', null, {
            sysparm_limit: 1,
            sysparm_query: 'user_name=' + userId,
            sysparm_fields: 'sys_id, name, email'
        });
 
    },
 
    /**
      * Get the details of an update-set
      * 
      * mapped to GET /api/devops/v1/cicd/updateset/{updateSetSysId}
      * 
      * @param {String} updateSetSysId
      * @returns {any} the update-set details
      */
    getUpdateSetDetails: function (updateSetSysId) {
        var self = this;
 
        return self._getGrResultStream('sys_update_set', updateSetSysId, {});
    },
 
 
    /**
      * Get the details of an Scope / App
      * 
      * mapped to GET /api/devops/v1/cicd/scope/{scopeId}
      * 
      * @param {String} scopeId
      * @returns {any} the update-set details
      */
    getScopeDetails: function (scopeId) {
        var self = this;
 
        return self._getGrResultStream('sys_scope', scopeId, {});
    },
 
    /**
      * Get all XMl records of an update-set
      * 
      * mapped to GET /api/devops/v1/cicd/updateset_files/{updateSetSysId}
      * 
      * @param {String} updateSetSysId
      * @returns {any} the update-set XML records
      */
    getUpdateSetFiles: function (updateSetSysId) {
        var self = this;
 
        return self._getGrResultStream('sys_update_xml', null, {
            sysparm_limit: 50,
            sysparm_query: 'update_set.base_update_set=' + updateSetSysId + '^ORupdate_set=' + updateSetSysId + '^ORDERBYsys_recorded_at'
        });
 
    },
 
    /**
      * Export an update-set
      * 
      * mapped to GET /api/devops/v1/cicd/export_updateset/{updateSetSysId}
      * @param {any} updateSetSysId
      * @returns {undefined} all test assigned to a test suite
      */
    exportUpdateSet: function (updateSetSysId) {
        var self = this, sysId;
 
        if (!updateSetSysId)
            return new sn_ws_err.BadRequestError('Update-Set is mandatory');
 
        var current = new GlideRecord('sys_update_set');
        /*
         current.addEncodedQuery('state=complete^sys_id='.concat(updateSetSysId));
         current._query();
         if(!current._next())
             return new sn_ws_err.BadRequestError('Update-Set Not found. Is it completed?');
         */
        if (!current.get(updateSetSysId))
            return new sn_ws_err.BadRequestError('Update-Set Not found.');
 
        var updateSetExport = new UpdateSetExport();
        if (current.base_update_set == current.sys_id) {
            sysId = updateSetExport.exportHierarchy(current);
 
            response.setStatus(302);
            return response.setLocation([gs.getProperty('glide.servlet.uri'), 'cicd_export_base_update_set.do?sysparm_delete_when_done=true&amp;sysparm_sys_id=', sysId].join(''));
 
        } else if (current.base_update_set.nil()) {
            sysId = updateSetExport.exportUpdateSet(current);
 
            response.setStatus(302);
            return response.setLocation([gs.getProperty('glide.servlet.uri'), 'cicd_export_update_set.do?sysparm_delete_when_done=true&amp;sysparm_sys_id=', sysId].join(''));
 
        } else {
            return new sn_ws_err.BadRequestError('Somethings wrong here... '.concat(current.getEncodedQuery()));
        }
 
    },
 
 
    /**
      * convert a scoped app to update-set
      * used in CiCdRun().sys_appUiAction() and exposed on GET to /api/devops/cicd/export_application/{appId}
      * 
      * @param {*} appId
      * @returns {any}
      */
    publishToUpdateSet: function (appId) {
        var self = this;
 
        if (!gs.getUser().getRoles().contains('admin'))
            throw Error('User must have admin grants.');
 
        var sc = new GlideRecord('sys_app');
        if (!sc.get(appId))
            throw Error('application not found');
 
        // the sysId of the update set
        var sysId = new GlideChecksum(sc.getValue('name').concat(sc.getValue('version'), sc.getValue('sys_id'), gs.getProperty('instance_name'))).getMD5();
        var singleUpdateSet = Boolean(gs.getProperty('cicd-integration.scoped-app.single-update-set', 'false') == 'true');
 
        if (singleUpdateSet) {
            // check if there is already a pending run
            var checkUs = new GlideRecord('sys_update_set');
            checkUs.addQuery('sys_id', sysId);
            checkUs.addQuery('state', '!=', 'complete');
            checkUs.addQuery('state', '!=', 'ignore');
            checkUs.addQuery('state', '!=', 'Do not transport');
            checkUs.setLimit(1);
            checkUs.query();
            if (checkUs._next()) {
 
                self.console.error('[publishToUpdateSet] There is already a running CICD run {0}', sysId.toString());
 
                var error = new Error('There is already a CICD run in progress for this application.');
                error.code = 'ALREADY_RUNNING';
                error.link = gs.getProperty('glide.servlet.uri').concat(checkUs.getLink(true));
 
                throw error;
 
            }
        }
 
        var usm = new GlideUpdateManager2();
        var gus = new GlideUpdateSet();
        var currentUS = gus.get();
 
        //gs.setCurrentApplicationId(appId);
        var queryStore = {};
        // add scope to update set
        queryStore[sc.getRecordClassName()] = [appId];
 
        self.console.info('[publishToUpdateSet] create new update set');
        var us = new GlideRecord('sys_update_set');
        if (singleUpdateSet) {
            if (us.get(sysId)) {
                self.console.info('[publishToUpdateSet] Deleting existing version of this update set {0}', sysId.toString());
                us.deleteRecord();
            }
            us.newRecord();
            us.setValue('sys_id', sysId);
        } else {
            us.initialize();
        }
        us.setValue('name', sc.getValue('name').concat(' - ', sc.getValue('version')));
        us.setValue('application', appId);
        us.setValue('state', 'build');
        us.setValue('description', 'Automatically created by CICD Process'.concat(sc.getValue('short_description') ? '\n'.concat(sc.getValue('short_description')) : ''));
        var updateSetSysId = us.insert();
 
        // make new update-set active
        gus.set(updateSetSysId);
 
        /*
             as OOB sys_metadata_link records are not exported into an update set, this seems to be even the 
             better way of doing it.
             e.g add a trigger via "add to application" ui action to a scoped app (this will create a sys_metadata_link record), export the app as update set (via ui action)
             and the sys_metadata_link is missing.
 
             sys_metadata_link flags are:
 
             'new install &amp; upgrade'    &gt; directory == 'update'
             'new install'              &gt; directory == 'unload'
             'new install &amp; demo data'  &gt; directory == 'unload.demo'
 
             TODO: switch to exclude demo data
         */
        var meta = new GlideRecord('sys_metadata');
        meta.addQuery('sys_scope', appId);
        meta._query();
 
        while (meta._next()) {
            var className = meta.getRecordClassName();
 
            if ('sys_ui_list' == className) {
                var tmp = new GlideRecord(className);
                if (tmp.get(meta.getValue('sys_id'))) {
                    var tableName = tmp.getValue('name');
                    if (new TableUtils(tableName).getAbsoluteBase() != 'sys_metadata') // this works like OOB, but is wrong. correct would be: !new TableUtils(tableName).getHierarchy().some(function (name) { return (name == 'sys_metadata')})
                        continue;
                    if (!gs.nil(tmp.sys_user))
                        continue;
                }
            }
 
            if (queryStore[className] === undefined)
                queryStore[className] = [];
 
            queryStore[className].push(meta.getValue('sys_id'));
        }
 
        self.console.info('[publishToUpdateSet] add all files to the update set');
        Object.keys(queryStore).forEach(function (tableName) {
            self.console.info('[publishToUpdateSet] add ' + queryStore[tableName].length + ' files from ' + tableName);
            var appFiles = new GlideRecord(tableName);
            appFiles.addQuery('sys_id', 'IN', queryStore[tableName]);
            appFiles._query();
            while (appFiles._next()) {
                // make new update-set active -- in case multiple jobs run at the same time
                gus.set(updateSetSysId);
                // save the record to the update set
                usm.saveRecord(appFiles);
            }
        });
 
        gus.set(currentUS);
 
        return {
            updateSetSysId: updateSetSysId
        };
 
    },
 
 
 
    /**
      * Get all ATF Test which are assigned to a TestSuite. &lt;br&gt;
      * This is used to exclude the test from the ATF runs to avoid running twice.
      * 
      * mapped to GET /api/devops/v1/cicd/test_in_suites
      * @returns {any} all test assigned to a test suite
      */
    getAllTestInSuites: function () {
        var self = this;
        return self._getGrResultStream('sys_atf_test_suite_test', null, {
            sysparm_query: 'test_suite.active=true^test.active=true',
            sysparm_fields: 'test'
        });
    },
 
    /**
      * This is a wrapper to give access to any kind of table extending sys_metadata
      * 
      * mapped to GET /api/devops/v1/cicd/file/{tableName}
      * 
      * @param {String} tableName the table to read from
      * @returns {any} the records from the corresponding table
      */
    getFilesFromTable: function (tableName) {
        var self = this;
 
        if ('sys_metadata' != tableName || 'sys_scope' != tableName) {
            var pass = new TableUtils(tableName).getHierarchy().toArray().some(function (table) {
                return ('sys_metadata' == table || 'sys_scope' == table);
            });
            if (!pass)
                return [];
        }
        return self._getGrResultStream(tableName, null, {});
    },
 
    /**
      * Change the state of an update-set
      * 
      * mapped to PATCH /api/devops/v1/cicd/updateset_status/{updateSetSysId}
      * 
      * @param {String} updateSetSysId the update-set sys_id
      * @returns {undefined} the update-set
      */
    setUpdateSetStatus: function (updateSetSysId) {
        var self = this;
 
        var state = (self.body) ? self.body.state : undefined;
        if (state === undefined)
            return new sn_ws_err.BadRequestError('State is mandatory');
 
        var gr = new GlideRecord('sys_update_set');
        if (gr.get(updateSetSysId)) {
            gr.setValue('state', state);
            gr.update('CI - State Changed');
            return self._getGrResultStream('sys_update_set', updateSetSysId, {
                sysparm_suppress_pagination_header: 'true'
            });
        } else {
            return new sn_ws_err.NotFoundError('No Record found.');
        }
    },
 
 
    /**
      * Description
      * 
      * @param {any} limit
      * @param {any} offset
      * @param {any} rel
      * @returns {any}
      */
    _createLink: function (limit, offset, rel) {
        var self = this;
        var queryParams = Object.keys(self.request.queryParams).reduce(function (prev, key) {
            if (['sysparm_limit', 'sysparm_offset'].indexOf(key) === -1) {
                return prev.concat([key.concat('=', encodeURIComponent(self.getQueryParam(key)))]);
            }
            return prev;
        }, []);
        return ''.concat('&lt;', self.request.url, '?', queryParams.concat(['sysparm_limit=' + limit, 'sysparm_offset=' + offset]).join('&amp;'), '&gt;', ';rel="', rel, '"');
    },
 
    /**
      * Description
      * 
      * @param {any} tableName
      * @param {any} sysId
      * @param {any} defaultParams
      * @returns {undefined}
      */
    _getGrResultStream: function (tableName, sysId, defaultParams) {
 
        var self = this;
 
        defaultParams = defaultParams || {};
        var singleObject = Boolean(sysId);
        if (singleObject) {
            defaultParams.sysparm_suppress_pagination_header = 'true';
        }
 
        var query = defaultParams.sysparm_query || self.getQueryParam('sysparm_query');
        var fields = defaultParams.sysparm_fields || self.getQueryParam('sysparm_fields');
        fields = (fields) ? fields.split(',') : [];
 
        var offset = parseInt(self.getQueryParam('sysparm_offset', 0), 10);
        var limit = parseInt(self.getQueryParam('sysparm_limit', defaultParams.sysparm_limit || 10000), 10);
 
        var displayValue = self.getQueryParam('sysparm_display_value', 'false');
        var category = self.getQueryParam('sysparm_query_category');
        var addDependents = defaultParams.sysparm_add_dependents || self.getQueryParam('sysparm_add_dependents', 'false');
 
        var suppressPaginationLink = defaultParams.sysparm_suppress_pagination_header || self.getQueryParam('sysparm_suppress_pagination_header', 'false');
 
 
        // not implemented....
        var excludeRefLink = self.getQueryParam('sysparm_exclude_reference_link', 'false');
        var view = self.getQueryParam('sysparm_view');
 
 
        // query the table
        var gr = new GlideRecord(tableName);
 
        // init so gr has all fields
        gr.initialize();
 
        // in case no fields specified, use all (only possible after .next())
        if (fields.length === 0) {
            fields = Object.keys(gr);
        }
 
        // allow query fields to be in url. e.g. active=true
        Object.keys(self.request.queryParams).forEach(function (key) {
            if (key.indexOf('sysparm_') === 0 || gr[key] === undefined)
                return;
            query = ((query) ? query.concat('^') : '').concat(key, '=', self.getQueryParam(key));
        });
 
        if (sysId) {
            gr.addQuery('sys_id', sysId);
        } else if (query) {
            gr.addQuery(query);
        }
 
        if (category)
            gr.setCategory(category);
 
        var onPage = Math.ceil((offset + 1) / limit),
            thisOffset = offset + limit;
 
        // set window
        gr.chooseWindow(offset, thisOffset, true);
        //gr.setLimit(nextOffset);
        gr._query();
 
        var totalRows = gr.getRowCount();
 
        // send 404 in case no row match
        if (totalRows === 0) {
            return [];//new sn_ws_err.NotFoundError('No Record found. Query: '.concat(query));
        }
 
        var totalPage = Math.ceil(totalRows / limit),
            prevOffset = offset - limit,
            nextOffset = Math.min(thisOffset, (totalPage - 1) * limit),
            lastOffset = (totalPage - 1) * limit;
 
        self.response.setContentType('application/json');
 
        var links = [];
        if ('true' != suppressPaginationLink) {
            links.push(self._createLink(limit, 0, 'first'));
            if (onPage &gt; 1) {
                links.push(self._createLink(limit, prevOffset, 'prev'));
            }
            if (onPage &lt; totalPage) {
                links.push(self._createLink(limit, nextOffset, 'next'));
            }
            links.push(self._createLink(limit, lastOffset, 'last'));
            // append to header
            self.response.setHeader('Link', links.join(','));
        }
 
        self.response.setStatus(200);
 
        // get the writer
        var writer = response.getStreamWriter();
        // start the result
        writer.writeString('{"result":');
        if (!singleObject) {
            writer.writeString('[');
        }
        //writer.writeString(JSON.stringify(self.request.queryParams));
 
        var append = false;
        // stream row by row
        while (gr._next()) {
 
            if (append) {
                writer.writeString(',');
            } else {
                append = true;
            }
 
            var out = {};
            fields.forEach(function (fieldName) {
                fieldName = fieldName.trim();
 
                if (!gr.isValidField(fieldName.split('.')[0]))
                    return;
 
                var element = gr.getElement(fieldName);
                var ed = element.getED(),
                    value = null;
                /*
                 .nil() is also true if a filed has length 0 !!
                 if (element.nil()) {
                     value = null;
                 } else
                 */
 
                if (ed.isBoolean()) {
                    value = JSUtil.toBoolean(element.toString());
                } else if (ed.isTrulyNumber()) {
                    value = parseInt(element.toString(), 10);
                } else {
                    value = element.toString();
                }
 
                if ('all' == displayValue.toLowerCase()) {
                    out[fieldName] = {
                        display_value: element.getDisplayValue(),
                        value: value
                    };
                } else if ('true' == displayValue.toLowerCase()) {
                    out[fieldName] = element.getDisplayValue();
                } else {
                    out[fieldName] = value;
                }
            });
 
            if (addDependents == 'true') {
                var __dependents = [];
                var __dependentsDelete = [];
 
                self._getDependents(gr).forEach(function (dependent) {
                    var depOut = null;
                    if (dependent.sysId) {
                        var dep = new GlideRecord(dependent.className);
                        if (dep.get(dependent.sysId)) {
                            depOut = { __className: dependent.className };
                            Object.keys(dep).forEach(function (fieldName) {
                                fieldName = fieldName.trim();
 
                                if (!dep.isValidField(fieldName.split('.')[0]))
                                    return;
 
                                var element = dep.getElement(fieldName);
                                var ed = element.getED(),
                                    value = null;
 
                                if (ed.isBoolean()) {
                                    value = JSUtil.toBoolean(element.toString());
                                } else if (ed.isTrulyNumber()) {
                                    value = parseInt(element.toString(), 10);
                                } else {
                                    value = element.toString();
                                }
 
                                if ('all' == displayValue.toLowerCase()) {
                                    depOut[fieldName] = {
                                        display_value: element.getDisplayValue(),
                                        value: value
                                    };
                                } else if ('true' == displayValue.toLowerCase()) {
                                    depOut[fieldName] = element.getDisplayValue();
                                } else {
                                    depOut[fieldName] = value;
                                }
                            });
 
                            __dependents.push(depOut);
 
                        }
 
                    } else {
                        depOut = dependent;
                        depOut.__className = dependent.className;
                        delete depOut.className;
                        delete depOut.sys_id;
                        __dependentsDelete.push(depOut);
                    }
                });
 
                if (__dependents.length) {
                    out.__dependents = __dependents;
                }
                if (__dependentsDelete.length) {
                    out.__dependentsDelete = __dependentsDelete;
                }
            }
            writer.writeString(JSON.stringify(out));
 
        }
        if (!singleObject) {
            writer.writeString(']');
        }
 
        if (self.getQueryParam('sysparm_meta', 'false') == 'true') {
            // append meta information
            var meta = {
                query: query,
                queryParams: self.request.queryParams,
                sysId: sysId,
                fields: fields,
                offsetWindowStart: offset,
                offsetWindowEnd: thisOffset,
                limit: limit,
                totalRows: totalRows,
                totalPage: totalPage,
                prevOffset: prevOffset,
                nextOffset: nextOffset,
                lastOffset: lastOffset,
                displayValue: displayValue,
                category: category,
                links: links
            };
            writer.writeString(',"__meta":');
            writer.writeString(JSON.stringify(meta));
        }
 
        // close the result
        writer.writeString('}');
 
    },
 
    /**
      * Description
      * 
      * @param {any} gr
      * @returns {any} a
      */
    _getDependents: function (gr) {
        /*
         [{
             "className": "sys_variable_value",
             "sysId": null,
             "action": "delete_multiple",
             "query": "document_key=9000a4560b10220050192f15d6673a3e"
         }, {
             "className": "sys_variable_value",
             "sysId": "c2faf2a35320220002c6435723dc3489",
             "action": "INSERT_OR_UPDATE"
         }]
 
         */
        var self = this;
        if (!self.glideRecordSimpleSerializer) {
            self.glideRecordSimpleSerializer = new GlideRecordSimpleSerializer();
        }
 
        var xmlString = self.glideRecordSimpleSerializer.serialize(gr);
 
        var xmlDoc = new XMLDocument(xmlString);
        var nodeList = xmlDoc.getNodes('//' + gr.getTableName() + '/*[@action]');
        var a = [];
 
        for (var i = 0; i &lt; nodeList.getLength(); i++) {
            var item = nodeList.item(i);
 
            if (gr.getTableName() == item.getNodeName())
                return;
 
            var meta = { className: item.getNodeName(), sysId: xmlDoc.getChildTextByTagName(item, 'sys_id') };
 
            var attributes = item.getAttributes();
            for (var j = 0; j &lt; attributes.getLength(); j++) {
                var att = attributes.item(j);
                if (att.getNodeName() == 'action') {
                    meta.action = att.getNodeValue();
                } else if (att.getNodeName() == 'query') {
                    meta.query = att.getNodeValue();
                }
            }
 
            a.push(meta);
        }
        return a;
    },
 
    type: 'CiCdApi'
};
 ]]&gt;&lt;/script&gt;&lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;&lt;sys_created_by&gt;b.moers&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2018-08-08 08:13:43&lt;/sys_created_on&gt;&lt;sys_id&gt;525e2d21db33db0076d6b94ffe9619a6&lt;/sys_id&gt;&lt;sys_mod_count&gt;219&lt;/sys_mod_count&gt;&lt;sys_name&gt;CiCdApi&lt;/sys_name&gt;&lt;sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e"&gt;19190fabdbebd300dfa9b94ffe96193e&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="CICD Integration"&gt;19190fabdbebd300dfa9b94ffe96193e&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_script_include_525e2d21db33db0076d6b94ffe9619a6&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2021-07-19 09:44:03&lt;/sys_updated_on&gt;&lt;/sys_script_include&gt;&lt;/record_update&gt;</payload>
<payload_hash>1287115496</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:51</sys_created_on>
<sys_id>cc5357b32f15b850d8455aab2799b6ac</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2ca3930000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:51</sys_updated_on>
<table/>
<target_name>CiCdApi</target_name>
<type>Script Include</type>
<update_domain>global</update_domain>
<update_guid>e4c1db33c915b85045284c4688d6b69e</update_guid>
<update_guid_history>e4c1db33c915b85045284c4688d6b69e:1287115496,af5ec03343c17c10a488450df4680836:1241412214,57b47a1b9b76d0102ab291c64187befc:-490468238,c3a1c3a09480ccd013c4773c2933a0fb:-387669457,fdb06a6374ffbbc071038c925418e6b5:-2141761234,c560eee7feffbbc046b7d20265eb29c8:-837159462,a4cb0a2b41bfbbc06335f3d1762df023:1586067984,2a48426741bfbbc01bf1f212df6014f7:-1929954912,04d7ca2763bfbbc0507ee0f5a221e28c:866515418,fff6c2e35cbfbbc0bef3378dfdea17f5:-934542682,2176c2e307bfbbc0277066e7f31cb2b6:-1194556264,00abf99605f7bfc02ca937768df0b5cc:-47475237,5e6b7d1673f7bfc05a18433b2b80a78a:1367658291,4de1f11e47b7bfc07fafb37eb61e144d:1074088636,2d9ee9d6a2b7bfc0fa55b045edaa3eaa:594679016,32a5dce8a537fb802093759d8e63f55b:836530614,d0d21028c837fb8007a1a9be60e25d9f:67018567,0821d4acd4f3fb80874ae432129416ac:1918308152,7320d024bc37fb801688ba616a93f9e0:-1622753602,a510d8a40e37fb8019ca2a07fa6441f1:1285259952,273e7b14faf3fb804b29991b76d6fa6f:201103236,dc8dff1481f3fb807ba25cdbff15a2e4:-676825728,656ab3500b777300e50c3999f6a62010:2030412647,3810214c7ef77b80b09e54bb8ebcd73c:1514670925,0f780acf45673780b9a79151152b8137:853702063,78c7420fe66737800946d4e0dbf91fea:1716806600,d1d686cba3673780e8576314ac00adca:-1764945176,d1d686cbd267378085e82b874f3b14c7:-1191190207,3c2682cf3aab734413d01c4058e52ea9:580733919,72566d977573ab403c30b5dbece76372:-1191190207,04211fa23abbe740e14ab832fd737342:1324857650,d0848f66697be740318d59a307b32536:-1867534964,2c54e490246fe780ffc18b4caa1f1037:710973996,a0137bb349d7a78029b30df2c7db1fe4:1592614459,cfe137b388d7a780c95e1bc7df3a8c6b:-2134351380,e26b2f3bbd97a780e60f1eb92efb0979:1488349589,ce1b273b2f97a7803e2f36b95accbeb6:1083444588,976a63772497a780588cc6c5b9e9342f:377008399,6d75e7b3d097a7800d76ec42f61b7d33:-1727878763,c123a7737497a780ce062ccbe81525c1:-448823258,160f93bfcb57a780196979cea7c613c5:1167586488,33ee5f3f1a57a780333c447b10016a54:-204653426,245d133f1f57a7803309236ad566bf1f:-1983584881,dc3c93bbd857a780d9047262a665d12c:1848267183,b7a1d333b957a780dfb19a5d79c6929d:-945527378,46163d52cbdf6f40468c668026211aa7:-1416502061,8db571529edf6f40f7887de5be631559:908288436,0c65315292df6f401b379e8d145b5e1e:-1082989679,4cc475122ddf6f4094af1c2bd0d84f80:-1385472244,1506edd2299f6f406d850b945681c310:1248450380,b740219e5b5f6f40a17edb5b1ce180fd:379897985,c0206d9e485f6f40f0564d0b514c994d:-320853177,d2d9d91e081f6f4010172a0b2c315e23:-1414254272,e3c4155edf1f6f40eb3f587ca5467cfd:1648048342,4694995e4c1f6f40947b4096f01ba919:-288777629,6ebb055ef61f6f409153ac235c2b1d42:-126117216,821b055ec91f6f40579dd7e3002a6c2f:1960674005,aeaacd1ee81f6f40b332e4c5bee50a47:-430236189,eb5a891e9d1f6f400c65b8a618a5b8b0:-1055213757,08f7a84250d32380a0934b1b8b7a091c:1969752484,84e5ecceb0932380e909471b06ca4db8:-1852505149,08c2a48289d323808fee781373f360f4:-656640741,cdff54ce3a93238098ef12cf7d6e13b8:1969488363,e6afd08ede932380ccd47266cf9d893d:913905147,b86fdc8ef7932380299f0c537545c0b2:-802598117,c17e908e75932380bcc145efbba80bc9:-1205677562,741a144a56932380ede881a6ae4c2e62:-1355231962,e319d4c6029323809ad12520e1c3c703:1310415608,f6679cc2d79323803273ec9f57c40bf0:-1961303094,7437d4860f93238009905e6515b7e8fa:1918657754,88b6d486749323804531847b215ad999:-1961303094,83451cc29f932380615610d2f2ad0012:-1097587770,e46e80ce165323803f490f340d11dc87:-550171126,d7dd80ceb3532380c56d7189f6a21c7e:1665844186,583c088ace5323801cf51f44229a762c:123733270,337b004e095323800f245a7b71a87842:351769216,443b4c4af6532380bd77b1202c13b8e1:278862268,aadac48a1353238009a908efaac129b3:-2140711597,cf98c0c65e53238008503235f26ef39f:-227252998,a6e7484a94132380d4643e619fea604a:-119555897,f956484aa11323805211e5b387dd3245:-1961178093,69b50c0aa8132380938992498855e31a:1604591167,65958c06c013238078d86dd4e7a2c90f:-129098712,7c9f6f3102132380aa72786401eb958d:1970976838,592e67b12a132380e7b4e5c02590ac11:-1268470411,c0dda3b15d1323803f421bfa525133e6:261982013,14e61f7d469fef409bd15519eb2291ef:2147032249,e1261f7d509fef409dfdedad2f4721e7:-780654695,acad8b2d309faf4088ff70e97b025416:1960315071,87dd7f1e495667c054d848ea13b79d06:-1462441449,3ce9fb1e8c5667c09e7967ed24796db8:-355957726,6063239a631667c01d7130263ca90bac:-1526587728,23f24dd7a26d2b0026d2601f0e336c48:1923651629,69cc70df9b2d2b00ce9f1901836660e7:456096960,4a48b45b932d2b0093a0df1439725615:1944428952,832830dfc62d2b009275a9115a45d565:999663296,982f11170d0163c00726dbd1640e867b:1568208529,deae1d17140163c00bde5ac99f13223a:1291761457,908e99d3950163c0e2ae5b5af8b5cab3:20902232,4c7c1193190163c0b73999cd76150909:-1977974209,9ca4d95724cd23c0a1a8d93613fee464:-1941704570,0321995fd2c923c0238c44f9938142d0:760409226,a760aaa9194dab802a121857e8a19348:-139405305,eb099a69c44dab8085c90870af3d547e:-1918826996,a1d81a69ab4dab80d70556f453be9b9c:-1052768753,ac589269244dab80cb551cecdb5f66ae:-763315190,11e25ae1cb4dab80936561c6e157a173:-182566363,ee788540d9492780d3c2d90511b197ea:-1276994853,0d38854c5e092780bc8d7ee515e0aa5e:-1496410172,c6e7c100aa492780bdbd953bda138573:-534572575,1e87c1000a492780b3a455bd059abe55:-1769371540,ea3120951d2cab00ad43fc309cfd4ade:1179511497,4921ac55dc2cab00cacd7f5fbf2123bb:-637951235,c0f0a055a62cab0099cc5a7528eae624:-606273958,5fc02c55882cab00a302d4e7269dc711:200554866,8e80e855c72cab00bf68de514bc217d7:1081826919,58bf5055722cab00bccc8279bad4c4d2:1871815177,f04f1c155c2cab00da89e05014324cf7:1374211581,5e0f9415712cab0039febdc6a34d6bde:38754486,a0de10158d2cab002d53a58f701d7bf3:1173064234,5fbe5015be2cab0077ba82172f1fdd18:-1294792343,eeaedc91d32cab0056f26cb5d7f615e2:-707532911,ac9e10d1b82cab0080d3b65846e2ed3c:-1601610429,087e1c91832cab00e47bab8fe95a50c7:858444316,974e1c91fc2cab0002457642910ffa93:38754486,b60d58598ee8ab00205b11bbec8a7e25:-852491522,89cc1c91562cab00f5dad5d828160b79:1328867838,722b545d3fe8ab000b200bc4c5851916:-1342075347,ec1a18118c2cab00db6c63b7c42c2e9d:201081928,88f950dd23e8ab001aafc86fb75a4a45:-1726750010,7ac95411ef2cab008d0826a03d326605:1566664482,571918dde7e8ab007c37dfcf74e5258f:439558905,090998dd93e8ab0032663d9d396e7c21:-1198384531,c1e8909db3e8ab007bc59f79c09dfdca:1483704776,8117909d8ae8ab0007f876f762c593c2:-1154010263,79c6dc5d98e8ab0049ed92fbefb24542:-1248962334,3406d81d51e8ab00e009fdd1df6ff354:-1088892544,e82590d530e8ab00928b70cbe48c989b:2070717389,6594989532e8ab0023c03737723fe334:837782570,a023d81954e8ab00e555d7de04f0ba48:1894990139,cb45c8dd8fa8ab004664085765d6bc74:1693680180,39fa10d3f4fb1340edd4a443ecbf11f5:-800642655,93b9109f42bb134056977f36020b0aba:-216011911,e889d853b2fb1340b1f396f42d451219:-1088349704,33691453c3fb13409a106c429233f7e8:1679346974,625b02d649b75f0085c81fc27797b8f1:634712285,9b1b4616a4b75f00a2abee627a41df23:-800642655,3cf742169ab75f00b52129258593ffb7:1833268232,0134378641ff1f00f71912404ecf51fa:-800642655,9d13f7466bff1f00da43db35d1f7e48f:1813669327,92d277462dff1f00c13c5277cf208a49:265839870,ba723706f1ff1f00ab9d115f8df82dcc:1393144656,0012f7ce77bf1f00e0baaddbfe35a04d:692154158,eeb1b7065eff1f00abcea419ee883bfe:1348875822,b5377f7977b31f00563504a3e25475b4:-1124117364,9c177f799cb31f0056a6fe060d49f5af:13768976,3de6fff955b31f00144426cac65f6f61:623355462,2ed5b3b9abb31f00e05444a1a92ba35a:1767691450,e255fbb990b31f0061d8cc3a92cd6814:322799389,e4d477f532b31f00a38354d78fad312b:356203341,1f547f3526b31f00705f689d8eee5c91:-1367909798,64f07335efb31f00e5a7e47f76e813a2:510412574,834feb75afb31f003a796aa346cffe05:-1063448033,d48dabbd29731f00a6d96351f17482c1:26755202,9b372bbdab731f000264e66b7dfb8960:-81185129,8414af3d46731f00a1f885c5fd951fcd:801725958,de7127f532731f00af6b4dd594ec3850:804282340,507e9ff5ff731f00e13ad8a6f9f43bc1:-1291517018,b8ed97fdb2ffdb00077c99f34357061b:-225940996,c4ad53f52e731f0065ab4575a3f92a36:2116052683,7d6d9bf50f731f008753415f98a3dd98:-824876303,7f3d53f5b0731f0032721d929df9f601:1163763877,c9ec13f56e731f00b3e7ae4d7237f514:1016641198,d5253a7975ffdb00477ce395f713a8ff:-1081709540,93247e3989ffdb00ce384673925d907a:551012909,89f27ef170ffdb00b2e7fdcae83733b7:199789024,4392fef175ffdb00fb34dce11cf05e32:-1655760031,27423af5f5ffdb007033b35a26d7e0ae:1798006792,36aa8c35fef7db009334721ff8c35479:1774550319,e6f79b2dcf37db00e9e0b6427e7ff6e5:628783847,c4675be98537db00c36e5bc720a8ed96:-1651364503,f4869be96337db00a9a04ab85c6b0f93:-115888728,5e16d76d5b37db002e21327610ef4c84:-673047692,9e959f6da437db0019b08db334e1974c:-183878703,4805d76d2d37db00f68a2d184114eb7e:-26942784,26349f2d7f37db00f7a5590939c9c89a:1714433526,74d39b2dcf37db0007ad4cf20b96f1c3:401963670,463393a97037db00f64c725ffbe7b639:1379560706,1a429be9f837db00967ee6b18c585889:48375191,b4329b691037db00eb4913b13e6eb558:-399689265,e2b193a90b37db005041421b47cb5752:427747932,b951dfa9de37db0031ea8ad72450c4e7:507560358,cc8093a98f37db00eb4b1b603a020743:-1562627915,08105b690737db00b74d471502cc3819:-784527687,708f0f691037db00b2a4835bfc012908:-351127839,b16fcfe588f3db0073f143b762eac58a:-1718326274,f2c73229b1f3db005cc75392ebb7ff35:-490126579,0fb6fae1f2f3db00e0fe4f9920499cf8:-413824695,4c86f6e5cbf3db003decf1dfa582e71a:-1442953435,1b36f2e5fdf3db0059533f11fb43eccf:-537452291,e271362128f3db005d675ccf72ff4a6f:965790373,674f66a109f3db00427c7db36e8430a2:720072345,2d0f6a618bf3db0064127e5de60a555b:-380349185,51deee2dd8b3db00ad98262defc81489:-1898594146,c89c66ada4b3db00607ab55beee948ba:1423919725,782c22a9c7b3db000472b52bf7edd0c8:1442212319,aecbaaedbab3db0058d96fc93fc93c63:-1945788756,e26ba62de5b3db00f1c46991a62112dd:-1973573188,8ecaeaad13b3db0027000b1102303a4b:2001393226,26692a2ddab3db00c1a1e01f9e173c24:-741951591,cdc8ee2d21b3db0052b603662c5b2681:-1221999309,ef57eee91ab3db001b05a85efc637071:1933669957,e227ea69fdb3db006f6b7e42ae815a5a:1454772224,6fb6eee9f3b3db00be43d770ae18446c:-94875784,526666e923b3db0027b383b02821ac02:-157631688,a9f526e995b3db005eeb43f158cfbcaf:-1332252564,04d2226975b3db00353bb9dafa6d6f2a:-503578419,ce1931a9b233db000114e8211107ffdf:-1319496137,ccd8fd612333db00056e4c742f3cbfad:403200070,19883969fa33db003bb088e3f1d22eac:156848754,e4c5b1e50733db001c7a37e7cd4a16b7:511236334,168f6d21bc33db002e2d38c27bfdb5fb:-1746338478,2e6e6d216f33db003a56c7e480ff8554:-235550216</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_security_acl_role_e3fcfacbdb652b00323efc600f9619e3</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_security_acl_role"><sys_security_acl_role action="INSERT_OR_UPDATE"><sys_class_name>sys_security_acl_role</sys_class_name><sys_created_by>b.moers</sys_created_by><sys_created_on>2018-11-08 05:38:52</sys_created_on><sys_id>e3fcfacbdb652b00323efc600f9619e3</sys_id><sys_mod_count>0</sys_mod_count><sys_name>/api/devops/cicd/ci.cicd_integration_user</sys_name><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_security_acl display_value="/api/devops/cicd/ci">1a7833bddbb31f0076d6b94ffe961994</sys_security_acl><sys_update_name>sys_security_acl_role_e3fcfacbdb652b00323efc600f9619e3</sys_update_name><sys_updated_by>b.moers</sys_updated_by><sys_updated_on>2018-11-08 05:38:52</sys_updated_on><sys_user_role display_value="cicd_integration_user" name="cicd_integration_user">dd194b2bdbebd300dfa9b94ffe96194f</sys_user_role><transaction_id/></sys_security_acl_role></record_update>]]></payload>
<payload_hash>1812677796</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:51</sys_created_on>
<sys_id>cc5357b32f15b850d8455aab2799b6af</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c96b90000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:51</sys_updated_on>
<table>/api/devops/cicd/ci</table>
<target_name>/api/devops/cicd/ci.cicd_integration_user</target_name>
<type>Access Roles</type>
<update_domain>global</update_domain>
<update_guid>ff8200e87f777300a01f2a1ecadaa34a</update_guid>
<update_guid_history>877abbd070777300b977e7094be90edd:1812677796,877abbd070777300b977e7094be90edd:1812677796,877abbd070777300b977e7094be90edd:1812677796,fa3d364fe2652b00ec41d5ab2ec7392d:-88991152</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_ui_related_sys_remote_update_set_cicd_preview</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update><sys_ui_related sys_domain="global" table="sys_remote_update_set" version="2" view="cicd_preview"><sys_ui_related_list_entry action="INSERT_OR_UPDATE"><filter table="sys_update_preview_problem.remote_update_set">status=^EQ<item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/></filter><list_id display_value="Retrieved Update Set - CICD Preview" name="sys_remote_update_set" related_list="NULL" sys_domain="global" view="cdb37233db9f3f408fb6f6700f96191a">7949dbcadbc084149775f6700f9619b4</list_id><order_by/><position>0</position><related_list>sys_update_preview_problem.remote_update_set</related_list><sys_class_name>sys_ui_related_list_entry</sys_class_name><sys_created_by>b.moers</sys_created_by><sys_created_on>2019-09-24 07:55:36</sys_created_on><sys_id>b149dbcadbc084149775f6700f9619b5</sys_id><sys_mod_count>0</sys_mod_count><sys_updated_by>b.moers</sys_updated_by><sys_updated_on>2019-09-24 07:55:36</sys_updated_on></sys_ui_related_list_entry><sys_ui_related_list_entry action="INSERT_OR_UPDATE"><filter/><list_id display_value="Retrieved Update Set - CICD Preview" name="sys_remote_update_set" related_list="NULL" sys_domain="global" view="cdb37233db9f3f408fb6f6700f96191a">7949dbcadbc084149775f6700f9619b4</list_id><order_by/><position>1</position><related_list>sys_update_xml.remote_update_set</related_list><sys_class_name>sys_ui_related_list_entry</sys_class_name><sys_created_by>b.moers</sys_created_by><sys_created_on>2019-09-24 07:55:36</sys_created_on><sys_id>b549dbcadbc084149775f6700f9619b5</sys_id><sys_mod_count>0</sys_mod_count><sys_updated_by>b.moers</sys_updated_by><sys_updated_on>2019-09-24 07:55:36</sys_updated_on></sys_ui_related_list_entry><sys_ui_related_list_entry action="INSERT_OR_UPDATE"><filter/><list_id display_value="Retrieved Update Set - CICD Preview" name="sys_remote_update_set" related_list="NULL" sys_domain="global" view="cdb37233db9f3f408fb6f6700f96191a">7949dbcadbc084149775f6700f9619b4</list_id><order_by/><position>2</position><related_list>REL:360224f6ac108c010077ea0916850ead</related_list><sys_class_name>sys_ui_related_list_entry</sys_class_name><sys_created_by>b.moers</sys_created_by><sys_created_on>2019-09-24 07:55:36</sys_created_on><sys_id>b949dbcadbc084149775f6700f9619b5</sys_id><sys_mod_count>0</sys_mod_count><sys_updated_by>b.moers</sys_updated_by><sys_updated_on>2019-09-24 07:55:36</sys_updated_on></sys_ui_related_list_entry><sys_ui_related_list action="INSERT_OR_UPDATE"><calculated_name>Retrieved Update Set - CICD Preview</calculated_name><filter/><name>sys_remote_update_set</name><order_by/><position/><related_list/><sys_class_name>sys_ui_related_list</sys_class_name><sys_created_by>b.moers</sys_created_by><sys_created_on>2019-09-24 07:55:36</sys_created_on><sys_domain>global</sys_domain><sys_domain_path>/</sys_domain_path><sys_id>7949dbcadbc084149775f6700f9619b4</sys_id><sys_mod_count>0</sys_mod_count><sys_name>Retrieved Update Set - CICD Preview</sys_name><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_update_name>sys_ui_related_sys_remote_update_set_cicd_preview</sys_update_name><sys_updated_by>b.moers</sys_updated_by><sys_updated_on>2019-09-24 07:55:36</sys_updated_on><sys_user/><view display_value="CICD Preview" name="cicd_preview">cdb37233db9f3f408fb6f6700f96191a</view><view_name/></sys_ui_related_list></sys_ui_related></record_update>]]></payload>
<payload_hash>817791492</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:51</sys_created_on>
<sys_id>cc5357b32f15b850d8455aab2799b6b2</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c9e4c0000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:51</sys_updated_on>
<table>sys_remote_update_set</table>
<target_name>Retrieved Update Set</target_name>
<type>Related Lists</type>
<update_domain>global</update_domain>
<update_guid>3149dbcae7c08414cf45d9562d90d1b7</update_guid>
<update_guid_history>3149dbcae7c08414cf45d9562d90d1b7:109909986,3149dbcae7c08414cf45d9562d90d1b7:109909986,d9a813ca74c0841478c961646ac483c9:1511440965</update_guid_history>
<update_set display_value=""/>
<view>cicd_preview</view>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_properties_2aa816f6dbdaa7c076d6b94ffe96195c</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_properties"><sys_properties action="INSERT_OR_UPDATE"><choices/><description>&lt;b&gt;Secret Name&lt;/b&gt;&lt;br&gt;&#13;
&lt;small&gt;e.g. X-Hub-Signature&lt;/small&gt;&lt;br&gt;&#13;
The HTTP Header Name containing the Secure Token. &lt;span color="red" style="color: red;"&gt;If no name and no token is specified the API is public!&lt;/span&gt;</description><ignore_cache>false</ignore_cache><is_private>false</is_private><name>cicd-integration.pull-request-proxy.header-secret-name</name><read_roles/><suffix/><sys_class_name>sys_properties</sys_class_name><sys_created_by>b.moers</sys_created_by><sys_created_on>2018-12-14 15:07:43</sys_created_on><sys_id>2aa816f6dbdaa7c076d6b94ffe96195c</sys_id><sys_mod_count>6</sys_mod_count><sys_name>cicd-integration.pull-request-proxy.header-secret-name</sys_name><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_update_name>sys_properties_2aa816f6dbdaa7c076d6b94ffe96195c</sys_update_name><sys_updated_by>b.moers</sys_updated_by><sys_updated_on>2018-12-21 10:58:53</sys_updated_on><type>string</type><value>X-Hub-Signature</value><write_roles/></sys_properties><sys_translated_text action="delete_multiple" query="documentkey=2aa816f6dbdaa7c076d6b94ffe96195c"/></record_update>]]></payload>
<payload_hash>920795502</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:51</sys_created_on>
<sys_id>cc539f732f15b850d8455aab2799b61b</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c9a3c0000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:51</sys_updated_on>
<table/>
<target_name>cicd-integration.pull-request-proxy.header-secret-name</target_name>
<type>System Property</type>
<update_domain>global</update_domain>
<update_guid>6782cca8f1777300e94516c80119ecc3</update_guid>
<update_guid_history>6e7abbd012777300bc331b04d7522c7a:920795502,6e7abbd012777300bc331b04d7522c7a:920795502,6e7abbd012777300bc331b04d7522c7a:920795502,2ed2a94923aaefc065af734fdb0d481f:-1238114394,0a1c1e7e91daa7c0399b758214615193:-1048030144,847a56fa4edaa7c0231ba182e27fdd65:-314488953,7ae9daba43daa7c016f5c041267ad6ce:-342913214,d3d99aba63daa7c090f74beda2c2eed4:-665868562,e18992baf2daa7c0b751c261359ddc6c:-539646764,83a8d27ae9daa7c0f21f26c9c598fa09:-265701714</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_properties_category_m2m_1529da7adbdaa7c076d6b94ffe961953</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_properties_category_m2m"><sys_properties_category_m2m action="INSERT_OR_UPDATE"><category display_value="CICD Integration">8d1de113dbb86380432cfc600f9619f6</category><order>520</order><property display_value="cicd-integration.pull-request-proxy.header-secret-name" name="cicd-integration.pull-request-proxy.header-secret-name">2aa816f6dbdaa7c076d6b94ffe96195c</property><sys_class_name>sys_properties_category_m2m</sys_class_name><sys_created_by>b.moers</sys_created_by><sys_created_on>2018-12-14 15:09:48</sys_created_on><sys_id>1529da7adbdaa7c076d6b94ffe961953</sys_id><sys_mod_count>1</sys_mod_count><sys_name>cicd-integration.server.pullrequest.header-secret.CICD Integration</sys_name><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_update_name>sys_properties_category_m2m_1529da7adbdaa7c076d6b94ffe961953</sys_update_name><sys_updated_by>b.moers</sys_updated_by><sys_updated_on>2018-12-14 15:10:00</sys_updated_on></sys_properties_category_m2m></record_update>]]></payload>
<payload_hash>-1710080038</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:51</sys_created_on>
<sys_id>cc539f732f15b850d8455aab2799b61e</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c995c0000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:51</sys_updated_on>
<table/>
<target_name>cicd-integration.server.pullrequest.header-secret.CICD Integration</target_name>
<type>Category Property</type>
<update_domain>global</update_domain>
<update_guid>a382cca8e1777300a6c4b55dbe7632ce</update_guid>
<update_guid_history>1e7abbd035777300c70eb8fb74cca81b:-1710080038,1e7abbd035777300c70eb8fb74cca81b:-1710080038,1e7abbd035777300c70eb8fb74cca81b:-1710080038,59ea9b3bd757a780322773ec0804e9b7:340326930,cc395a7af2daa7c02c5db6723bcefc16:33830570,11291e7ae6daa7c045395e3a8a6e337f:-1043669912</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_ws_operation_a72a5229dbdbaf40ee93b14ffe9619bf</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_ws_operation"&gt;&lt;sys_ws_operation action="INSERT_OR_UPDATE"&gt;&lt;active&gt;true&lt;/active&gt;&lt;consumes&gt;application/json,application/xml,text/xml&lt;/consumes&gt;&lt;consumes_customized&gt;false&lt;/consumes_customized&gt;&lt;default_operation_uri&gt;/api/devops/cicd/export_application/{appId}&lt;/default_operation_uri&gt;&lt;enforce_acl&gt;1a7833bddbb31f0076d6b94ffe961994&lt;/enforce_acl&gt;&lt;http_method&gt;GET&lt;/http_method&gt;&lt;name&gt;CI - Export Application as UpdateSet XML&lt;/name&gt;&lt;operation_script&gt;&lt;![CDATA[(function process(/*RESTAPIRequest*/ request, /*RESTAPIResponse*/ response) {
	
	return new CiCdApi(request, response).publishToUpdateSet(request.pathParams.appId);
	
})(request, response);]]&gt;&lt;/operation_script&gt;&lt;operation_uri&gt;/api/devops/v1/cicd/export_application/{appId}&lt;/operation_uri&gt;&lt;produces&gt;application/json,application/xml,text/xml&lt;/produces&gt;&lt;produces_customized&gt;false&lt;/produces_customized&gt;&lt;relative_path&gt;/export_application/{appId}&lt;/relative_path&gt;&lt;request_example/&gt;&lt;requires_acl_authorization&gt;true&lt;/requires_acl_authorization&gt;&lt;requires_authentication&gt;true&lt;/requires_authentication&gt;&lt;requires_snc_internal_role&gt;false&lt;/requires_snc_internal_role&gt;&lt;short_description&gt;Get all XML records of an UpdateSet&lt;/short_description&gt;&lt;sys_class_name&gt;sys_ws_operation&lt;/sys_class_name&gt;&lt;sys_created_by&gt;b.moers&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2019-01-29 11:04:44&lt;/sys_created_on&gt;&lt;sys_id&gt;a72a5229dbdbaf40ee93b14ffe9619bf&lt;/sys_id&gt;&lt;sys_mod_count&gt;8&lt;/sys_mod_count&gt;&lt;sys_name&gt;CI - Export Application as UpdateSet XML&lt;/sys_name&gt;&lt;sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e"&gt;19190fabdbebd300dfa9b94ffe96193e&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="CICD Integration"&gt;19190fabdbebd300dfa9b94ffe96193e&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_ws_operation_a72a5229dbdbaf40ee93b14ffe9619bf&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;b.moers&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2019-01-30 11:57:58&lt;/sys_updated_on&gt;&lt;web_service_definition display_value="CICD Integration"&gt;81eccb6fdbebd300dfa9b94ffe96190e&lt;/web_service_definition&gt;&lt;web_service_version display_value="v1"&gt;0a3dcb2fdbebd300dfa9b94ffe9619c7&lt;/web_service_version&gt;&lt;/sys_ws_operation&gt;&lt;/record_update&gt;</payload>
<payload_hash>-2056120977</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:52</sys_created_on>
<sys_id>d05357b32f15b850d8455aab2799b6b9</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c9aff0000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:52</sys_updated_on>
<table/>
<target_name>CI - Export Application as UpdateSet XML</target_name>
<type>Scripted REST Resource</type>
<update_domain>global</update_domain>
<update_guid>089200e851777300d165121fea7d8688</update_guid>
<update_guid_history>9e7abbd045777300896c874e899af60f:-2056120977,9e7abbd045777300896c874e899af60f:-2056120977,9e7abbd045777300896c874e899af60f:-2056120977,0dff27b1f61323800a32194a7c73ec4a:-1294684039,0dff27b1f61323800a32194a7c73ec4a:-1294684039,49cac3e5069faf404201cc0dbcabbd75:-429965793,dcde3ead655faf40f66c4f3ca8e998da:-1016556536,6ded7ee93a5faf4033e01935e3dceabd:1691835752,a8cdbe6d435faf40ca1924a8643b2670:-1016556536,e09f1ee558dbaf40fdd5b66e7b728b50:262884215,ef2bd22d98dbaf40853216782c72ce23:-1487467234,dd8a562df5dbaf40941c19652cedc246:1412801799,2f2a5229b6dbaf4010a293a1e58701c0:1064911890</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_ws_query_parameter_map_17b2e35adb1667c076d6b94ffe96194c</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ws_query_parameter_map"><sys_ws_query_parameter_map action="INSERT_OR_UPDATE"><sys_class_name>sys_ws_query_parameter_map</sys_class_name><sys_created_by>b.moers</sys_created_by><sys_created_on>2018-12-13 07:14:23</sys_created_on><sys_id>17b2e35adb1667c076d6b94ffe96194c</sys_id><sys_mod_count>0</sys_mod_count><sys_name>db836e29dbb3db0076d6b94ffe961976</sys_name><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_update_name>sys_ws_query_parameter_map_17b2e35adb1667c076d6b94ffe96194c</sys_update_name><sys_updated_by>b.moers</sys_updated_by><sys_updated_on>2018-12-13 07:14:23</sys_updated_on><web_service_operation display_value="CI - Get Scope Details">2082ef56db1667c076d6b94ffe961972</web_service_operation><web_service_query_parameter display_value="sysparm_query_category">db836e29dbb3db0076d6b94ffe961976</web_service_query_parameter></sys_ws_query_parameter_map></record_update>]]></payload>
<payload_hash>1419076782</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:52</sys_created_on>
<sys_id>d05357b32f15b850d8455aab2799b6bc</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c992c0000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:52</sys_updated_on>
<table/>
<target_name>db836e29dbb3db0076d6b94ffe961976</target_name>
<type>Scripted REST Query Parameter Associatio</type>
<update_domain>global</update_domain>
<update_guid>809200e88577730068fc44ca45b16da1</update_guid>
<update_guid_history>e27abbd0477773004b66bc938ef2a23d:1419076782,e27abbd0477773004b66bc938ef2a23d:1419076782,e27abbd0477773004b66bc938ef2a23d:1419076782,57b2e35abc1667c028c4e34cbbcbc64d:38876662</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_ws_query_parameter_map_dab8c2a5db73db0076d6b94ffe961988</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ws_query_parameter_map"><sys_ws_query_parameter_map action="INSERT_OR_UPDATE"><sys_class_name>sys_ws_query_parameter_map</sys_class_name><sys_created_by>b.moers</sys_created_by><sys_created_on>2018-08-08 10:11:24</sys_created_on><sys_id>dab8c2a5db73db0076d6b94ffe961988</sys_id><sys_mod_count>0</sys_mod_count><sys_name>12c846a5db73db0076d6b94ffe961917</sys_name><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_update_name>sys_ws_query_parameter_map_dab8c2a5db73db0076d6b94ffe961988</sys_update_name><sys_updated_by>b.moers</sys_updated_by><sys_updated_on>2018-08-08 10:11:24</sys_updated_on><web_service_operation display_value="CI - Get UpdateSet Files">4f6a31a9db33db0076d6b94ffe9619fa</web_service_operation><web_service_query_parameter display_value="sysparm_limit">12c846a5db73db0076d6b94ffe961917</web_service_query_parameter></sys_ws_query_parameter_map></record_update>]]></payload>
<payload_hash>-64079780</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:52</sys_created_on>
<sys_id>d05357b32f15b850d8455aab2799b6bf</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c92540000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:52</sys_updated_on>
<table/>
<target_name>12c846a5db73db0076d6b94ffe961917</target_name>
<type>Scripted REST Query Parameter Associatio</type>
<update_domain>global</update_domain>
<update_guid>409200e82a777300928148305cb8abc4</update_guid>
<update_guid_history>a27abbd0b077730078283ba325ccfe64:-64079780,a27abbd0b077730078283ba325ccfe64:-64079780,a27abbd0b077730078283ba325ccfe64:-64079780,29eadb3b5257a78032503fd07755e100:150208212,39590665ab73db00114077937dbcd1c2:20586784</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_ws_operation_7f82aa29dbb3db0076d6b94ffe9619af</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_ws_operation"&gt;&lt;sys_ws_operation action="INSERT_OR_UPDATE"&gt;&lt;active&gt;true&lt;/active&gt;&lt;consumes&gt;application/json,application/xml,text/xml&lt;/consumes&gt;&lt;consumes_customized&gt;false&lt;/consumes_customized&gt;&lt;default_operation_uri&gt;/api/devops/cicd/test_in_suites&lt;/default_operation_uri&gt;&lt;enforce_acl&gt;1a7833bddbb31f0076d6b94ffe961994&lt;/enforce_acl&gt;&lt;http_method&gt;GET&lt;/http_method&gt;&lt;name&gt;CI - Get All Test In Suites&lt;/name&gt;&lt;operation_script&gt;&lt;![CDATA[(function process(/*RESTAPIRequest*/ request, /*RESTAPIResponse*/ response) {
	
	return new CiCdApi(request, response).getAllTestInSuites();

})(request, response);]]&gt;&lt;/operation_script&gt;&lt;operation_uri&gt;/api/devops/v1/cicd/test_in_suites&lt;/operation_uri&gt;&lt;produces&gt;application/json,application/xml,text/xml&lt;/produces&gt;&lt;produces_customized&gt;false&lt;/produces_customized&gt;&lt;relative_path&gt;/test_in_suites&lt;/relative_path&gt;&lt;request_example/&gt;&lt;requires_acl_authorization&gt;true&lt;/requires_acl_authorization&gt;&lt;requires_authentication&gt;true&lt;/requires_authentication&gt;&lt;requires_snc_internal_role&gt;true&lt;/requires_snc_internal_role&gt;&lt;short_description&gt;Get all Tests assigned to a Test Suite&lt;/short_description&gt;&lt;sys_class_name&gt;sys_ws_operation&lt;/sys_class_name&gt;&lt;sys_created_by&gt;b.moers&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2018-08-08 12:01:35&lt;/sys_created_on&gt;&lt;sys_id&gt;7f82aa29dbb3db0076d6b94ffe9619af&lt;/sys_id&gt;&lt;sys_mod_count&gt;6&lt;/sys_mod_count&gt;&lt;sys_name&gt;CI - Get All Test In Suites&lt;/sys_name&gt;&lt;sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e"&gt;19190fabdbebd300dfa9b94ffe96193e&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="CICD Integration"&gt;19190fabdbebd300dfa9b94ffe96193e&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_ws_operation_7f82aa29dbb3db0076d6b94ffe9619af&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;b.moers&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2018-10-09 14:37:05&lt;/sys_updated_on&gt;&lt;web_service_definition display_value="CICD Integration"&gt;81eccb6fdbebd300dfa9b94ffe96190e&lt;/web_service_definition&gt;&lt;web_service_version display_value="v1"&gt;0a3dcb2fdbebd300dfa9b94ffe9619c7&lt;/web_service_version&gt;&lt;/sys_ws_operation&gt;&lt;/record_update&gt;</payload>
<payload_hash>-1442348176</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:52</sys_created_on>
<sys_id>d45357b32f15b850d8455aab2799b6b8</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c96410000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:52</sys_updated_on>
<table/>
<target_name>CI - Get All Test In Suites</target_name>
<type>Scripted REST Resource</type>
<update_domain>global</update_domain>
<update_guid>009200e896777300a51b58b7271ca782</update_guid>
<update_guid_history>967abbd09f777300fa4aa541ed148209:-1442348176,967abbd09f777300fa4aa541ed148209:-1442348176,967abbd09f777300fa4aa541ed148209:-1442348176,d6b816251f4dab80700ca5027569307c:-100340205,d6b816251f4dab80700ca5027569307c:-100340205,1fb8b7bd0eb31f00c7b45453776af070:-1274703820,026667bd0c731f00b4704bbf70fa0444:-1632211804,e706a7bdb0731f00041e4e7d44ddd043:1974212718,e23ac4f1e8f7db007d482eacab2c4fcd:1798362487,f02a0c7962b7db0041807ba1ef6fe9db:2104637547,7382aa2935b3db008c8fd052d2bd62b1:948453460</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_ws_query_parameter_f4636669dbb3db0076d6b94ffe961901</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ws_query_parameter"><sys_ws_query_parameter action="INSERT_OR_UPDATE"><example_value/><name>sysparm_query</name><required>false</required><short_description>An encoded query string used to filter the results</short_description><sys_class_name>sys_ws_query_parameter</sys_class_name><sys_created_by>b.moers</sys_created_by><sys_created_on>2018-08-08 12:05:12</sys_created_on><sys_id>f4636669dbb3db0076d6b94ffe961901</sys_id><sys_mod_count>0</sys_mod_count><sys_name>sysparm_query</sys_name><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_update_name>sys_ws_query_parameter_f4636669dbb3db0076d6b94ffe961901</sys_update_name><sys_updated_by>b.moers</sys_updated_by><sys_updated_on>2018-08-08 12:05:12</sys_updated_on><web_service_definition display_value="CICD Integration">81eccb6fdbebd300dfa9b94ffe96190e</web_service_definition></sys_ws_query_parameter></record_update>]]></payload>
<payload_hash>1107812843</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:52</sys_created_on>
<sys_id>d45357b32f15b850d8455aab2799b6bb</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c92ab0000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:52</sys_updated_on>
<table/>
<target_name>sysparm_query</target_name>
<type>Scripted REST Query Parameter</type>
<update_domain>global</update_domain>
<update_guid>409200e8b67773006c4122fb63fc379b</update_guid>
<update_guid_history>3a7abbd07c7773004158248dffa0a99b:1107812843,3a7abbd07c7773004158248dffa0a99b:1107812843,3a7abbd07c7773004158248dffa0a99b:1107812843,7463666990b3db0082f5c17b2fb9db02:637193011</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_ws_query_parameter_map_79e92a31dbffdb0076d6b94ffe9619ef</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ws_query_parameter_map"><sys_ws_query_parameter_map action="INSERT_OR_UPDATE"><sys_class_name>sys_ws_query_parameter_map</sys_class_name><sys_created_by>b.moers</sys_created_by><sys_created_on>2018-08-09 07:12:20</sys_created_on><sys_id>79e92a31dbffdb0076d6b94ffe9619ef</sys_id><sys_mod_count>0</sys_mod_count><sys_name>8d336669dbb3db0076d6b94ffe96193e</sys_name><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_update_name>sys_ws_query_parameter_map_79e92a31dbffdb0076d6b94ffe9619ef</sys_update_name><sys_updated_by>b.moers</sys_updated_by><sys_updated_on>2018-08-09 07:12:20</sys_updated_on><web_service_operation display_value="CI - Get UpdateSet Details">dfe5f9e1db33db0076d6b94ffe96198a</web_service_operation><web_service_query_parameter display_value="sysparm_fields">8d336669dbb3db0076d6b94ffe96193e</web_service_query_parameter></sys_ws_query_parameter_map></record_update>]]></payload>
<payload_hash>-2113862737</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:52</sys_created_on>
<sys_id>d45357b32f15b850d8455aab2799b6be</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c93620000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:52</sys_updated_on>
<table/>
<target_name>8d336669dbb3db0076d6b94ffe96193e</target_name>
<type>Scripted REST Query Parameter Associatio</type>
<update_domain>global</update_domain>
<update_guid>809200e8a37773002bcb22d06163e7b2</update_guid>
<update_guid_history>aa7abbd0b677730080da9d762c44865d:-2113862737,aa7abbd0b677730080da9d762c44865d:-2113862737,aa7abbd0b677730080da9d762c44865d:-2113862737,65ea9b3b6857a7809ede95a2035d41fc:-999199433,30f9aa31b9ffdb001dc6c1525a690741:-586408459</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_ws_operation_4f6a31a9db33db0076d6b94ffe9619fa</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_ws_operation"&gt;&lt;sys_ws_operation action="INSERT_OR_UPDATE"&gt;&lt;active&gt;true&lt;/active&gt;&lt;consumes&gt;application/json,application/xml,text/xml&lt;/consumes&gt;&lt;consumes_customized&gt;false&lt;/consumes_customized&gt;&lt;default_operation_uri&gt;/api/devops/cicd/updateset_files/{updateSetSysId}&lt;/default_operation_uri&gt;&lt;enforce_acl&gt;1a7833bddbb31f0076d6b94ffe961994&lt;/enforce_acl&gt;&lt;http_method&gt;GET&lt;/http_method&gt;&lt;name&gt;CI - Get UpdateSet Files&lt;/name&gt;&lt;operation_script&gt;&lt;![CDATA[(function process(/*RESTAPIRequest*/ request, /*RESTAPIResponse*/ response) {
	
	return new CiCdApi(request, response).getUpdateSetFiles(request.pathParams.updateSetSysId);

})(request, response);]]&gt;&lt;/operation_script&gt;&lt;operation_uri&gt;/api/devops/v1/cicd/updateset_files/{updateSetSysId}&lt;/operation_uri&gt;&lt;produces&gt;application/json,application/xml,text/xml&lt;/produces&gt;&lt;produces_customized&gt;false&lt;/produces_customized&gt;&lt;relative_path&gt;/updateset_files/{updateSetSysId}&lt;/relative_path&gt;&lt;request_example/&gt;&lt;requires_acl_authorization&gt;true&lt;/requires_acl_authorization&gt;&lt;requires_authentication&gt;true&lt;/requires_authentication&gt;&lt;requires_snc_internal_role&gt;true&lt;/requires_snc_internal_role&gt;&lt;short_description&gt;Get all XML records of an UpdateSet&lt;/short_description&gt;&lt;sys_class_name&gt;sys_ws_operation&lt;/sys_class_name&gt;&lt;sys_created_by&gt;b.moers&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2018-08-08 09:06:13&lt;/sys_created_on&gt;&lt;sys_id&gt;4f6a31a9db33db0076d6b94ffe9619fa&lt;/sys_id&gt;&lt;sys_mod_count&gt;8&lt;/sys_mod_count&gt;&lt;sys_name&gt;CI - Get UpdateSet Files&lt;/sys_name&gt;&lt;sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e"&gt;19190fabdbebd300dfa9b94ffe96193e&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="CICD Integration"&gt;19190fabdbebd300dfa9b94ffe96193e&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_ws_operation_4f6a31a9db33db0076d6b94ffe9619fa&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;b.moers&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2018-10-09 14:38:25&lt;/sys_updated_on&gt;&lt;web_service_definition display_value="CICD Integration"&gt;81eccb6fdbebd300dfa9b94ffe96190e&lt;/web_service_definition&gt;&lt;web_service_version display_value="v1"&gt;0a3dcb2fdbebd300dfa9b94ffe9619c7&lt;/web_service_version&gt;&lt;/sys_ws_operation&gt;&lt;/record_update&gt;</payload>
<payload_hash>2056106894</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:52</sys_created_on>
<sys_id>d85357b32f15b850d8455aab2799b6b7</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c965d0000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:52</sys_updated_on>
<table/>
<target_name>CI - Get UpdateSet Files</target_name>
<type>Scripted REST Resource</type>
<update_domain>global</update_domain>
<update_guid>489200e85b7773003859eda1b563947b</update_guid>
<update_guid_history>9e7abbd043777300be76448b506eda02:2056106894,9e7abbd043777300be76448b506eda02:2056106894,9e7abbd043777300be76448b506eda02:2056106894,71099a69b44dab80883e0c78132027e6:173424057,71099a69b44dab80883e0c78132027e6:173424057,49f833bd17b31f003d53e1d629f8059b:2102874874,9576e3bd29731f0049d84eaa30e162e5:-2086455158,a9462bbd6c731f00818a6c3913f75d59:362701036,e8c26e2990b3db000bfdb29f0970516f:-634354408,05788e65c173db0008a32b23ae96c529:-775244567,dd0846658f73db0020a8eeacf594010b:-654839321,8b678265b873db00df08b900fe0dc2bd:-1411129690,0f6a31a96033db00de42203f7b0ee6fb:-1395261670</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_ws_query_parameter_8d336669dbb3db0076d6b94ffe96193e</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ws_query_parameter"><sys_ws_query_parameter action="INSERT_OR_UPDATE"><example_value/><name>sysparm_fields</name><required>false</required><short_description>A comma-separated list of fields to return in the response</short_description><sys_class_name>sys_ws_query_parameter</sys_class_name><sys_created_by>b.moers</sys_created_by><sys_created_on>2018-08-08 12:04:48</sys_created_on><sys_id>8d336669dbb3db0076d6b94ffe96193e</sys_id><sys_mod_count>0</sys_mod_count><sys_name>sysparm_fields</sys_name><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_update_name>sys_ws_query_parameter_8d336669dbb3db0076d6b94ffe96193e</sys_update_name><sys_updated_by>b.moers</sys_updated_by><sys_updated_on>2018-08-08 12:04:48</sys_updated_on><web_service_definition display_value="CICD Integration">81eccb6fdbebd300dfa9b94ffe96190e</web_service_definition></sys_ws_query_parameter></record_update>]]></payload>
<payload_hash>584601208</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:52</sys_created_on>
<sys_id>d85357b32f15b850d8455aab2799b6ba</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c92940000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:52</sys_updated_on>
<table/>
<target_name>sysparm_fields</target_name>
<type>Scripted REST Query Parameter</type>
<update_domain>global</update_domain>
<update_guid>449200e8d4777300e128c144aa1e3695</update_guid>
<update_guid_history>327abbd0437773008511a0db1d2ec395:584601208,327abbd0437773008511a0db1d2ec395:584601208,327abbd0437773008511a0db1d2ec395:584601208,c343a66966b3db00d427c06cbdfb2275:-1573573632</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_ws_query_parameter_map_5dcde335dbb31f0076d6b94ffe96198a</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ws_query_parameter_map"><sys_ws_query_parameter_map action="INSERT_OR_UPDATE"><sys_class_name>sys_ws_query_parameter_map</sys_class_name><sys_created_by>b.moers</sys_created_by><sys_created_on>2018-08-09 12:08:44</sys_created_on><sys_id>5dcde335dbb31f0076d6b94ffe96198a</sys_id><sys_mod_count>0</sys_mod_count><sys_name>8d336669dbb3db0076d6b94ffe96193e</sys_name><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_update_name>sys_ws_query_parameter_map_5dcde335dbb31f0076d6b94ffe96198a</sys_update_name><sys_updated_by>b.moers</sys_updated_by><sys_updated_on>2018-08-09 12:08:44</sys_updated_on><web_service_operation display_value="CI - Set UpdateSet Status">0dc4a3f9db731f0076d6b94ffe961989</web_service_operation><web_service_query_parameter display_value="sysparm_fields">8d336669dbb3db0076d6b94ffe96193e</web_service_query_parameter></sys_ws_query_parameter_map></record_update>]]></payload>
<payload_hash>1317557771</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:52</sys_created_on>
<sys_id>d85357b32f15b850d8455aab2799b6bd</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c94ef0000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:52</sys_updated_on>
<table/>
<target_name>8d336669dbb3db0076d6b94ffe96193e</target_name>
<type>Scripted REST Query Parameter Associatio</type>
<update_domain>global</update_domain>
<update_guid>089200e865777300571dcfd5285633ac</update_guid>
<update_guid_history>227abbd06177730092bb21d27c472f57:1317557771,227abbd06177730092bb21d27c472f57:1317557771,227abbd06177730092bb21d27c472f57:1317557771,e6cdabbd4d731f00af887ef1901c68c5:522230659</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_ws_operation_15a0fd61db33db0076d6b94ffe961987</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_ws_operation"&gt;&lt;sys_ws_operation action="INSERT_OR_UPDATE"&gt;&lt;active&gt;true&lt;/active&gt;&lt;consumes&gt;application/json,application/xml,text/xml&lt;/consumes&gt;&lt;consumes_customized&gt;false&lt;/consumes_customized&gt;&lt;default_operation_uri&gt;/api/devops/cicd/user/{userId}&lt;/default_operation_uri&gt;&lt;enforce_acl&gt;1a7833bddbb31f0076d6b94ffe961994&lt;/enforce_acl&gt;&lt;http_method&gt;GET&lt;/http_method&gt;&lt;name&gt;CI - Get User Details&lt;/name&gt;&lt;operation_script&gt;&lt;![CDATA[(function process(/*RESTAPIRequest*/ request, /*RESTAPIResponse*/ response) {

    return new CiCdApi(request, response).getUserById(request.pathParams.userId);

})(request, response);]]&gt;&lt;/operation_script&gt;&lt;operation_uri&gt;/api/devops/v1/cicd/user/{userId}&lt;/operation_uri&gt;&lt;produces&gt;application/json,application/xml,text/xml&lt;/produces&gt;&lt;produces_customized&gt;false&lt;/produces_customized&gt;&lt;relative_path&gt;/user/{userId}&lt;/relative_path&gt;&lt;request_example/&gt;&lt;requires_acl_authorization&gt;true&lt;/requires_acl_authorization&gt;&lt;requires_authentication&gt;true&lt;/requires_authentication&gt;&lt;requires_snc_internal_role&gt;true&lt;/requires_snc_internal_role&gt;&lt;short_description&gt;Get Details of a User&lt;/short_description&gt;&lt;sys_class_name&gt;sys_ws_operation&lt;/sys_class_name&gt;&lt;sys_created_by&gt;b.moers&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2018-08-08 08:23:30&lt;/sys_created_on&gt;&lt;sys_id&gt;15a0fd61db33db0076d6b94ffe961987&lt;/sys_id&gt;&lt;sys_mod_count&gt;4&lt;/sys_mod_count&gt;&lt;sys_name&gt;CI - Get User Details&lt;/sys_name&gt;&lt;sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e"&gt;19190fabdbebd300dfa9b94ffe96193e&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="CICD Integration"&gt;19190fabdbebd300dfa9b94ffe96193e&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_ws_operation_15a0fd61db33db0076d6b94ffe961987&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;b.moers&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2018-08-09 12:58:09&lt;/sys_updated_on&gt;&lt;web_service_definition display_value="CICD Integration"&gt;81eccb6fdbebd300dfa9b94ffe96190e&lt;/web_service_definition&gt;&lt;web_service_version display_value="v1"&gt;0a3dcb2fdbebd300dfa9b94ffe9619c7&lt;/web_service_version&gt;&lt;/sys_ws_operation&gt;&lt;/record_update&gt;</payload>
<payload_hash>-181589397</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:52</sys_created_on>
<sys_id>dc5357b32f15b850d8455aab2799b6b6</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c95220000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:52</sys_updated_on>
<table/>
<target_name>CI - Get User Details</target_name>
<type>Scripted REST Resource</type>
<update_domain>global</update_domain>
<update_guid>809200e8247773000cbeb28b89f1b475</update_guid>
<update_guid_history>967a7bd0ae777300542eeee9c6a6b5fc:-181589397,967a7bd0ae777300542eeee9c6a6b5fc:-181589397,967a7bd0ae777300542eeee9c6a6b5fc:-181589397,5a19f3bda7b31f00486095e6aec336d8:-1101219232,5a19f3bda7b31f00486095e6aec336d8:-1101219232,da76e3bd1e731f00dd394d8cba9faeb7:-783390736,cf566bbdff731f008e1dd58059453c45:-1168694288,5bb07d216833db0072065a7f67ab46ff:-58226734,19a0fd61f733db00fa4541de95837088:2063255239</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_ws_operation_dfe5f9e1db33db0076d6b94ffe96198a</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_ws_operation"&gt;&lt;sys_ws_operation action="INSERT_OR_UPDATE"&gt;&lt;active&gt;true&lt;/active&gt;&lt;consumes&gt;application/json,application/xml,text/xml&lt;/consumes&gt;&lt;consumes_customized&gt;false&lt;/consumes_customized&gt;&lt;default_operation_uri&gt;/api/devops/cicd/updateset/{updateSetSysId}&lt;/default_operation_uri&gt;&lt;enforce_acl&gt;1a7833bddbb31f0076d6b94ffe961994&lt;/enforce_acl&gt;&lt;http_method&gt;GET&lt;/http_method&gt;&lt;name&gt;CI - Get UpdateSet Details&lt;/name&gt;&lt;operation_script&gt;&lt;![CDATA[(function process(/*RESTAPIRequest*/ request, /*RESTAPIResponse*/ response) {

    return new CiCdApi(request, response).getUpdateSetDetails(request.pathParams.updateSetSysId);

})(request, response);]]&gt;&lt;/operation_script&gt;&lt;operation_uri&gt;/api/devops/v1/cicd/updateset/{updateSetSysId}&lt;/operation_uri&gt;&lt;produces&gt;application/json,application/xml,text/xml&lt;/produces&gt;&lt;produces_customized&gt;false&lt;/produces_customized&gt;&lt;relative_path&gt;/updateset/{updateSetSysId}&lt;/relative_path&gt;&lt;request_example/&gt;&lt;requires_acl_authorization&gt;true&lt;/requires_acl_authorization&gt;&lt;requires_authentication&gt;true&lt;/requires_authentication&gt;&lt;requires_snc_internal_role&gt;true&lt;/requires_snc_internal_role&gt;&lt;short_description&gt;Get Details of an UpdateSet&lt;/short_description&gt;&lt;sys_class_name&gt;sys_ws_operation&lt;/sys_class_name&gt;&lt;sys_created_by&gt;b.moers&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2018-08-08 08:46:34&lt;/sys_created_on&gt;&lt;sys_id&gt;dfe5f9e1db33db0076d6b94ffe96198a&lt;/sys_id&gt;&lt;sys_mod_count&gt;4&lt;/sys_mod_count&gt;&lt;sys_name&gt;CI - Get UpdateSet Details&lt;/sys_name&gt;&lt;sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e"&gt;19190fabdbebd300dfa9b94ffe96193e&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="CICD Integration"&gt;19190fabdbebd300dfa9b94ffe96193e&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_ws_operation_dfe5f9e1db33db0076d6b94ffe96198a&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;b.moers&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2018-10-04 14:04:30&lt;/sys_updated_on&gt;&lt;web_service_definition display_value="CICD Integration"&gt;81eccb6fdbebd300dfa9b94ffe96190e&lt;/web_service_definition&gt;&lt;web_service_version display_value="v1"&gt;0a3dcb2fdbebd300dfa9b94ffe9619c7&lt;/web_service_version&gt;&lt;/sys_ws_operation&gt;&lt;/record_update&gt;</payload>
<payload_hash>-262444329</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:52</sys_created_on>
<sys_id>dc5357b32f15b850d8455aab2799b6b9</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c95f60000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:52</sys_updated_on>
<table/>
<target_name>CI - Get UpdateSet Details</target_name>
<type>Scripted REST Resource</type>
<update_domain>global</update_domain>
<update_guid>409200e8bb77730098f5bef6c6f0008f</update_guid>
<update_guid_history>1e7abbd0757773006cef282c27ca4614:-262444329,1e7abbd0757773006cef282c27ca4614:-262444329,1e7abbd0757773006cef282c27ca4614:-262444329,1c51a4849505278008f030eba49fc7bc:1077091370,1c51a4849505278008f030eba49fc7bc:1077091370,ed097bbd49b31f00c2c85fd22af15917:620689582,2c7663bd0b731f00ab456ac1ec55e6ac:659993150,3d3627bdde731f00f8d9c8a14beaedfb:1988034140,9fe5f9e1d633db002146f82d17b1c58b:-725880722</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_ws_query_parameter_map_342daeb1dbffdb0076d6b94ffe9619d0</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ws_query_parameter_map"><sys_ws_query_parameter_map action="INSERT_OR_UPDATE"><sys_class_name>sys_ws_query_parameter_map</sys_class_name><sys_created_by>b.moers</sys_created_by><sys_created_on>2018-08-09 07:26:21</sys_created_on><sys_id>342daeb1dbffdb0076d6b94ffe9619d0</sys_id><sys_mod_count>0</sys_mod_count><sys_name>db836e29dbb3db0076d6b94ffe961976</sys_name><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_update_name>sys_ws_query_parameter_map_342daeb1dbffdb0076d6b94ffe9619d0</sys_update_name><sys_updated_by>b.moers</sys_updated_by><sys_updated_on>2018-08-09 07:26:21</sys_updated_on><web_service_operation display_value="CI - Get Files from Table">f3cca2b1dbffdb0076d6b94ffe96191e</web_service_operation><web_service_query_parameter display_value="sysparm_query_category">db836e29dbb3db0076d6b94ffe961976</web_service_query_parameter></sys_ws_query_parameter_map></record_update>]]></payload>
<payload_hash>531860792</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:52</sys_created_on>
<sys_id>dc5357b32f15b850d8455aab2799b6bc</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c94630000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:52</sys_updated_on>
<table/>
<target_name>db836e29dbb3db0076d6b94ffe961976</target_name>
<type>Scripted REST Query Parameter Associatio</type>
<update_domain>global</update_domain>
<update_guid>8c9200e8fb77730096e0aca1f04133a6</update_guid>
<update_guid_history>a67abbd0de7773001e9341c051ea3e50:531860792,a67abbd0de7773001e9341c051ea3e50:531860792,a67abbd0de7773001e9341c051ea3e50:531860792,a5ea9b3b7b57a7802673a4ac9b3539f3:-1287989520,c22daaf1e3ffdb00e9df75ff74454119:-99107014</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</application>
<category>customer</category>
<comments/>
<name>sys_ws_query_parameter_map_f44baa71dbffdb0076d6b94ffe9619c5</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ws_query_parameter_map"><sys_ws_query_parameter_map action="INSERT_OR_UPDATE"><sys_class_name>sys_ws_query_parameter_map</sys_class_name><sys_created_by>b.moers</sys_created_by><sys_created_on>2018-08-09 07:18:09</sys_created_on><sys_id>f44baa71dbffdb0076d6b94ffe9619c5</sys_id><sys_mod_count>0</sys_mod_count><sys_name>db836e29dbb3db0076d6b94ffe961976</sys_name><sys_package display_value="CICD Integration" source="19190fabdbebd300dfa9b94ffe96193e">19190fabdbebd300dfa9b94ffe96193e</sys_package><sys_policy/><sys_scope display_value="CICD Integration">19190fabdbebd300dfa9b94ffe96193e</sys_scope><sys_update_name>sys_ws_query_parameter_map_f44baa71dbffdb0076d6b94ffe9619c5</sys_update_name><sys_updated_by>b.moers</sys_updated_by><sys_updated_on>2018-08-09 07:18:09</sys_updated_on><web_service_operation display_value="CI - Get All Test In Suites">7f82aa29dbb3db0076d6b94ffe9619af</web_service_operation><web_service_query_parameter display_value="sysparm_query_category">db836e29dbb3db0076d6b94ffe961976</web_service_query_parameter></sys_ws_query_parameter_map></record_update>]]></payload>
<payload_hash>636901037</payload_hash>
<remote_update_set display_value="CICD Integration - 1.4.18">80539f732f15b850d8455aab2799b619</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2021-07-19 09:50:52</sys_created_on>
<sys_id>dc5357b32f15b850d8455aab2799b6bf</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17abe2c93ea0000001</sys_recorded_at>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2021-07-19 09:50:52</sys_updated_on>
<table/>
<target_name>db836e29dbb3db0076d6b94ffe961976</target_name>
<type>Scripted REST Query Parameter Associatio</type>
<update_domain>global</update_domain>
<update_guid>489200e8d77773001752c5fed206fbc9</update_guid>
<update_guid_history>627abbd036777300ea2d7e7ed9410377:636901037,627abbd036777300ea2d7e7ed9410377:636901037,627abbd036777300ea2d7e7ed9410377:636901037,69eadb3b0857a78063cefcea4f15d01d:-187559323,754b2e71b0ffdb001bda6c9741c202cf:-132771793</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
</unload>
